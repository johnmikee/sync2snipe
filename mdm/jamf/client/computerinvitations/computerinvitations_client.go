// Code generated by go-swagger; DO NOT EDIT.

package computerinvitations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new computerinvitations API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for computerinvitations API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateComputerInvitationsByID(params *CreateComputerInvitationsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateComputerInvitationsByIDCreated, error)

	CreateComputerInvitationsByInvitation(params *CreateComputerInvitationsByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateComputerInvitationsByInvitationCreated, error)

	DeleteComputerInvitationByID(params *DeleteComputerInvitationByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteComputerInvitationByIDOK, error)

	DeleteComputerInvitationByInvitation(params *DeleteComputerInvitationByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteComputerInvitationByInvitationOK, error)

	FindComputerInvitations(params *FindComputerInvitationsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindComputerInvitationsOK, error)

	FindComputerInvitationsByID(params *FindComputerInvitationsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindComputerInvitationsByIDOK, error)

	FindComputerInvitationsByInvitation(params *FindComputerInvitationsByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindComputerInvitationsByInvitationOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateComputerInvitationsByID creates a new computer invitation by id
*/
func (a *Client) CreateComputerInvitationsByID(params *CreateComputerInvitationsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateComputerInvitationsByIDCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateComputerInvitationsByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createComputerInvitationsById",
		Method:             "POST",
		PathPattern:        "/computerinvitations/id/{id}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateComputerInvitationsByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateComputerInvitationsByIDCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createComputerInvitationsById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateComputerInvitationsByInvitation creates a new computer invitation by invitation
*/
func (a *Client) CreateComputerInvitationsByInvitation(params *CreateComputerInvitationsByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateComputerInvitationsByInvitationCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateComputerInvitationsByInvitationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createComputerInvitationsByInvitation",
		Method:             "POST",
		PathPattern:        "/computerinvitations/invitation/{invitation}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateComputerInvitationsByInvitationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateComputerInvitationsByInvitationCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createComputerInvitationsByInvitation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteComputerInvitationByID deletes a computer invitation by id
*/
func (a *Client) DeleteComputerInvitationByID(params *DeleteComputerInvitationByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteComputerInvitationByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteComputerInvitationByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteComputerInvitationById",
		Method:             "DELETE",
		PathPattern:        "/computerinvitations/id/{id}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteComputerInvitationByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteComputerInvitationByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteComputerInvitationById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteComputerInvitationByInvitation deletes a computer invitation by invitation
*/
func (a *Client) DeleteComputerInvitationByInvitation(params *DeleteComputerInvitationByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteComputerInvitationByInvitationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteComputerInvitationByInvitationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteComputerInvitationByInvitation",
		Method:             "DELETE",
		PathPattern:        "/computerinvitations/invitation/{invitation}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteComputerInvitationByInvitationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteComputerInvitationByInvitationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteComputerInvitationByInvitation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindComputerInvitations finds all computer invitations
*/
func (a *Client) FindComputerInvitations(params *FindComputerInvitationsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindComputerInvitationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindComputerInvitationsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findComputerInvitations",
		Method:             "GET",
		PathPattern:        "/computerinvitations",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindComputerInvitationsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindComputerInvitationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findComputerInvitations: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindComputerInvitationsByID finds computer invitations by id
*/
func (a *Client) FindComputerInvitationsByID(params *FindComputerInvitationsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindComputerInvitationsByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindComputerInvitationsByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findComputerInvitationsById",
		Method:             "GET",
		PathPattern:        "/computerinvitations/id/{id}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindComputerInvitationsByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindComputerInvitationsByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findComputerInvitationsById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindComputerInvitationsByInvitation finds computer invitations by invitation
*/
func (a *Client) FindComputerInvitationsByInvitation(params *FindComputerInvitationsByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindComputerInvitationsByInvitationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindComputerInvitationsByInvitationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findComputerInvitationsByInvitation",
		Method:             "GET",
		PathPattern:        "/computerinvitations/invitation/{invitation}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindComputerInvitationsByInvitationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindComputerInvitationsByInvitationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findComputerInvitationsByInvitation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

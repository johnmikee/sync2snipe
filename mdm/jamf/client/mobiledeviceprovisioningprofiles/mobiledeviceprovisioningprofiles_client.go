// Code generated by go-swagger; DO NOT EDIT.

package mobiledeviceprovisioningprofiles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new mobiledeviceprovisioningprofiles API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for mobiledeviceprovisioningprofiles API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateMobileDeviceProvisioningProfilesByID(params *CreateMobileDeviceProvisioningProfilesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceProvisioningProfilesByIDCreated, error)

	CreateMobileDeviceProvisioningProfilesByName(params *CreateMobileDeviceProvisioningProfilesByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceProvisioningProfilesByNameCreated, error)

	CreateMobileDeviceProvisioningProfilesByUUID(params *CreateMobileDeviceProvisioningProfilesByUUIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceProvisioningProfilesByUUIDCreated, error)

	DeleteMobileDeviceProvisioningProfilesByID(params *DeleteMobileDeviceProvisioningProfilesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceProvisioningProfilesByIDOK, error)

	DeleteMobileDeviceProvisioningProfilesByName(params *DeleteMobileDeviceProvisioningProfilesByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceProvisioningProfilesByNameOK, error)

	DeleteMobileDeviceProvisioningProfilesByUUID(params *DeleteMobileDeviceProvisioningProfilesByUUIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceProvisioningProfilesByUUIDOK, error)

	FindMobileDeviceProvisioningProfiles(params *FindMobileDeviceProvisioningProfilesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceProvisioningProfilesOK, error)

	FindMobileDeviceProvisioningProfilesByID(params *FindMobileDeviceProvisioningProfilesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceProvisioningProfilesByIDOK, error)

	FindMobileDeviceProvisioningProfilesByName(params *FindMobileDeviceProvisioningProfilesByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceProvisioningProfilesByNameOK, error)

	FindMobileDeviceProvisioningProfilesByUUID(params *FindMobileDeviceProvisioningProfilesByUUIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceProvisioningProfilesByUUIDOK, error)

	UpdateMobileDeviceProvisioningProfilesByID(params *UpdateMobileDeviceProvisioningProfilesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateMobileDeviceProvisioningProfilesByIDOK, error)

	UpdateMobileDeviceProvisioningProfilesByName(params *UpdateMobileDeviceProvisioningProfilesByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateMobileDeviceProvisioningProfilesByNameOK, error)

	UpdateMobileDeviceProvisioningProfilesByUUID(params *UpdateMobileDeviceProvisioningProfilesByUUIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateMobileDeviceProvisioningProfilesByUUIDOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateMobileDeviceProvisioningProfilesByID creates a mobile device provisioning profiles by id
*/
func (a *Client) CreateMobileDeviceProvisioningProfilesByID(params *CreateMobileDeviceProvisioningProfilesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceProvisioningProfilesByIDCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateMobileDeviceProvisioningProfilesByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createMobileDeviceProvisioningProfilesById",
		Method:             "POST",
		PathPattern:        "/mobiledeviceprovisioningprofiles/id/{id}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateMobileDeviceProvisioningProfilesByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateMobileDeviceProvisioningProfilesByIDCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createMobileDeviceProvisioningProfilesById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateMobileDeviceProvisioningProfilesByName creates a mobile device provisioning profiles by name
*/
func (a *Client) CreateMobileDeviceProvisioningProfilesByName(params *CreateMobileDeviceProvisioningProfilesByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceProvisioningProfilesByNameCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateMobileDeviceProvisioningProfilesByNameParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createMobileDeviceProvisioningProfilesByName",
		Method:             "POST",
		PathPattern:        "/mobiledeviceprovisioningprofiles/name/{name}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateMobileDeviceProvisioningProfilesByNameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateMobileDeviceProvisioningProfilesByNameCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createMobileDeviceProvisioningProfilesByName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateMobileDeviceProvisioningProfilesByUUID creates a mobile device provisioning profiles by uuid
*/
func (a *Client) CreateMobileDeviceProvisioningProfilesByUUID(params *CreateMobileDeviceProvisioningProfilesByUUIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceProvisioningProfilesByUUIDCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateMobileDeviceProvisioningProfilesByUUIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createMobileDeviceProvisioningProfilesByUUID",
		Method:             "POST",
		PathPattern:        "/mobiledeviceprovisioningprofiles/uuid/{uuid}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateMobileDeviceProvisioningProfilesByUUIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateMobileDeviceProvisioningProfilesByUUIDCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createMobileDeviceProvisioningProfilesByUUID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteMobileDeviceProvisioningProfilesByID deletes a mobile device provisioning profiles by id
*/
func (a *Client) DeleteMobileDeviceProvisioningProfilesByID(params *DeleteMobileDeviceProvisioningProfilesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceProvisioningProfilesByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteMobileDeviceProvisioningProfilesByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteMobileDeviceProvisioningProfilesById",
		Method:             "DELETE",
		PathPattern:        "/mobiledeviceprovisioningprofiles/id/{id}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteMobileDeviceProvisioningProfilesByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteMobileDeviceProvisioningProfilesByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteMobileDeviceProvisioningProfilesById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteMobileDeviceProvisioningProfilesByName deletes a mobile device provisioning profiles by name
*/
func (a *Client) DeleteMobileDeviceProvisioningProfilesByName(params *DeleteMobileDeviceProvisioningProfilesByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceProvisioningProfilesByNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteMobileDeviceProvisioningProfilesByNameParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteMobileDeviceProvisioningProfilesByName",
		Method:             "DELETE",
		PathPattern:        "/mobiledeviceprovisioningprofiles/name/{name}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteMobileDeviceProvisioningProfilesByNameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteMobileDeviceProvisioningProfilesByNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteMobileDeviceProvisioningProfilesByName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteMobileDeviceProvisioningProfilesByUUID deletes a mobile device provisioning profiles by uuid
*/
func (a *Client) DeleteMobileDeviceProvisioningProfilesByUUID(params *DeleteMobileDeviceProvisioningProfilesByUUIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceProvisioningProfilesByUUIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteMobileDeviceProvisioningProfilesByUUIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteMobileDeviceProvisioningProfilesByUUID",
		Method:             "DELETE",
		PathPattern:        "/mobiledeviceprovisioningprofiles/uuid/{uuid}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteMobileDeviceProvisioningProfilesByUUIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteMobileDeviceProvisioningProfilesByUUIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteMobileDeviceProvisioningProfilesByUUID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindMobileDeviceProvisioningProfiles finds all mobile device provisioning profiles
*/
func (a *Client) FindMobileDeviceProvisioningProfiles(params *FindMobileDeviceProvisioningProfilesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceProvisioningProfilesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindMobileDeviceProvisioningProfilesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findMobileDeviceProvisioningProfiles",
		Method:             "GET",
		PathPattern:        "/mobiledeviceprovisioningprofiles",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindMobileDeviceProvisioningProfilesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindMobileDeviceProvisioningProfilesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findMobileDeviceProvisioningProfiles: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindMobileDeviceProvisioningProfilesByID finds a mobile device provisioning profiles by id
*/
func (a *Client) FindMobileDeviceProvisioningProfilesByID(params *FindMobileDeviceProvisioningProfilesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceProvisioningProfilesByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindMobileDeviceProvisioningProfilesByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findMobileDeviceProvisioningProfilesById",
		Method:             "GET",
		PathPattern:        "/mobiledeviceprovisioningprofiles/id/{id}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindMobileDeviceProvisioningProfilesByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindMobileDeviceProvisioningProfilesByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findMobileDeviceProvisioningProfilesById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindMobileDeviceProvisioningProfilesByName finds a mobile device provisioning profiles by name
*/
func (a *Client) FindMobileDeviceProvisioningProfilesByName(params *FindMobileDeviceProvisioningProfilesByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceProvisioningProfilesByNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindMobileDeviceProvisioningProfilesByNameParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findMobileDeviceProvisioningProfilesByName",
		Method:             "GET",
		PathPattern:        "/mobiledeviceprovisioningprofiles/name/{name}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindMobileDeviceProvisioningProfilesByNameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindMobileDeviceProvisioningProfilesByNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findMobileDeviceProvisioningProfilesByName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindMobileDeviceProvisioningProfilesByUUID finds a mobile device provisioning profiles by uuid
*/
func (a *Client) FindMobileDeviceProvisioningProfilesByUUID(params *FindMobileDeviceProvisioningProfilesByUUIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceProvisioningProfilesByUUIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindMobileDeviceProvisioningProfilesByUUIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findMobileDeviceProvisioningProfilesByUUID",
		Method:             "GET",
		PathPattern:        "/mobiledeviceprovisioningprofiles/uuid/{uuid}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindMobileDeviceProvisioningProfilesByUUIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindMobileDeviceProvisioningProfilesByUUIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findMobileDeviceProvisioningProfilesByUUID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateMobileDeviceProvisioningProfilesByID updates an existing mobile device provisioning profiles by id
*/
func (a *Client) UpdateMobileDeviceProvisioningProfilesByID(params *UpdateMobileDeviceProvisioningProfilesByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateMobileDeviceProvisioningProfilesByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateMobileDeviceProvisioningProfilesByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "updateMobileDeviceProvisioningProfilesById",
		Method:             "PUT",
		PathPattern:        "/mobiledeviceprovisioningprofiles/id/{id}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateMobileDeviceProvisioningProfilesByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateMobileDeviceProvisioningProfilesByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateMobileDeviceProvisioningProfilesById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateMobileDeviceProvisioningProfilesByName updates an existing mobile device provisioning profiles by name
*/
func (a *Client) UpdateMobileDeviceProvisioningProfilesByName(params *UpdateMobileDeviceProvisioningProfilesByNameParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateMobileDeviceProvisioningProfilesByNameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateMobileDeviceProvisioningProfilesByNameParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "updateMobileDeviceProvisioningProfilesByName",
		Method:             "PUT",
		PathPattern:        "/mobiledeviceprovisioningprofiles/name/{name}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateMobileDeviceProvisioningProfilesByNameReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateMobileDeviceProvisioningProfilesByNameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateMobileDeviceProvisioningProfilesByName: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UpdateMobileDeviceProvisioningProfilesByUUID updates an existing mobile device provisioning profiles by uuid
*/
func (a *Client) UpdateMobileDeviceProvisioningProfilesByUUID(params *UpdateMobileDeviceProvisioningProfilesByUUIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UpdateMobileDeviceProvisioningProfilesByUUIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateMobileDeviceProvisioningProfilesByUUIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "updateMobileDeviceProvisioningProfilesByUUID",
		Method:             "PUT",
		PathPattern:        "/mobiledeviceprovisioningprofiles/uuid/{uuid}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UpdateMobileDeviceProvisioningProfilesByUUIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateMobileDeviceProvisioningProfilesByUUIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for updateMobileDeviceProvisioningProfilesByUUID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

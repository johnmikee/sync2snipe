// Code generated by go-swagger; DO NOT EDIT.

package mobiledevices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteMobileDeviceBySerialNumberReader is a Reader for the DeleteMobileDeviceBySerialNumber structure.
type DeleteMobileDeviceBySerialNumberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMobileDeviceBySerialNumberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteMobileDeviceBySerialNumberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[DELETE /mobiledevices/serialnumber/{serialnumber}] deleteMobileDeviceBySerialNumber", response, response.Code())
	}
}

// NewDeleteMobileDeviceBySerialNumberOK creates a DeleteMobileDeviceBySerialNumberOK with default headers values
func NewDeleteMobileDeviceBySerialNumberOK() *DeleteMobileDeviceBySerialNumberOK {
	return &DeleteMobileDeviceBySerialNumberOK{}
}

/*
DeleteMobileDeviceBySerialNumberOK describes a response with status code 200, with default header values.

OK
*/
type DeleteMobileDeviceBySerialNumberOK struct {
}

// IsSuccess returns true when this delete mobile device by serial number o k response has a 2xx status code
func (o *DeleteMobileDeviceBySerialNumberOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete mobile device by serial number o k response has a 3xx status code
func (o *DeleteMobileDeviceBySerialNumberOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete mobile device by serial number o k response has a 4xx status code
func (o *DeleteMobileDeviceBySerialNumberOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete mobile device by serial number o k response has a 5xx status code
func (o *DeleteMobileDeviceBySerialNumberOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete mobile device by serial number o k response a status code equal to that given
func (o *DeleteMobileDeviceBySerialNumberOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete mobile device by serial number o k response
func (o *DeleteMobileDeviceBySerialNumberOK) Code() int {
	return 200
}

func (o *DeleteMobileDeviceBySerialNumberOK) Error() string {
	return fmt.Sprintf("[DELETE /mobiledevices/serialnumber/{serialnumber}][%d] deleteMobileDeviceBySerialNumberOK ", 200)
}

func (o *DeleteMobileDeviceBySerialNumberOK) String() string {
	return fmt.Sprintf("[DELETE /mobiledevices/serialnumber/{serialnumber}][%d] deleteMobileDeviceBySerialNumberOK ", 200)
}

func (o *DeleteMobileDeviceBySerialNumberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

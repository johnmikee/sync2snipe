// Code generated by go-swagger; DO NOT EDIT.

package computerhardwaresoftwarereports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFindComputerHardwareSoftwareReportsByNameSubsetParams creates a new FindComputerHardwareSoftwareReportsByNameSubsetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFindComputerHardwareSoftwareReportsByNameSubsetParams() *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	return &FindComputerHardwareSoftwareReportsByNameSubsetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFindComputerHardwareSoftwareReportsByNameSubsetParamsWithTimeout creates a new FindComputerHardwareSoftwareReportsByNameSubsetParams object
// with the ability to set a timeout on a request.
func NewFindComputerHardwareSoftwareReportsByNameSubsetParamsWithTimeout(timeout time.Duration) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	return &FindComputerHardwareSoftwareReportsByNameSubsetParams{
		timeout: timeout,
	}
}

// NewFindComputerHardwareSoftwareReportsByNameSubsetParamsWithContext creates a new FindComputerHardwareSoftwareReportsByNameSubsetParams object
// with the ability to set a context for a request.
func NewFindComputerHardwareSoftwareReportsByNameSubsetParamsWithContext(ctx context.Context) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	return &FindComputerHardwareSoftwareReportsByNameSubsetParams{
		Context: ctx,
	}
}

// NewFindComputerHardwareSoftwareReportsByNameSubsetParamsWithHTTPClient creates a new FindComputerHardwareSoftwareReportsByNameSubsetParams object
// with the ability to set a custom HTTPClient for a request.
func NewFindComputerHardwareSoftwareReportsByNameSubsetParamsWithHTTPClient(client *http.Client) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	return &FindComputerHardwareSoftwareReportsByNameSubsetParams{
		HTTPClient: client,
	}
}

/*
FindComputerHardwareSoftwareReportsByNameSubsetParams contains all the parameters to send to the API endpoint

	for the find computer hardware software reports by name subset operation.

	Typically these are written to a http.Request.
*/
type FindComputerHardwareSoftwareReportsByNameSubsetParams struct {

	/* EndDate.

	   End date (e.g. yyyy-mm-dd)

	   Format: date
	*/
	EndDate strfmt.Date

	/* Name.

	   Name to filter by
	*/
	Name string

	/* StartDate.

	   Start date (e.g. yyyy-mm-dd)

	   Format: date
	*/
	StartDate strfmt.Date

	/* Subset.

	   Subset to filter by
	*/
	Subset string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the find computer hardware software reports by name subset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WithDefaults() *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the find computer hardware software reports by name subset params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WithTimeout(timeout time.Duration) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WithContext(ctx context.Context) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WithHTTPClient(client *http.Client) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndDate adds the endDate to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WithEndDate(endDate strfmt.Date) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) SetEndDate(endDate strfmt.Date) {
	o.EndDate = endDate
}

// WithName adds the name to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WithName(name string) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) SetName(name string) {
	o.Name = name
}

// WithStartDate adds the startDate to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WithStartDate(startDate strfmt.Date) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) SetStartDate(startDate strfmt.Date) {
	o.StartDate = startDate
}

// WithSubset adds the subset to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WithSubset(subset string) *FindComputerHardwareSoftwareReportsByNameSubsetParams {
	o.SetSubset(subset)
	return o
}

// SetSubset adds the subset to the find computer hardware software reports by name subset params
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) SetSubset(subset string) {
	o.Subset = subset
}

// WriteToRequest writes these params to a swagger request
func (o *FindComputerHardwareSoftwareReportsByNameSubsetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param end_date
	if err := r.SetPathParam("end_date", o.EndDate.String()); err != nil {
		return err
	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// path param start_date
	if err := r.SetPathParam("start_date", o.StartDate.String()); err != nil {
		return err
	}

	// path param subset
	if err := r.SetPathParam("subset", o.Subset); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package classes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateClassByIDReader is a Reader for the UpdateClassByID structure.
type UpdateClassByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClassByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClassByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[PUT /classes/id/{id}] updateClassById", response, response.Code())
	}
}

// NewUpdateClassByIDOK creates a UpdateClassByIDOK with default headers values
func NewUpdateClassByIDOK() *UpdateClassByIDOK {
	return &UpdateClassByIDOK{}
}

/*
UpdateClassByIDOK describes a response with status code 200, with default header values.

OK
*/
type UpdateClassByIDOK struct {
}

// IsSuccess returns true when this update class by Id o k response has a 2xx status code
func (o *UpdateClassByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update class by Id o k response has a 3xx status code
func (o *UpdateClassByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update class by Id o k response has a 4xx status code
func (o *UpdateClassByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update class by Id o k response has a 5xx status code
func (o *UpdateClassByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update class by Id o k response a status code equal to that given
func (o *UpdateClassByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update class by Id o k response
func (o *UpdateClassByIDOK) Code() int {
	return 200
}

func (o *UpdateClassByIDOK) Error() string {
	return fmt.Sprintf("[PUT /classes/id/{id}][%d] updateClassByIdOK ", 200)
}

func (o *UpdateClassByIDOK) String() string {
	return fmt.Sprintf("[PUT /classes/id/{id}][%d] updateClassByIdOK ", 200)
}

func (o *UpdateClassByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

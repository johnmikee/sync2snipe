// Code generated by go-swagger; DO NOT EDIT.

package computergroups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteComputerGroupByNameReader is a Reader for the DeleteComputerGroupByName structure.
type DeleteComputerGroupByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteComputerGroupByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteComputerGroupByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[DELETE /computergroups/name/{name}] deleteComputerGroupByName", response, response.Code())
	}
}

// NewDeleteComputerGroupByNameOK creates a DeleteComputerGroupByNameOK with default headers values
func NewDeleteComputerGroupByNameOK() *DeleteComputerGroupByNameOK {
	return &DeleteComputerGroupByNameOK{}
}

/*
DeleteComputerGroupByNameOK describes a response with status code 200, with default header values.

OK
*/
type DeleteComputerGroupByNameOK struct {
}

// IsSuccess returns true when this delete computer group by name o k response has a 2xx status code
func (o *DeleteComputerGroupByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete computer group by name o k response has a 3xx status code
func (o *DeleteComputerGroupByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete computer group by name o k response has a 4xx status code
func (o *DeleteComputerGroupByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete computer group by name o k response has a 5xx status code
func (o *DeleteComputerGroupByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete computer group by name o k response a status code equal to that given
func (o *DeleteComputerGroupByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete computer group by name o k response
func (o *DeleteComputerGroupByNameOK) Code() int {
	return 200
}

func (o *DeleteComputerGroupByNameOK) Error() string {
	return fmt.Sprintf("[DELETE /computergroups/name/{name}][%d] deleteComputerGroupByNameOK ", 200)
}

func (o *DeleteComputerGroupByNameOK) String() string {
	return fmt.Sprintf("[DELETE /computergroups/name/{name}][%d] deleteComputerGroupByNameOK ", 200)
}

func (o *DeleteComputerGroupByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

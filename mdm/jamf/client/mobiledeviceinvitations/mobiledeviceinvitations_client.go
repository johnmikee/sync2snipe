// Code generated by go-swagger; DO NOT EDIT.

package mobiledeviceinvitations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new mobiledeviceinvitations API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for mobiledeviceinvitations API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateMobileDeviceInvitationsByID(params *CreateMobileDeviceInvitationsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceInvitationsByIDCreated, error)

	CreateMobileDeviceInvitationsByInvitation(params *CreateMobileDeviceInvitationsByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceInvitationsByInvitationCreated, error)

	DeleteMobileDeviceInvitationByID(params *DeleteMobileDeviceInvitationByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceInvitationByIDOK, error)

	DeleteMobileDeviceInvitationByInvitation(params *DeleteMobileDeviceInvitationByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceInvitationByInvitationOK, error)

	FindMobileDeviceInvitations(params *FindMobileDeviceInvitationsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceInvitationsOK, error)

	FindMobileDeviceInvitationsByID(params *FindMobileDeviceInvitationsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceInvitationsByIDOK, error)

	FindMobileDeviceInvitationsByInvitation(params *FindMobileDeviceInvitationsByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceInvitationsByInvitationOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateMobileDeviceInvitationsByID creates a new mobile device invitation by id
*/
func (a *Client) CreateMobileDeviceInvitationsByID(params *CreateMobileDeviceInvitationsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceInvitationsByIDCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateMobileDeviceInvitationsByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createMobileDeviceInvitationsById",
		Method:             "POST",
		PathPattern:        "/mobiledeviceinvitations/id/{id}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateMobileDeviceInvitationsByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateMobileDeviceInvitationsByIDCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createMobileDeviceInvitationsById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateMobileDeviceInvitationsByInvitation creates a new mobile device invitation by invitation
*/
func (a *Client) CreateMobileDeviceInvitationsByInvitation(params *CreateMobileDeviceInvitationsByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateMobileDeviceInvitationsByInvitationCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateMobileDeviceInvitationsByInvitationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createMobileDeviceInvitationsByInvitation",
		Method:             "POST",
		PathPattern:        "/mobiledeviceinvitations/invitation/{invitation}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CreateMobileDeviceInvitationsByInvitationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateMobileDeviceInvitationsByInvitationCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createMobileDeviceInvitationsByInvitation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteMobileDeviceInvitationByID deletes a mobile device invitation by id
*/
func (a *Client) DeleteMobileDeviceInvitationByID(params *DeleteMobileDeviceInvitationByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceInvitationByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteMobileDeviceInvitationByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteMobileDeviceInvitationById",
		Method:             "DELETE",
		PathPattern:        "/mobiledeviceinvitations/id/{id}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteMobileDeviceInvitationByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteMobileDeviceInvitationByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteMobileDeviceInvitationById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteMobileDeviceInvitationByInvitation deletes a mobile device invitation by invitation
*/
func (a *Client) DeleteMobileDeviceInvitationByInvitation(params *DeleteMobileDeviceInvitationByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteMobileDeviceInvitationByInvitationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteMobileDeviceInvitationByInvitationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteMobileDeviceInvitationByInvitation",
		Method:             "DELETE",
		PathPattern:        "/mobiledeviceinvitations/invitation/{invitation}",
		ProducesMediaTypes: []string{"application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DeleteMobileDeviceInvitationByInvitationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteMobileDeviceInvitationByInvitationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteMobileDeviceInvitationByInvitation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindMobileDeviceInvitations finds all mobile device invitations
*/
func (a *Client) FindMobileDeviceInvitations(params *FindMobileDeviceInvitationsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceInvitationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindMobileDeviceInvitationsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findMobileDeviceInvitations",
		Method:             "GET",
		PathPattern:        "/mobiledeviceinvitations",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindMobileDeviceInvitationsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindMobileDeviceInvitationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findMobileDeviceInvitations: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindMobileDeviceInvitationsByID finds mobile device invitations by id
*/
func (a *Client) FindMobileDeviceInvitationsByID(params *FindMobileDeviceInvitationsByIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceInvitationsByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindMobileDeviceInvitationsByIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findMobileDeviceInvitationsById",
		Method:             "GET",
		PathPattern:        "/mobiledeviceinvitations/id/{id}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindMobileDeviceInvitationsByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindMobileDeviceInvitationsByIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findMobileDeviceInvitationsById: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
FindMobileDeviceInvitationsByInvitation finds mobile device invitations by invitation
*/
func (a *Client) FindMobileDeviceInvitationsByInvitation(params *FindMobileDeviceInvitationsByInvitationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*FindMobileDeviceInvitationsByInvitationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFindMobileDeviceInvitationsByInvitationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "findMobileDeviceInvitationsByInvitation",
		Method:             "GET",
		PathPattern:        "/mobiledeviceinvitations/invitation/{invitation}",
		ProducesMediaTypes: []string{"application/json", "application/xml"},
		ConsumesMediaTypes: []string{"application/xml"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FindMobileDeviceInvitationsByInvitationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*FindMobileDeviceInvitationsByInvitationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for findMobileDeviceInvitationsByInvitation: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

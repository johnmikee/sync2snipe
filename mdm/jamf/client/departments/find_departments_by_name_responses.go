// Code generated by go-swagger; DO NOT EDIT.

package departments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// FindDepartmentsByNameReader is a Reader for the FindDepartmentsByName structure.
type FindDepartmentsByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindDepartmentsByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindDepartmentsByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[GET /departments/name/{name}] findDepartmentsByName", response, response.Code())
	}
}

// NewFindDepartmentsByNameOK creates a FindDepartmentsByNameOK with default headers values
func NewFindDepartmentsByNameOK() *FindDepartmentsByNameOK {
	return &FindDepartmentsByNameOK{}
}

/*
FindDepartmentsByNameOK describes a response with status code 200, with default header values.

OK
*/
type FindDepartmentsByNameOK struct {
}

// IsSuccess returns true when this find departments by name o k response has a 2xx status code
func (o *FindDepartmentsByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this find departments by name o k response has a 3xx status code
func (o *FindDepartmentsByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find departments by name o k response has a 4xx status code
func (o *FindDepartmentsByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this find departments by name o k response has a 5xx status code
func (o *FindDepartmentsByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this find departments by name o k response a status code equal to that given
func (o *FindDepartmentsByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the find departments by name o k response
func (o *FindDepartmentsByNameOK) Code() int {
	return 200
}

func (o *FindDepartmentsByNameOK) Error() string {
	return fmt.Sprintf("[GET /departments/name/{name}][%d] findDepartmentsByNameOK ", 200)
}

func (o *FindDepartmentsByNameOK) String() string {
	return fmt.Sprintf("[GET /departments/name/{name}][%d] findDepartmentsByNameOK ", 200)
}

func (o *FindDepartmentsByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MobileDevicePost mobile device post
//
// swagger:model mobile_device_post
type MobileDevicePost struct {

	// general
	General *MobileDevicePostGeneral `json:"general,omitempty"`
}

// Validate validates this mobile device post
func (m *MobileDevicePost) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGeneral(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MobileDevicePost) validateGeneral(formats strfmt.Registry) error {
	if swag.IsZero(m.General) { // not required
		return nil
	}

	if m.General != nil {
		if err := m.General.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("general")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("general")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this mobile device post based on the context it is used
func (m *MobileDevicePost) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateGeneral(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MobileDevicePost) contextValidateGeneral(ctx context.Context, formats strfmt.Registry) error {

	if m.General != nil {

		if swag.IsZero(m.General) { // not required
			return nil
		}

		if err := m.General.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("general")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("general")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MobileDevicePost) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MobileDevicePost) UnmarshalBinary(b []byte) error {
	var res MobileDevicePost
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// MobileDevicePostGeneral mobile device post general
//
// swagger:model MobileDevicePostGeneral
type MobileDevicePostGeneral struct {

	// asset tag
	AssetTag string `json:"asset_tag,omitempty"`

	// available
	// Example: 11487
	Available int64 `json:"available,omitempty"`

	// available mb
	// Example: 11487
	AvailableMb int64 `json:"available_mb,omitempty"`

	// battery level
	// Example: 95
	BatteryLevel int64 `json:"battery_level,omitempty"`

	// bluetooth mac address
	// Example: E0:AC:CB:97:36:G6
	BluetoothMacAddress string `json:"bluetooth_mac_address,omitempty"`

	// capacity
	// Example: 12159
	Capacity int64 `json:"capacity,omitempty"`

	// capacity mb
	// Example: 12159
	CapacityMb int64 `json:"capacity_mb,omitempty"`

	// device name
	// Example: Tinas iPad
	DeviceName string `json:"device_name,omitempty"`

	// device ownership level
	// Example: Institutional
	DeviceOwnershipLevel string `json:"device_ownership_level,omitempty"`

	// display name
	// Example: Tinas iPad
	DisplayName string `json:"display_name,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// initial entry date epoch
	// Example: 1499470624555
	InitialEntryDateEpoch int64 `json:"initial_entry_date_epoch,omitempty"`

	// ip address
	// Example: 192.0.0.1
	IPAddress string `json:"ip_address,omitempty"`

	// last enrollment epoch
	// Example: 1499470624555
	LastEnrollmentEpoch int64 `json:"last_enrollment_epoch,omitempty"`

	// last inventory update epoch
	// Example: 1499470624555
	LastInventoryUpdateEpoch int64 `json:"last_inventory_update_epoch,omitempty"`

	// managed
	Managed bool `json:"managed,omitempty"`

	// model
	// Example: iPhone 6S
	Model string `json:"model,omitempty"`

	// model display
	// Example: iPhone 6S
	ModelDisplay string `json:"model_display,omitempty"`

	// model identifier
	// Example: iPhone8,1
	ModelIdentifier string `json:"model_identifier,omitempty"`

	// model number
	// Example: MKRY2LL
	ModelNumber string `json:"model_number,omitempty"`

	// modem firmware
	// Example: 2.61.00
	ModemFirmware string `json:"modem_firmware,omitempty"`

	// name
	// Example: Tinas iPad
	// Required: true
	Name *string `json:"name"`

	// os build
	// Example: 14F89
	OsBuild string `json:"os_build,omitempty"`

	// os type
	// Example: iOS
	OsType string `json:"os_type,omitempty"`

	// os version
	// Example: 10.3.2
	OsVersion string `json:"os_version,omitempty"`

	// percentage used
	// Example: 5
	PercentageUsed int64 `json:"percentage_used,omitempty"`

	// phone number
	// Example: 123-555-6789
	PhoneNumber string `json:"phone_number,omitempty"`

	// serial number
	// Example: C02Q7KHTGFWF
	// Required: true
	SerialNumber *string `json:"serial_number"`

	// supervised
	Supervised bool `json:"supervised,omitempty"`

	// udid
	// Example: 270aae10800b6e61a2ee2bbc285eb967050b5984
	// Required: true
	Udid *string `json:"udid"`

	// wifi mac address
	// Example: E0:AC:CB:97:36:G4
	WifiMacAddress string `json:"wifi_mac_address,omitempty"`
}

// Validate validates this mobile device post general
func (m *MobileDevicePostGeneral) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSerialNumber(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUdid(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MobileDevicePostGeneral) validateName(formats strfmt.Registry) error {

	if err := validate.Required("general"+"."+"name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *MobileDevicePostGeneral) validateSerialNumber(formats strfmt.Registry) error {

	if err := validate.Required("general"+"."+"serial_number", "body", m.SerialNumber); err != nil {
		return err
	}

	return nil
}

func (m *MobileDevicePostGeneral) validateUdid(formats strfmt.Registry) error {

	if err := validate.Required("general"+"."+"udid", "body", m.Udid); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this mobile device post general based on context it is used
func (m *MobileDevicePostGeneral) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MobileDevicePostGeneral) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MobileDevicePostGeneral) UnmarshalBinary(b []byte) error {
	var res MobileDevicePostGeneral
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

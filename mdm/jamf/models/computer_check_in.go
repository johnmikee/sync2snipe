// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComputerCheckIn computer check in
//
// swagger:model computer_check_in
type ComputerCheckIn struct {

	// apply computer level managed preferences
	ApplyComputerLevelManagedPreferences bool `json:"apply_computer_level_managed_preferences,omitempty"`

	// apply user level managed preferences
	ApplyUserLevelManagedPreferences bool `json:"apply_user_level_managed_preferences,omitempty"`

	// check for policies at login logout
	CheckForPoliciesAtLoginLogout bool `json:"check_for_policies_at_login_logout,omitempty"`

	// check for policies at startup
	CheckForPoliciesAtStartup bool `json:"check_for_policies_at_startup,omitempty"`

	// Measured in minutes
	// Enum: [60 30 15 5]
	CheckInFrequency int64 `json:"check_in_frequency,omitempty"`

	// create login logout hooks
	CreateLoginLogoutHooks bool `json:"create_login_logout_hooks,omitempty"`

	// create startup script
	CreateStartupScript bool `json:"create_startup_script,omitempty"`

	// display status to user
	DisplayStatusToUser bool `json:"display_status_to_user,omitempty"`

	// ensure ssh is enabled
	EnsureSSHIsEnabled bool `json:"ensure_ssh_is_enabled,omitempty"`

	// hide restore partition
	HideRestorePartition bool `json:"hide_restore_partition,omitempty"`

	// log startup event
	LogStartupEvent bool `json:"log_startup_event,omitempty"`

	// log username
	LogUsername bool `json:"log_username,omitempty"`

	// perform login actions in background
	PerformLoginActionsInBackground bool `json:"perform_login_actions_in_background,omitempty"`
}

// Validate validates this computer check in
func (m *ComputerCheckIn) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCheckInFrequency(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var computerCheckInTypeCheckInFrequencyPropEnum []interface{}

func init() {
	var res []int64
	if err := json.Unmarshal([]byte(`[60,30,15,5]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		computerCheckInTypeCheckInFrequencyPropEnum = append(computerCheckInTypeCheckInFrequencyPropEnum, v)
	}
}

// prop value enum
func (m *ComputerCheckIn) validateCheckInFrequencyEnum(path, location string, value int64) error {
	if err := validate.EnumCase(path, location, value, computerCheckInTypeCheckInFrequencyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ComputerCheckIn) validateCheckInFrequency(formats strfmt.Registry) error {
	if swag.IsZero(m.CheckInFrequency) { // not required
		return nil
	}

	// value enum
	if err := m.validateCheckInFrequencyEnum("check_in_frequency", "body", m.CheckInFrequency); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this computer check in based on context it is used
func (m *ComputerCheckIn) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ComputerCheckIn) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ComputerCheckIn) UnmarshalBinary(b []byte) error {
	var res ComputerCheckIn
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Printer printer
//
// swagger:model printer
type Printer struct {

	// c u p s name
	// Example: HP_9th_Floor
	CUPSName string `json:"CUPS_name,omitempty"`

	// category
	// Example: Printers
	Category string `json:"category,omitempty"`

	// id
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// info
	Info string `json:"info,omitempty"`

	// location
	Location string `json:"location,omitempty"`

	// make default
	MakeDefault bool `json:"make_default,omitempty"`

	// model
	// Example: HP LaserJet 500 color MFP M575
	Model string `json:"model,omitempty"`

	// Name of the printer
	// Example: HP 9th Floor
	// Required: true
	Name *string `json:"name"`

	// notes
	Notes string `json:"notes,omitempty"`

	// ppd
	// Example: 9th_Floor_HP.ppd
	Ppd string `json:"ppd,omitempty"`

	// ppd contents
	PpdContents string `json:"ppd_contents,omitempty"`

	// ppd path
	// Example: /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Resources/Generic.ppd
	PpdPath string `json:"ppd_path,omitempty"`

	// uri
	// Example: lpd://10.1.20.204/
	URI string `json:"uri,omitempty"`

	// use generic
	UseGeneric *bool `json:"use_generic,omitempty"`
}

// Validate validates this printer
func (m *Printer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Printer) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this printer based on context it is used
func (m *Printer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Printer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Printer) UnmarshalBinary(b []byte) error {
	var res Printer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// InfrastructureManager infrastructure manager
//
// swagger:model infrastructure_manager
type InfrastructureManager struct {

	// hostname
	Hostname string `json:"hostname,omitempty"`

	// id
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// last check in
	LastCheckIn string `json:"last_check_in,omitempty"`

	// last reported ip
	LastReportedIP string `json:"last_reported_ip,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// operating system
	OperatingSystem string `json:"operating_system,omitempty"`

	// operating system version
	OperatingSystemVersion string `json:"operating_system_version,omitempty"`

	// recurring check in frequency
	RecurringCheckInFrequency int64 `json:"recurring_check_in_frequency,omitempty"`

	// uuid
	UUID string `json:"uuid,omitempty"`
}

// Validate validates this infrastructure manager
func (m *InfrastructureManager) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this infrastructure manager based on context it is used
func (m *InfrastructureManager) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InfrastructureManager) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InfrastructureManager) UnmarshalBinary(b []byte) error {
	var res InfrastructureManager
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

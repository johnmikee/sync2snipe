// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AdvancedMobileDeviceSearch advanced mobile device search
//
// swagger:model advanced_mobile_device_search
type AdvancedMobileDeviceSearch struct {

	// criteria
	Criteria []*AdvancedMobileDeviceSearchCriteriaItems0 `json:"criteria"`

	// display fields
	DisplayFields []*AdvancedMobileDeviceSearchDisplayFieldsItems0 `json:"display_fields"`

	// id
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// mobile devices
	MobileDevices []*AdvancedMobileDeviceSearchMobileDevicesItems0 `json:"mobile_devices"`

	// Name of the advanced mobile device search
	// Example: Advanced Search Name
	// Required: true
	Name *string `json:"name"`

	// site
	Site *SiteObject `json:"site,omitempty"`

	// sort 1
	Sort1 string `json:"sort_1,omitempty"`

	// sort 2
	Sort2 string `json:"sort_2,omitempty"`

	// sort 3
	Sort3 string `json:"sort_3,omitempty"`

	// view as
	// Example: Standard Web Page
	ViewAs string `json:"view_as,omitempty"`
}

// Validate validates this advanced mobile device search
func (m *AdvancedMobileDeviceSearch) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCriteria(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDisplayFields(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMobileDevices(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSite(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdvancedMobileDeviceSearch) validateCriteria(formats strfmt.Registry) error {
	if swag.IsZero(m.Criteria) { // not required
		return nil
	}

	for i := 0; i < len(m.Criteria); i++ {
		if swag.IsZero(m.Criteria[i]) { // not required
			continue
		}

		if m.Criteria[i] != nil {
			if err := m.Criteria[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("criteria" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("criteria" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AdvancedMobileDeviceSearch) validateDisplayFields(formats strfmt.Registry) error {
	if swag.IsZero(m.DisplayFields) { // not required
		return nil
	}

	for i := 0; i < len(m.DisplayFields); i++ {
		if swag.IsZero(m.DisplayFields[i]) { // not required
			continue
		}

		if m.DisplayFields[i] != nil {
			if err := m.DisplayFields[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("display_fields" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("display_fields" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AdvancedMobileDeviceSearch) validateMobileDevices(formats strfmt.Registry) error {
	if swag.IsZero(m.MobileDevices) { // not required
		return nil
	}

	for i := 0; i < len(m.MobileDevices); i++ {
		if swag.IsZero(m.MobileDevices[i]) { // not required
			continue
		}

		if m.MobileDevices[i] != nil {
			if err := m.MobileDevices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("mobile_devices" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("mobile_devices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AdvancedMobileDeviceSearch) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *AdvancedMobileDeviceSearch) validateSite(formats strfmt.Registry) error {
	if swag.IsZero(m.Site) { // not required
		return nil
	}

	if m.Site != nil {
		if err := m.Site.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("site")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this advanced mobile device search based on the context it is used
func (m *AdvancedMobileDeviceSearch) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCriteria(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateDisplayFields(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateMobileDevices(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSite(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdvancedMobileDeviceSearch) contextValidateCriteria(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.Criteria); i++ {

		if m.Criteria[i] != nil {

			if swag.IsZero(m.Criteria[i]) { // not required
				return nil
			}

			if err := m.Criteria[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("criteria" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("criteria" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AdvancedMobileDeviceSearch) contextValidateDisplayFields(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.DisplayFields); i++ {

		if m.DisplayFields[i] != nil {

			if swag.IsZero(m.DisplayFields[i]) { // not required
				return nil
			}

			if err := m.DisplayFields[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("display_fields" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("display_fields" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AdvancedMobileDeviceSearch) contextValidateMobileDevices(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.MobileDevices); i++ {

		if m.MobileDevices[i] != nil {

			if swag.IsZero(m.MobileDevices[i]) { // not required
				return nil
			}

			if err := m.MobileDevices[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("mobile_devices" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("mobile_devices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *AdvancedMobileDeviceSearch) contextValidateSite(ctx context.Context, formats strfmt.Registry) error {

	if m.Site != nil {

		if swag.IsZero(m.Site) { // not required
			return nil
		}

		if err := m.Site.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("site")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("site")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearch) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearch) UnmarshalBinary(b []byte) error {
	var res AdvancedMobileDeviceSearch
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AdvancedMobileDeviceSearchCriteriaItems0 advanced mobile device search criteria items0
//
// swagger:model AdvancedMobileDeviceSearchCriteriaItems0
type AdvancedMobileDeviceSearchCriteriaItems0 struct {

	// criterion
	Criterion *Criterion `json:"criterion,omitempty"`

	// size
	Size Size `json:"size,omitempty"`
}

// Validate validates this advanced mobile device search criteria items0
func (m *AdvancedMobileDeviceSearchCriteriaItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCriterion(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdvancedMobileDeviceSearchCriteriaItems0) validateCriterion(formats strfmt.Registry) error {
	if swag.IsZero(m.Criterion) { // not required
		return nil
	}

	if m.Criterion != nil {
		if err := m.Criterion.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("criterion")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("criterion")
			}
			return err
		}
	}

	return nil
}

func (m *AdvancedMobileDeviceSearchCriteriaItems0) validateSize(formats strfmt.Registry) error {
	if swag.IsZero(m.Size) { // not required
		return nil
	}

	if err := m.Size.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("size")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("size")
		}
		return err
	}

	return nil
}

// ContextValidate validate this advanced mobile device search criteria items0 based on the context it is used
func (m *AdvancedMobileDeviceSearchCriteriaItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCriterion(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSize(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdvancedMobileDeviceSearchCriteriaItems0) contextValidateCriterion(ctx context.Context, formats strfmt.Registry) error {

	if m.Criterion != nil {

		if swag.IsZero(m.Criterion) { // not required
			return nil
		}

		if err := m.Criterion.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("criterion")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("criterion")
			}
			return err
		}
	}

	return nil
}

func (m *AdvancedMobileDeviceSearchCriteriaItems0) contextValidateSize(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(m.Size) { // not required
		return nil
	}

	if err := m.Size.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("size")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("size")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchCriteriaItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchCriteriaItems0) UnmarshalBinary(b []byte) error {
	var res AdvancedMobileDeviceSearchCriteriaItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AdvancedMobileDeviceSearchDisplayFieldsItems0 advanced mobile device search display fields items0
//
// swagger:model AdvancedMobileDeviceSearchDisplayFieldsItems0
type AdvancedMobileDeviceSearchDisplayFieldsItems0 struct {

	// display field
	DisplayField *AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField `json:"display_field,omitempty"`

	// size
	Size Size `json:"size,omitempty"`
}

// Validate validates this advanced mobile device search display fields items0
func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayField(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0) validateDisplayField(formats strfmt.Registry) error {
	if swag.IsZero(m.DisplayField) { // not required
		return nil
	}

	if m.DisplayField != nil {
		if err := m.DisplayField.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("display_field")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("display_field")
			}
			return err
		}
	}

	return nil
}

func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0) validateSize(formats strfmt.Registry) error {
	if swag.IsZero(m.Size) { // not required
		return nil
	}

	if err := m.Size.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("size")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("size")
		}
		return err
	}

	return nil
}

// ContextValidate validate this advanced mobile device search display fields items0 based on the context it is used
func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDisplayField(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSize(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0) contextValidateDisplayField(ctx context.Context, formats strfmt.Registry) error {

	if m.DisplayField != nil {

		if swag.IsZero(m.DisplayField) { // not required
			return nil
		}

		if err := m.DisplayField.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("display_field")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("display_field")
			}
			return err
		}
	}

	return nil
}

func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0) contextValidateSize(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(m.Size) { // not required
		return nil
	}

	if err := m.Size.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("size")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("size")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0) UnmarshalBinary(b []byte) error {
	var res AdvancedMobileDeviceSearchDisplayFieldsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField advanced mobile device search display fields items0 display field
//
// swagger:model AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField
type AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField struct {

	// Name of the display field
	// Example: IP Address
	Name string `json:"name,omitempty"`
}

// Validate validates this advanced mobile device search display fields items0 display field
func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this advanced mobile device search display fields items0 display field based on context it is used
func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField) UnmarshalBinary(b []byte) error {
	var res AdvancedMobileDeviceSearchDisplayFieldsItems0DisplayField
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AdvancedMobileDeviceSearchMobileDevicesItems0 advanced mobile device search mobile devices items0
//
// swagger:model AdvancedMobileDeviceSearchMobileDevicesItems0
type AdvancedMobileDeviceSearchMobileDevicesItems0 struct {

	// mobile device
	MobileDevice *AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice `json:"mobile_device,omitempty"`

	// size
	Size Size `json:"size,omitempty"`
}

// Validate validates this advanced mobile device search mobile devices items0
func (m *AdvancedMobileDeviceSearchMobileDevicesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMobileDevice(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSize(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdvancedMobileDeviceSearchMobileDevicesItems0) validateMobileDevice(formats strfmt.Registry) error {
	if swag.IsZero(m.MobileDevice) { // not required
		return nil
	}

	if m.MobileDevice != nil {
		if err := m.MobileDevice.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mobile_device")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("mobile_device")
			}
			return err
		}
	}

	return nil
}

func (m *AdvancedMobileDeviceSearchMobileDevicesItems0) validateSize(formats strfmt.Registry) error {
	if swag.IsZero(m.Size) { // not required
		return nil
	}

	if err := m.Size.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("size")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("size")
		}
		return err
	}

	return nil
}

// ContextValidate validate this advanced mobile device search mobile devices items0 based on the context it is used
func (m *AdvancedMobileDeviceSearchMobileDevicesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMobileDevice(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSize(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AdvancedMobileDeviceSearchMobileDevicesItems0) contextValidateMobileDevice(ctx context.Context, formats strfmt.Registry) error {

	if m.MobileDevice != nil {

		if swag.IsZero(m.MobileDevice) { // not required
			return nil
		}

		if err := m.MobileDevice.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mobile_device")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("mobile_device")
			}
			return err
		}
	}

	return nil
}

func (m *AdvancedMobileDeviceSearchMobileDevicesItems0) contextValidateSize(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(m.Size) { // not required
		return nil
	}

	if err := m.Size.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("size")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("size")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchMobileDevicesItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchMobileDevicesItems0) UnmarshalBinary(b []byte) error {
	var res AdvancedMobileDeviceSearchMobileDevicesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice advanced mobile device search mobile devices items0 mobile device
//
// swagger:model AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice
type AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice struct {

	// display name
	// Example: Tinas iPad
	DisplayName string `json:"Display_Name,omitempty"`

	// id
	// Example: 1
	ID int64 `json:"id,omitempty"`

	// Name of the mobile device
	// Example: Tinas iPad
	Name string `json:"name,omitempty"`

	// udid
	// Example: 270aae10800b6e61a2ee2bbc285eb967050b5984
	Udid string `json:"udid,omitempty"`
}

// Validate validates this advanced mobile device search mobile devices items0 mobile device
func (m *AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this advanced mobile device search mobile devices items0 mobile device based on context it is used
func (m *AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice) UnmarshalBinary(b []byte) error {
	var res AdvancedMobileDeviceSearchMobileDevicesItems0MobileDevice
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

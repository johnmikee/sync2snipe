swagger: '2.0'
info:
  version: '10.49.0'
  title: Classic API
  license:
    name: Jamf API License Agreement
    url: 'https://developer.jamf.com/developer-guide/docs/api-license-agreement'
host: yourServer.jamfcloud.com
basePath: /JSSResource
schemes:
  - https
consumes:
  - application/xml
produces:
  - application/xml
security:
  - basicAuth: []
x-readme:
  samples-languages:
  - curl
  - swift
  - ruby
  - python
  explorer-enabled: false
paths:
  "/accounts":
    get:
      tags:
      - accounts
      summary: Finds all accounts
      operationId: findAccounts
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/accounts'
      x-explorer-enabled: false
  "/accounts/groupid/{id}":
    get:
      tags:
      - accounts
      summary: Finds groups by ID
      operationId: findGroupsById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/group'
      x-explorer-enabled: false
    put:
      x-explorer-enabled: false
      tags:
      - accounts
      summary: Updates an existing group by ID
      description: Groups updated via this endpoint are updated only within Jamf Pro and will not affect the LDAP server.
      operationId: updateGroupById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - accounts
      summary: Creates a new group by ID
      description: Groups created via this endpoint are created only within Jamf Pro and will not affect the LDAP server.
      operationId: createGroupById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - accounts
      summary: Deletes a group by ID
      operationId: deleteGroupById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
      x-explorer-enabled: false
  "/accounts/groupname/{name}":
    get:
      tags:
      - accounts
      summary: Finds groups by name
      operationId: findGroupsByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/group'
      x-explorer-enabled: false
    put:
      x-explorer-enabled: false
      tags:
      - accounts
      summary: Updates an existing group by name
      description: Groups updated via this endpoint are updated only within Jamf Pro and will not affect the LDAP server.
      operationId: updateGroupByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: integer
      responses:
        '201':
          description: Created
    delete:
      tags:
      - accounts
      summary: Deletes a group by name
      operationId: deleteGroupByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: integer
      responses:
        '200':
          description: OK
      x-explorer-enabled: false
  "/accounts/userid/{id}":
    get:
      tags:
      - accounts
      summary: Finds accounts by ID
      operationId: findAccountsById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/account'
      x-explorer-enabled: false
    put:
      x-explorer-enabled: false
      tags:
      - accounts
      summary: Updates an existing account by ID
      operationId: updateAccountById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - accounts
      summary: Creates a new account by ID
      operationId: createAccountById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - accounts
      summary: Deletes an account by ID
      operationId: deleteAccountById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
      x-explorer-enabled: false
  "/accounts/username/{name}":
    get:
      tags:
      - accounts
      summary: Finds accounts by name
      operationId: findAccountsByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/account'
      x-explorer-enabled: false
    put:
      x-explorer-enabled: false
      tags:
      - accounts
      summary: Updates an existing account by name
      operationId: updateAccountByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '201':
          description: Created
    delete:
      tags:
      - accounts
      summary: Deletes an account by name
      operationId: deleteAccountByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
      x-explorer-enabled: false
  "/activationcode":
    get:
      tags:
      - activationcode
      summary: Finds the Jamf Pro activation code
      operationId: findactivationcode
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/activation_code'
      x-explorer-enabled: false
    put:
      x-explorer-enabled: false
      tags:
      - activationcode
      summary: Updates the Jamf Pro activation code
      operationId: updateActivationCode
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/activation_code'
      responses:
        '201':
          description: Created
  "/advancedcomputersearches":
    get:
      tags:
      - advancedcomputersearches
      summary: Finds all advanced computer searches
      operationId: findAdvancedComputerSearches
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_computer_searches'
        '401':
          description: Unauthorized
  '/advancedcomputersearches/id/{id}':
    get:
      tags:
      - advancedcomputersearches
      summary: Finds computer searches by ID
      description: Additional display fields are returned within the `Computer` object
      operationId: findAdvancedComputerSearchesById
      parameters:
        - description: ID value to filter by
          in: path
          name: id
          required: true
          type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_computer_search'
    put:
      x-explorer-enabled: false
      tags:
      - advancedcomputersearches
      summary: Updates an existing advanced computer search by ID
      operationId: updateAdvancedComputerSearchById
      parameters:
        - description: ID value to filter by
          in: path
          name: id
          required: true
          type: integer
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - advancedcomputersearches
      summary: Creates a new advanced computer search
      operationId: createAdvancedComputerSearchgById
      parameters:
      - description: ID to filter by
        in: path
        name: id
        required: true
        type: integer
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - advancedcomputersearches
      summary: Deletes a computer search by ID
      operationId: deleteAdvancedComputerSearchById
      parameters:
        - description: ID value to filter by
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
  '/advancedcomputersearches/name/{name}':
    get:
      tags:
      - advancedcomputersearches
      summary: Finds advanced computer searches by name
      description: Additional display fields are returned within the `Computer` object
      operationId: findAdvancedComputerSearchesByName
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_computer_search'
    put:
      x-explorer-enabled: false
      tags:
      - advancedcomputersearches
      summary: Updates an existing advanced computer search by name
      operationId: updateAdvancedComputerSearchByName
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '201':
          description: Created
    delete:
      tags:
      - advancedcomputersearches
      summary: Deletes a computer search by name
      operationId: deleteAdvancedComputerSearchByName
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: OK
  "/advancedmobiledevicesearches":
    get:
      tags:
      - advancedmobiledevicesearches
      summary: Finds all advanced mobile device searches
      operationId: findAdvancedMobileDeviceSearches
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_mobile_device_searches'
  "/advancedmobiledevicesearches/id/{id}":
    get:
      tags:
      - advancedmobiledevicesearches
      summary: Finds mobile device searches by ID
      operationId: findAdvancedMobileDeviceSearchesById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_mobile_device_search'
    put:
      x-explorer-enabled: false
      tags:
      - advancedmobiledevicesearches
      summary: Updates an existing advanced mobile device search by ID
      operationId: updateAdvancedMobileDeviceSearchById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - advancedmobiledevicesearches
      summary: Creates a new advanced mobile device search
      operationId: createAdvancedMobileDeviceSearchById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - advancedmobiledevicesearches
      summary: Deletes a mobile device search by ID
      operationId: deleteAdvancedMobileDeviceSearchById
      parameters:
        - description: ID value to filter by
          in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: OK
  "/advancedmobiledevicesearches/name/{name}":
    get:
      tags:
      - advancedmobiledevicesearches
      summary: Finds advanced mobile device searches by name
      operationId: findMobileDeviceSearchesByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_mobile_device_search'
    put:
      x-explorer-enabled: false
      tags:
      - advancedmobiledevicesearches
      summary: Updates an existing advanced mobile device search by name
      operationId: updateAdvancedMobileDeviceSearchByName
      parameters:
      - description: Nameto filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '201':
          description: Created
    delete:
      tags:
      - advancedmobiledevicesearches
      summary: Deletes a mobile device search by name
      operationId: deleteAdvancedMobileDeviceSearchByName
      parameters:
        - description: Name to filter by
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: OK
  "/advancedusersearches":
    get:
      tags:
      - advancedusersearches
      summary: Finds all advanced user searches
      operationId: findAdvancedUserSearches
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_user_searches'
  "/advancedusersearches/id/{id}":
    get:
      tags:
      - advancedusersearches
      summary: Finds user searches by ID
      operationId: findAdvancedUserSearchesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_user_search'
    put:
      x-explorer-enabled: false
      tags:
      - advancedusersearches
      summary: Updates an existing advanced user search by ID
      operationId: updateAdvancedUserSearchById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
    post:
      x-explorer-enabled: false
      tags:
      - advancedusersearches
      summary: Creates a new advanced user search by ID
      operationId: createAdvancedUserSearchgById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - advancedusersearches
      summary: Deletes a user search by ID
      operationId: deleteAdvancedUserSearchById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/advancedusersearches/name/{name}":
    get:
      tags:
      - advancedusersearches
      summary: Finds user searches by name
      operationId: findUserSearchesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/advanced_user_search'
    put:
      x-explorer-enabled: false
      tags:
      - advancedusersearches
      summary: Updates an existing advanced user search by name
      operationId: updateAdvancedUserSearchByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '200':
          description: OK
    delete:
      tags:
      - advancedusersearches
      summary: Deletes a user search by Name
      operationId: deleteAdvancedUserSearchByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '200':
          description: OK
  "/allowedfileextensions":
    get:
      tags:
      - allowedfileextensions
      summary: Finds the allowed file extensions
      operationId: findAllowedFileExtension
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/allowed_file_extensions'
  "/allowedfileextensions/id/{id}":
    get:
      tags:
      - allowedfileextensions
      summary: Finds an allowed file extension value by ID
      operationId: findAllowedFileExtensionById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Database ID of the extension
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/allowed_file_extension'
    post:
      x-explorer-enabled: false
      tags:
      - allowedfileextensions
      summary: Creates a new allowed file extension value by ID
      operationId: createAllowedFileExtensionById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Database ID of the extension
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - allowedfileextensions
      summary: Deletes an allowed file extension value by ID
      operationId: deleteAllowedFileExtensionById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Database ID of the extension
      responses:
        '200':
          description: OK
  "/allowedfileextensions/extension/{extension}":
    get:
      tags:
      - allowedfileextensions
      summary: Finds an allowed file extension value by name
      operationId: findAllowedFileExtensionByName
      parameters:
      - name: extension
        in: path
        required: true
        type: string
        description: String value of extension
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/allowed_file_extension'
  "/buildings":
    get:
      tags:
      - buildings
      summary: Finds all buildings
      operationId: findBuildings
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/buildings'
  "/buildings/id/{id}":
    get:
      tags:
      - buildings
      summary: Finds buildings by ID
      operationId: findBuildingsById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/building'
    put:
      x-explorer-enabled: false
      tags:
      - buildings
      summary: Updates an existing building by ID
      operationId: updateBuildingById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - buildings
      summary: Creates a new building
      operationId: createBuildingById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - buildings
      summary: Deletes a building by ID
      operationId: deleteBuildingById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
  "/buildings/name/{name}":
    get:
      tags:
      - buildings
      summary: Finds buildings by name
      operationId: findBuildingsByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/building'
    put:
      x-explorer-enabled: false
      tags:
      - buildings
      summary: Updates an existing building by name
      operationId: updateBuildingByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '201':
          description: Created
    delete:
      tags:
      - buildings
      summary: Deletes a building by name
      operationId: deleteBuildingByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
  "/byoprofiles":
    get:
      tags:
      - byoprofiles
      summary: Finds all personal device profiles
      operationId: findBYOProfiles
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/byoprofiles'
  "/byoprofiles/id/{id}":
    get:
      tags:
      - byoprofiles
      summary: Finds personal device profile by ID
      operationId: findBYOProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/byoprofile'
    put:
      x-explorer-enabled: false
      tags:
      - byoprofiles
      summary: Updates a personal device profile by ID
      operationId: updateBYOProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - byoprofiles
      summary: Creates a personal device profile by ID
      operationId: createBYOProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - byoprofiles
      summary: Deletes a personal device profile by ID
      operationId: deleteBYOProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/byoprofiles/name/{name}":
    get:
      tags:
      - byoprofiles
      summary: Finds a personal device profile by name
      operationId: findBYOProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/byoprofile'
    put:
      x-explorer-enabled: false
      tags:
      - byoprofiles
      summary: Updates a personal device profile by name
      description: You cannot reassign the site since it is maintained by Jamf Pro.
      operationId: updateBYOProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - byoprofiles
      summary: Deletes a personal device profile by name
      operationId: deleteBYOProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/categories":
    get:
      tags:
      - categories
      summary: Finds all categories
      operationId: findCategories
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/categories'
  "/categories/id/{id}":
    get:
      tags:
      - categories
      summary: Finds categories by ID
      operationId: findCategoriesById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/category'
    put:
      x-explorer-enabled: false
      tags:
      - categories
      summary: Updates an existing category by ID
      operationId: updateCategoryById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
    post:
      x-explorer-enabled: false
      tags:
      - categories
      summary: Creates a new category by ID
      operationId: createCategoryById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - categories
      summary: Deletes a category by ID
      operationId: deleteCategoryById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
  "/categories/name/{name}":
    get:
      tags:
      - categories
      summary: Finds categories by name
      operationId: findCategoriesByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/category'
    put:
      x-explorer-enabled: false
      tags:
      - categories
      summary: Updates an existing category by name
      operationId: updateCategoryByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
    delete:
      tags:
      - categories
      summary: Deletes a category by name
      operationId: deleteCategoryByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: integer
      responses:
        '200':
          description: OK
  "/classes":
    get:
      tags:
      - classes
      summary: Finds all classes
      operationId: findClasses
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/classes'
  "/classes/id/{id}":
    get:
      tags:
      - classes
      summary: Finds classes by ID
      operationId: findClassesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/class'
    put:
      x-explorer-enabled: false
      tags:
      - classes
      summary: Updates an existing class by ID
      description: The mobile device list is not used by this operation, the mobile device group is used instead.
      operationId: updateClassById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        200:
          description: OK
    post:
      x-explorer-enabled: false
      tags:
      - classes
      summary: Creates a new class by ID
      description: The mobile device list is not used by this operation, the mobile device group is used instead.
      operationId: createClassById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        201:
          description: Created
    delete:
      tags:
      - classes
      summary: Deletes a class by ID
      operationId: deleteClassById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        200:
          description: OK
  "/classes/name/{name}":
    get:
      tags:
      - classes
      summary: Finds classes by name
      operationId: findClassesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/class'
    put:
      x-explorer-enabled: false
      tags:
      - classes
      summary: Updates an existing class by name
      description: The mobile device list is not used by this operation, the mobile device group is used instead.
      operationId: updateClassByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        200:
          description: OK
    delete:
      tags:
      - classes
      summary: Deletes a class by name
      operationId: deleteClassByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        200:
          description: OK
  "/commandflush":
    delete:
      tags:
      - commandflush
      summary: Flushes commands based on information specified in an XML file
      operationId: commandFlush
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/commandflush'
      responses:
        200:
          description: OK
  "/commandflush/{idtype}/id/{id}/status/{status}":
    delete:
      tags:
      - commandflush
      summary: Flushes commands for devices
      operationId: createCommandFlushWithIdAndStatus
      parameters:
      - name: idtype
        in: path
        required: true
        type: string
        description: Type of device to be flushed
        enum: [computers, computergroups, mobiledevices, mobiledevicegroups]
      - name: id
        in: path
        required: true
        type: integer
        description: ID of device to be flushed
      - name: status
        in: path
        required: true
        type: string
        description: Command status to be flushed
        enum: [Pending, Failed, Pending+Failed]
      responses:
        200:
          description: OK
  "/computerapplications/application/{application}":
    get:
      tags:
      - computerapplications
      summary: Finds computer applications by name
      operationId: findComputerApplicationsByName
      parameters:
      - name: application
        in: path
        required: true
        type: string
        description: Application name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_applications'
  "/computerapplications/application/{application}/inventory/{inventory}":
    get:
      tags:
      - computerapplications
      summary: Finds computer applications by name with additional display fields
      description: Valid values for inventory are comma separated Display Fields for computers. Display Fields with spaces must be percent encoded (e.g. /computerapplications/application/Safari.app/inventory/Operating%20System,Last%20Check-in)
      operationId: findComputerApplicationsByNameInventory
      parameters:
      - name: application
        in: path
        required: true
        type: string
        description: Application name to filter by
      - name: inventory
        in: path
        required: true
        type: string
        description: Inventory options
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_applications'
  "/computerapplications/application/{application}/version/{version}":
    get:
      tags:
      - computerapplications
      summary: Finds computer applications by name and version
      operationId: findComputerApplicationByNameAndVersion
      parameters:
      - name: application
        in: path
        required: true
        type: string
        description: Application name to filter by
      - name: version
        in: path
        required: true
        type: string
        description: Version to filter by
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_applications'
  "/computerapplications/application/{application}/version/{version}/inventory/{inventory}":
    get:
      tags:
      - computerapplications
      summary: Finds computer applications by name and version
      description: Generates additional inventory data for the devices matching the search criteria. Inventory values may be displayed in addition to computer identification information. Use Default to view the same fields as those checked for Inventory Display, otherwise list display fields separated by commas.
      operationId: findComputerApplicationsByNameAndVersionAndInventory
      parameters:
      - name: application
        in: path
        required: true
        type: string
        description: Application name to filter by
      - name: version
        in: path
        required: true
        type: string
        description: Version to filter by
      - name: inventory
        in: path
        required: true
        type: string
        description: Inventory options
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_applications'
  "/computerapplicationusage/id/{id}/{start_date}_{end_date}":
    get:
      tags:
      - computerapplicationusage
      summary: Finds computer application usage by computer ID
      operationId: findComputerApplicationUsageById
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_application_usage'
  "/computerapplicationusage/name/{name}/{start_date}_{end_date}":
    get:
      tags:
      - computerapplicationusage
      summary: Finds computer application usage by computer name
      operationId: findComputerApplicationUsageByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: start_date
        in: path
        required: true
        type: string
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_application_usage'
  "/computerapplicationusage/udid/{udid}/{start_date}_{end_date}":
    get:
      tags:
      - computerapplicationusage
      summary: Finds computer application usage by computer UDID
      operationId: findComputerApplicationUsageByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      - name: start_date
        in: path
        required: true
        type: string
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_application_usage'
  "/computerapplicationusage/serialnumber/{serialnumber}/{start_date}_{end_date}":
    get:
      tags:
      - computerapplicationusage
      summary: Finds computer application usage by computer serial number
      operationId: findComputerApplicationUsageBySerial
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      - name: start_date
        in: path
        required: true
        type: string
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_application_usage'
  "/computerapplicationusage/macaddress/{macaddress}/{start_date}_{end_date}":
    get:
      tags:
      - computerapplicationusage
      summary: Finds computer application usage by computer MAC address
      operationId: findComputerApplicationUsageByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: MAC address to filter by
      - name: start_date
        in: path
        required: true
        type: string
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/computer_application_usage'
  "/computercheckin":
    get:
      tags:
      - computercheckin
      summary: Finds the Jamf Pro computer checkin information
      operationId: findComputerCheckin
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_check_in'
    put:
      x-explorer-enabled: false
      tags:
      - computercheckin
      summary: Updates the Jamf Pro computer checkin information
      operationId: updateComputerCheckin
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/computer_check_in'
      responses:
        '201':
          description: Created
  "/computercommands":
    get:
      tags:
      - computercommands
      summary: Finds all computer commands
      operationId: findComputerCommands
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_commands'
  "/computercommands/name/{name}":
    get:
      tags:
      - computercommands
      summary: Finds all computer commands by name
      operationId: findComputerCommandsByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_command'
  "/computercommands/uuid/{uuid}":
    get:
      tags:
      - computercommands
      summary: Finds a computer command by UUID
      operationId: findComputerCommandsByUuid
      parameters:
      - description: UUID to filter by
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_command'
  "/computercommands/command/{command}":
    post:
      x-explorer-enabled: false
      tags:
      - computercommands
      summary: Creates a new computer command using command name
      operationId: createComputerCommandByCommand
      description: |
        The chart below includes additional requirements for usage of specific commands
        
        | command | Parameter | Requirements |
        | ------- | --------- | ------------ |
        | DeleteUser | user_name | DEP enrolled device and user_name value (string) |
        | DeviceLock | passcode | 6 character string |
        | DeviceLock | lock_message | string |
        | DisableRemoteDesktop | N/A | macOS 10.14.4 or later |
        | EnableRemoteDesktop | N/A | macOS 10.14.4 or later |
        | EraseDevice | passcode | 6 character string |
        | ScheduleOSUpdate (deprecated on 2022-10-17) | action | macOS 10.12.0 or later |
        | SettingsDisableBluetooth | N/A | macOS 10.13.4 or later |
        | SettingsEnableBluetooth | N/A | macOS 10.13.4 or later |
        | UnlockUserAccount | user_name |  DEP enrolled device and user_name value (string) |
      parameters:
      - description: ''
        in: path
        name: command
        required: true
        type: string
        enum: [BlankPush, DeleteUser, DeviceLock, DisableRemoteDesktop, EnableRemoteDesktop, EraseDevice, ScheduleOSUpdate, SettingsDisableBluetooth, SettingsEnableBluetooth, UnlockUserAccount, UnmanageDevice]
      responses:
        '201':
          description: Created
  "/computercommands/command/{command}/id/{id}":
    post:
      x-explorer-enabled: false
      tags:
      - computercommands
      summary: Creates a new computer command using command name and device IDs
      operationId: createComputerCommandByCommandAndId
      parameters:
      - description: Command to send (SettingsEnableBluetooth and SettingsDisableBluetooth require macOS 10.13.4 or later, EnableRemoteDesktop and DisableRemoteDesktop require macOS 10.14.4, ScheduleOSUpdate (deprecated on 2022-10-17) requires macOS 10.12.0 or later)
        in: path
        name: command
        required: true
        type: string
        enum:
          - BlankPush
          - EnableRemoteDesktop
          - DisableRemoteDesktop
          - ScheduleOSUpdate
          - SettingsEnableBluetooth
          - SettingsDisableBluetooth
          - UnmanageDevice
      - description: Computer ID - supports comma separated values (e.g. id/8,10,55)
        in: path
        name: id
        required: true
        type: string
      responses:
        '201':
          description: Created
  "/computercommands/command/{command}/action/{action}/id/{id}":
    post:
      x-explorer-enabled: false
      tags:
      - computercommands
      summary: "Creates a new computer command with a command specific action. Commands supported: ScheduleOSUpdate (deprecated on 2022-10-17)"
      operationId: createComputerCommandByCommandAndAction
      parameters:
      - description: Id of computer or computers (supports comma separated values e.g. /id/8,10,55) to send the command
        in: path
        name: id
        required: true
        type: string
      - description: A value of "install" is similar to clicking the "Download and Install Updates" button on the UI. Any other value mimics the behavior of "Download Updates" from the UI.
        in: path
        name: action
        required: true
        type: string
        enum:
          - install
      - description: Command to send to device.
        in: path
        name: command
        required: true
        type: string
        enum:
          - ScheduleOSUpdate
      responses:
        '201':
          description: Created
  "/computercommands/command/{command}/passcode/{passcode}/id/{id}":
    post:
      x-explorer-enabled: false
      tags:
      - computercommands
      summary: Creates a new computer command using command name and device IDs
      operationId: createComputerCommandByCommandIdAndPasscode
      description: Issuing a DeviceLock and EraseDevice command requires a 6 character passcode.
      parameters:
      - description: Command to send
        in: path
        name: command
        required: true
        type: string
        enum:
          - DeviceLock
          - EraseDevice
      - description: Computer ID - supports comma separated values (e.g id/8,10,55)
        in: path
        name: id
        required: true
        type: string
      - description: Passcode to apply to device
        in: path
        name: passcode
        required: true
        type: string
      responses:
        '201':
          description: Created
  "/computerextensionattributes":
    get:
      tags:
      - computerextensionattributes
      summary: Finds all computer extension attributes
      operationId: findComputerextensionattributes
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_extension_attributes'
  "/computerextensionattributes/id/{id}":
    get:
      tags:
      - computerextensionattributes
      summary: Finds computer extension attributes by ID
      operationId: findComputerextensionattributesById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_extension_attribute'
    put:
      x-explorer-enabled: false
      tags:
      - computerextensionattributes
      summary: Updates an existing computer extension attribute by ID
      operationId: updateComputerextensionattributeById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - computerextensionattributes
      summary: Creates a new computer extension attribute by ID
      operationId: createComputerextensionattributeById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computerextensionattributes
      summary: Deletes a computer extension attribute by ID
      operationId: deleteComputerextensionattributeById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
  "/computerextensionattributes/name/{name}":
    get:
      tags:
      - computerextensionattributes
      summary: Finds computer extension attributes by name
      operationId: findComputerextensionattributesByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_extension_attribute'
    put:
      x-explorer-enabled: false
      tags:
      - computerextensionattributes
      summary: Updates an existing computer extension attribute by name
      operationId: updateComputerextensionattributeByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computerextensionattributes
      summary: Deletes a computer extension attribute by name
      operationId: deleteComputerextensionattributeByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
  "/computergroups":
    get:
      tags:
      - computergroups
      summary: Finds all computer groups
      operationId: findComputerGroups
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_groups'
  "/computergroups/id/{id}":
    get:
      tags:
      - computergroups
      summary: Finds computer groups by ID
      operationId: findComputerGroupsById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_group'
    put:
      x-explorer-enabled: false
      tags:
      - computergroups
      summary: Updates an existing computer group by ID
      description: One or more computers can be added by using "computer_additions" instead of "computers". One or more computers can be deleted by using "computer_deletions" instead of "computers"
      operationId: updateComputerGroupById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - computergroups
      summary: Creates a new computer group by ID
      operationId: createComputerGroupById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computergroups
      summary: Deletes a computer group by ID
      operationId: deleteComputerGroupById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        type: integer
        required: true
      responses:
        '200':
          description: OK
  "/computergroups/name/{name}":
    get:
      tags:
      - computergroups
      summary: Finds computer groups by name
      operationId: findComputerGroupsByName
      parameters:
      - description: Name to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_group'
    put:
      x-explorer-enabled: false
      tags:
      - computergroups
      summary: Updates an existing computer group by name
      description: One or more computers can be added by using "computer_additions" instead of "computers". One or more computers can be deleted by using "computer_deletions" instead of "computers"
      operationId: updateComputerGroupByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computergroups
      summary: Deletes a computer group by name
      operationId: deleteComputerGroupByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        type: string
        required: true
      responses:
        '200':
          description: OK
  "/computerhardwaresoftwarereports/id/{id}/{start_date}_{end_date}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds hardware/software reports by computer ID
      operationId: findComputerHardwareSoftwareReportsById
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/id/{id}/{start_date}_{end_date}/subset/{subset}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds a subset of hardware/software reports by computer ID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/Software&Hardware)
      operationId: findComputerHardwareSoftwareReportsByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Computer ID to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [Software, Hardwre, Fonts, Plugins]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/name/{name}/{start_date}_{end_date}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds hardware/software reports by computer name
      operationId: findComputerHardwareSoftwareReportsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/name/{name}/{start_date}_{end_date}/subset/{subset}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds a subset of hardware/software reports by computer name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/Software&Hardware)
      operationId: findComputerHardwareSoftwareReportsByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [Software, Hardwre, Fonts, Plugins]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/udid/{udid}/{start_date}_{end_date}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds hardware/software reports by computer UDID
      operationId: findComputerHardwareSoftwareReportsByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/udid/{udid}/{start_date}_{end_date}/subset/{subset}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds a subset of hardware/software reports by computer UDID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/Software&Hardware)
      operationId: findComputerHardwareSoftwareReportsByUDIDSubset
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [Software, Hardwre, Fonts, Plugins]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/serialnumber/{serialnumber}/{start_date}_{end_date}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds hardware/software reports by computer serial number
      operationId: findComputerHardwareSoftwareReportsBySerial
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/serialnumber/{serialnumber}/{start_date}_{end_date}/subset/{subset}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds a subset of hardware/software reports by computer serial number
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/Software&Hardware)
      operationId: findComputerHardwareSoftwareReportsBySerialSubset
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [Software, Hardwre, Fonts, Plugins]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/macaddress/{macaddress}/{start_date}_{end_date}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds hardware/software reports by computer MAC address
      operationId: findComputerHardwareSoftwareReportsByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: MAC address to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhardwaresoftwarereports/macaddress/{macaddress}/{start_date}_{end_date}/subset/{subset}":
    get:
      tags:
      - computerhardwaresoftwarereports
      summary: Finds a subset of hardware/software reports by computer MAC address
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/Software&Hardware)
      operationId: findComputerHardwareSoftwareReportsByMacAddressSubset
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: MAC address to filter by
      - name: start_date
        in: path
        required: true
        type: string
        format: date
        description: Start date (e.g. yyyy-mm-dd)
      - name: end_date
        in: path
        required: true
        type: string
        format: date
        description: End date (e.g. yyyy-mm-dd)
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [Software, Hardwre, Fonts, Plugins]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_hardware_software_reports'
  "/computerhistory/id/{id}":
    get:
      tags:
      - computerhistory
      summary: Finds computer history by ID
      operationId: findComputerHistoryById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Computer ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/id/{id}/subset/{subset}":
    get:
      tags:
      - computerhistory
      summary: Finds a subset of computer history data by ID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Commands)
      operationId: findComputerHistoryByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Computer ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ComputerUsageLogs, Audits, PolicyLogs, CasperRemoteLogs, ScreenSharingLogs, CasperImagingLogs, Commands, UserLocation, MacAppStoreApplications]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/name/{name}":
    get:
      tags:
      - computerhistory
      summary: Finds computer history by name
      operationId: findComputerHistoryByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Computer Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/name/{name}/subset/{subset}":
    get:
      tags:
      - computerhistory
      summary: Finds a subset of computer history data by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Commands)
      operationId: findComputerHistoryByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Computer Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ComputerUsageLogs, Audits, PolicyLogs, CasperRemoteLogs, ScreenSharingLogs, CasperImagingLogs, Commands, UserLocation, MacAppStoreApplications]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/udid/{udid}":
    get:
      tags:
      - computerhistory
      summary: Finds computer history by UDID
      operationId: findComputerHistoryByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: Computer UDID to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/udid/{udid}/subset/{subset}":
    get:
      tags:
      - computerhistory
      summary: Finds a subset of computer history data by UDID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Commands)
      operationId: findComputerHistoryByUDIDSubset
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: Computer UDID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ComputerUsageLogs, Audits, PolicyLogs, CasperRemoteLogs, ScreenSharingLogs, CasperImagingLogs, Commands, UserLocation, MacAppStoreApplications]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/serialnumber/{serialnumber}":
    get:
      tags:
      - computerhistory
      summary: Finds computer history by serial number
      operationId: findComputerHistoryBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Computer Serial Number to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/serialnumber/{serialnumber}/subset/{subset}":
    get:
      tags:
      - computerhistory
      summary: Finds a subset of computer history data by serial number
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Commands)
      operationId: findComputerHistoryBySerialNumberSubset
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Computer Serial Number to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ComputerUsageLogs, Audits, PolicyLogs, CasperRemoteLogs, ScreenSharingLogs, CasperImagingLogs, Commands, UserLocation, MacAppStoreApplications]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/macaddress/{macaddress}":
    get:
      tags:
      - computerhistory
      summary: Finds computer history by MAC address
      operationId: findComputerHistoryByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Computer Mac Address to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerhistory/macaddress/{macaddress}/subset/{subset}":
    get:
      tags:
      - computerhistory
      summary: Finds a subset of computer history data by MAC address
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Commands)
      operationId: findComputerHistoryByMacAddressSubset
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Computer Mac Address to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ComputerUsageLogs, Audits, PolicyLogs, CasperRemoteLogs, ScreenSharingLogs, CasperImagingLogs, Commands, UserLocation, MacAppStoreApplications]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_history'
  "/computerinventorycollection":
    get:
      tags:
      - computerinventorycollection
      summary: Finds the Jamf Pro computer inventory collection information
      operationId: findComputerInventoryCollection
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_inventory_collection'
    put:
      x-explorer-enabled: false
      tags:
      - computerinventorycollection
      summary: Updates the Jamf Pro computer inventory collection information
      operationId: updateComputerInventoryCollection
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/computer_inventory_collection'
      responses:
        '201':
          description: Created
  "/computerinvitations":
    get:
      tags:
      - computerinvitations
      summary: Finds all computer invitations
      operationId: findComputerInvitations
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_invitations'
  "/computerinvitations/id/{id}":
    get:
      tags:
      - computerinvitations
      summary: Finds computer invitations by id
      operationId: findComputerInvitationsById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_invitation'
    post:
      x-explorer-enabled: false
      tags:
      - computerinvitations
      summary: Creates a new computer invitation by id
      operationId: createComputerInvitationsById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/computer_invitation'
    delete:
      tags:
      - computerinvitations
      summary: Deletes a computer invitation by id
      operationId: deleteComputerInvitationById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '200':
          description: OK
  "/computerinvitations/invitation/{invitation}":
    get:
      tags:
      - computerinvitations
      summary: Finds computer invitations by invitation
      operationId: findComputerInvitationsByInvitation
      parameters:
      - description: Invitation value to filter by
        in: path
        name: invitation
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_invitation'
    post:
      x-explorer-enabled: false
      tags:
      - computerinvitations
      summary: Creates a new computer invitation by invitation
      operationId: createComputerInvitationsByInvitation
      parameters:
      - description: Invitation value to filter by
        in: path
        name: invitation
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/computer_invitation'
    delete:
      tags:
      - computerinvitations
      summary: Deletes a computer invitation by invitation
      operationId: deleteComputerInvitationByInvitation
      parameters:
      - description: Invitation value to filter by
        in: path
        name: invitation
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '200':
          description: OK
  "/computermanagement/id/{id}":
    get:
      tags:
      - computermanagement
      summary: Finds computer management information by ID
      operationId: findComputerManagementById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Computer ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/id/{id}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of computer management information by ID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Computer ID value to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/id/{id}/username/{username}":
    get:
      tags:
      - computermanagement
      summary: Finds management information for a computer and username
      operationId: findComputerManagementByIdUsername
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Computer ID to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/id/{id}/username/{username}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of management information for a computer and username
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementByIdUsernameSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Computer ID to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/id/{id}/patchfilter/{filter}":
    get:
      tags:
      - computermanagement
      summary: Display patch management information for a computer and filter
      operationId: findComputerManagementByIdPatchFilter
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Computer ID to filter by
      - name: filter
        in: path
        required: true
        type: string
        description: filter to apply
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/name/{name}":
    get:
      tags:
      - computermanagement
      summary: Finds computer management information by name
      operationId: findComputerManagementByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Computer Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/name/{name}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of computer management information by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Computer Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/name/{name}/username/{username}":
    get:
      tags:
      - computermanagement
      summary: Finds management information for a computer and username
      operationId: findComputerManagementByNameUsername
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Computer name to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/name/{name}/username/{username}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of management information for a computer and username
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementByNameUsernameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Computer name to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/name/{name}/patchfilter/{filter}":
    get:
      tags:
      - computermanagement
      summary: Display patch management information for a computer and filter
      operationId: findComputerManagementByNamePatchFilter
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Computer name to filter by
      - name: filter
        in: path
        required: true
        type: string
        description: filter to apply
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/udid/{udid}":
    get:
      tags:
      - computermanagement
      summary: Finds computer management information by UDID
      operationId: findComputerManagementByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: Computer UDID to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/udid/{udid}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of computer management information by UDID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementByUDIDSubset
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: Computer UDID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/udid/{udid}/username/{username}":
    get:
      tags:
      - computermanagement
      summary: Finds management information for a computer and username
      operationId: findComputerManagementByUdidUsername
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: Computer UDID to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/udid/{udid}/username/{username}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of management information for a computer and username
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementByUdidUsernameSubset
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: Computer UDID to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/udid/{udid}/patchfilter/{filter}":
    get:
      tags:
      - computermanagement
      summary: Display patch management information for a computer and filter
      operationId: findComputerManagementByUdidPatchFilter
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: Computer UDID to filter by
      - name: filter
        in: path
        required: true
        type: string
        description: filter to apply
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/serialnumber/{serialnumber}":
    get:
      tags:
      - computermanagement
      summary: Finds computer management information by serial number
      operationId: findComputerManagementBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Computer Serial Number to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/serialnumber/{serialnumber}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of computer management information by serial number
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementBySerialNumberSubset
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Computer Serial Number to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/serialnumber/{serialnumber}/username/{username}":
    get:
      tags:
      - computermanagement
      summary: Finds management information for a computer and username
      operationId: findComputerManagementBySerialNumberUsername
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Computer serial number to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/serialnumber/{serialnumber}/username/{username}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of management information for a computer and username
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementBySerialNumberUsernameSubset
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Computer serial number to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/serialnumber/{serialnumber}/patchfilter/{filter}":
    get:
      tags:
      - computermanagement
      summary: Display patch management information for a computer and filter
      operationId: findComputerManagementBySerialNumberPatchFilter
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Computer serial number to filter by
      - name: filter
        in: path
        required: true
        type: string
        description: filter to apply
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/macaddress/{macaddress}":
    get:
      tags:
      - computermanagement
      summary: Finds computer management information by MAC address
      operationId: findComputerManagementByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Computer Mac Address to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/macaddress/{macaddress}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of computer management information by MAC address
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementByMacAddressSubset
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Computer Mac Address to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/macaddress/{macaddress}/username/{username}":
    get:
      tags:
      - computermanagement
      summary: Finds management information for a computer and username
      operationId: findComputerManagementByMacAddressUsername
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Computer Mac address to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/macaddress/{macaddress}/username/{username}/subset/{subset}":
    get:
      tags:
      - computermanagement
      summary: Finds a subset of management information for a computer and username
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Policies)
      operationId: findComputerManagementByMacAddressUsernameSubset
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Computer Mac Address to filter by
      - name: username
        in: path
        required: true
        type: string
        description: Username to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Policies, Ebooks, MacAppStoreApps, OSXConfigurationProfiles, ManagedPreferenceProfiles, RestrictedSoftware, SmartGroups, StaticGroups, PatchReportingSoftwareTitles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computermanagement/macaddress/{macaddress}/patchfilter/{filter}":
    get:
      tags:
      - computermanagement
      summary: Display patch management information for a computer and filter
      operationId: findComputerManagementByMacAddressPatchFilter
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Computer Mac address to filter by
      - name: filter
        in: path
        required: true
        type: string
        description: filter to apply
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_management'
  "/computerreports":
    get:
      tags:
      - computerreports
      summary: Finds all computer reports
      operationId: findComputerReports
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_reports'
  "/computerreports/id/{id}":
    get:
      tags:
      - computerreports
      summary: Finds computer reports by id
      description: Additional display fields are returned within the `Computer` object
      operationId: findComputerReportsById
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Computer Report ID to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_report'
  "/computerreports/name/{name}":
    get:
      tags:
      - computerreports
      summary: Finds computer reports by name
      description: Additional display fields are returned within the `Computer` object
      operationId: findComputerReportsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Computer Report name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer_report'
  "/computers":
    get:
      tags:
      - computers
      summary: Finds all computers
      operationId: findComputers
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computers'
  "/computers/subset/basic":
    get:
      tags:
      - computers
      summary: Finds basic information for all computers
      operationId: findComputersBasic
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computers_basic'
  "/computers/match/{match}":
    get:
      tags:
      - computers
      summary: Searches for computers that match the provided parameter
      description: Match performs the same function as a simple search in the GUI.
      operationId: matchComputers
      parameters:
      - name: match
        in: path
        required: true
        type: string
        description: Name, mac address, etc. to filter by.  Match uses the same format
          as the general search in Jamf Pro.  For instance, admin* can be used to match
          computer names that begin with admin
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/computers/match/name/{matchname}":
    get:
      tags:
      - computers
      summary: Searches for computers that match the provided name parameter
      operationId: matchComputersNames
      parameters:
      - name: matchname
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/computers/id/{id}":
    get:
      tags:
      - computers
      summary: Finds computers by ID
      operationId: findComputersById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
    put:
      x-explorer-enabled: false
      tags:
      - computers
      summary: Updates an existing computer by ID
      description: Certificates and mdm_capable are ignored.
      operationId: updateComputerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - computers
      summary: Creates a computer
      description: Certificates and mdm_capable are ignored.
      operationId: createComputerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computers
      summary: Deletes a computer by ID
      operationId: deleteComputerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/computers/id/{id}/subset/{subset}":
    get:
      tags:
      - computers
      summary: Finds a subset of information for a computer
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findComputersByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Peripherals, Hardware, Certificates, Software, ExtensionAttributes, GroupsAccounts, iphones, ConfigurationProfiles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/computers/name/{name}":
    get:
      tags:
      - computers
      summary: Finds the first computer with the given name
      operationId: findComputersByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
    put:
      x-explorer-enabled: false
      tags:
      - computers
      summary: Updates an existing computer by name
      description: Certificates and mdm_capable are ignored.
      operationId: updateComputerByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computers
      summary: Deletes a computer by name
      operationId: deleteComputerByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/computers/name/{name}/subset/{subset}":
    get:
      tags:
      - computers
      summary: Finds a subset of data for the first computer with the given name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Hardware)
      operationId: findComputersByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Peripherals, Hardware, Certificates, Software, ExtensionAttributes, GroupsAccounts, iphones, ConfigurationProfiles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
  "/computers/udid/{udid}":
    get:
      tags:
      - computers
      summary: Finds computers by UDID
      operationId: findComputersByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
    put:
      x-explorer-enabled: false
      tags:
      - computers
      summary: Updates an existing computer by UDID
      description: Certificates and mdm_capable are ignored.
      operationId: updateComputerByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computers
      summary: Deletes a computer by UDID
      operationId: deleteComputerByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID value to filter by
      responses:
        '200':
          description: OK
  "/computers/udid/{udid}/subset/{subset}":
    get:
      tags:
      - computers
      summary: Finds a subset of data for computers by UDID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Hardware)
      operationId: findComputersByUDIDSubset
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Peripherals, Hardware, Certificates, Software, ExtensionAttributes, GroupsAccounts, iphones, ConfigurationProfiles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
  "/computers/serialnumber/{serialnumber}":
    get:
      tags:
      - computers
      summary: Finds computers by serial number
      operationId: findComputersBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
    put:
      x-explorer-enabled: false
      tags:
      - computers
      summary: Updates an existing computer by serial number
      description: Certificates and mdm_capable are ignored.
      operationId: updateComputerBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computers
      summary: Deletes a computer by serial number
      operationId: deleteComputerBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number value to filter by
      responses:
        '200':
          description: OK
  "/computers/serialnumber/{serialnumber}/subset/{subset}":
    get:
      tags:
      - computers
      summary: Finds a subset of data for computers by serial number
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Hardware)
      operationId: findComputersBySerialNumberSubset
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Peripherals, Hardware, Certificates, Software, ExtensionAttributes, GroupsAccounts, iphones, ConfigurationProfiles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
  "/computers/macaddress/{macaddress}":
    get:
      tags:
      - computers
      summary: Finds computers by MAC address
      operationId: findComputersByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Mac address to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
    put:
      x-explorer-enabled: false
      tags:
      - computers
      summary: Updates an existing computer by MAC address
      description: Certificates and mdm_capable are ignored.
      operationId: updateComputerByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: MAC address value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - computers
      summary: Deletes a computer by MAC address
      operationId: deleteComputerByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: MAC address value to filter by
      responses:
        '200':
          description: OK
  "/computers/macaddress/{macaddress}/subset/{subset}":
    get:
      tags:
      - computers
      summary: Finds a subset of data for computers by MAC address
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Hardware)
      operationId: findComputersByMacAddressSubset
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Mac address to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Peripherals, Hardware, Certificates, Software, ExtensionAttributes, GroupsAccounts, iphones, ConfigurationProfiles]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/computer'
  "/computers/extensionattributedataflush/id/{id}":
    delete:
      tags:
      - computers
      summary: Deletes data collected by an extension attribute
      operationId: flushComputerExtenstionAttributeData
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the computer extension attribute for which data will be deleted
      produces:
      - application/xml
      responses:
        '200':
          description: OK
  "/departments":
    get:
      tags:
      - departments
      summary: Finds all departments
      operationId: findDepartments
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/departments'
  "/departments/id/{id}":
    get:
      tags:
      - departments
      summary: Finds departments by ID
      operationId: findDepartmentsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/department'
    put:
      x-explorer-enabled: false
      tags:
      - departments
      summary: Updates an existing department by ID
      operationId: updateDepartmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - departments
      summary: Creates a new department by ID
      operationId: createDepartmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - departments
      summary: Deletes a department by ID
      operationId: deleteDepartmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/departments/name/{name}":
    get:
      tags:
      - departments
      summary: Finds departments by name
      operationId: findDepartmentsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
    put:
      x-explorer-enabled: false
      tags:
      - departments
      summary: Updates an existing department by name
      operationId: updateDepartmentByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - departments
      summary: Deletes a department by name
      operationId: deleteDepartmentByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/directorybindings":
    get:
      tags:
      - directorybindings
      summary: Finds all directory bindings
      operationId: findDirectoryBindings
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/directory_bindings'
  "/directorybindings/id/{id}":
    get:
      tags:
      - directorybindings
      summary: Finds directory bindings by ID
      operationId: findDirectoryBindingsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/directory_binding'
    put:
      x-explorer-enabled: false
      tags:
      - directorybindings
      summary: Updates an existing directory binding by ID
      operationId: updateDirectoryBindingById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - directorybindings
      summary: Creates a new directory binding by ID
      operationId: createDirectoryBindingById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - directorybindings
      summary: Deletes a directory binding by ID
      operationId: deleteDirectoryBindingById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/directorybindings/name/{name}":
    get:
      tags:
      - directorybindings
      summary: Finds directory bindings by name
      operationId: findDirectoryBindingsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/directory_binding'
    put:
      x-explorer-enabled: false
      tags:
      - directorybindings
      summary: Updates an existing directory binding by name
      operationId: updateDirectoryBindingByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - directorybindings
      summary: Deletes a directory binding by name
      operationId: deleteDirectoryBindingByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/diskencryptionconfigurations":
    get:
      tags:
      - diskencryptionconfigurations
      summary: Finds all disk encryption configurations
      operationId: findDiskEncryptionConfigurations
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/disk_encryption_configurations'
  "/diskencryptionconfigurations/id/{id}":
    get:
      tags:
      - diskencryptionconfigurations
      summary: Finds disk encryption configurations by ID
      operationId: findDiskEncryptionConfigurationsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/disk_encryption_configuration'
    put:
      x-explorer-enabled: false
      tags:
      - diskencryptionconfigurations
      summary: Updates an existing disk encryption configuration by ID
      operationId: updateDiskEncryptionConfigurationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - diskencryptionconfigurations
      summary: Creates a new disk encryption configuration by ID
      operationId: createDiskEncryptionConfigurationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - diskencryptionconfigurations
      summary: Deletes a disk encryption configuration by ID
      operationId: deleteDiskEncryptionConfigurationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/diskencryptionconfigurations/name/{name}":
    get:
      tags:
      - diskencryptionconfigurations
      summary: Finds disk encryption configurations by name
      operationId: findDiskEncryptionConfigurationsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/disk_encryption_configuration'
    put:
      x-explorer-enabled: false
      tags:
      - diskencryptionconfigurations
      summary: Updates an existing disk encryption configuration by name
      operationId: updateDiskEncryptionConfigurationByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - diskencryptionconfigurations
      summary: Deletes a disk encryption configuration by name
      operationId: deleteDiskEncryptionConfigurationByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/distributionpoints":
    get:
      tags:
      - distributionpoints
      summary: Finds all distribution points
      operationId: findDistributionPoints
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/distribution_points'
  "/distributionpoints/id/{id}":
    get:
      tags:
      - distributionpoints
      summary: Finds distribution points by ID
      operationId: findDistributionPointsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/distribution_point'
    put:
      x-explorer-enabled: false
      tags:
      - distributionpoints
      summary: Updates an existing distribution point by ID
      operationId: updateDistributionPointById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - distributionpoints
      summary: Creates a new distribution point by ID
      operationId: createDistributionPointById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - distributionpoints
      summary: Deletes a distribution point by ID
      operationId: deleteDistributionPointById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/distributionpoints/name/{name}":
    get:
      tags:
      - distributionpoints
      summary: Finds distribution points by name
      operationId: findDistributionPointsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/distribution_point'
    put:
      x-explorer-enabled: false
      tags:
      - distributionpoints
      summary: Updates an existing distribution point by name
      operationId: updateDistributionPointByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - distributionpoints
      summary: Deletes a distribution point by name
      operationId: deleteDistributionPointByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/dockitems":
    get:
      tags:
      - dockitems
      summary: Finds all dock items
      operationId: findDockItems
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dock_items'
  "/dockitems/id/{id}":
    get:
      tags:
      - dockitems
      summary: Finds dock items by ID
      operationId: findDockItemsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dock_item'
    put:
      x-explorer-enabled: false
      tags:
      - dockitems
      summary: Updates an existing dock item by ID
      operationId: updateDockItemById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - dockitems
      summary: Creates a new dock item by ID
      operationId: createDockItemById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - dockitems
      summary: Deletes a dock item by ID
      operationId: deleteDockItemById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/dockitems/name/{name}":
    get:
      tags:
      - dockitems
      summary: Finds dock items by name
      operationId: findDockItemsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dock_item'
    put:
      x-explorer-enabled: false
      tags:
      - dockitems
      summary: Updates an existing dock item by name
      operationId: updateDockItemByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - dockitems
      summary: Deletes a dock item by name
      operationId: deleteDockItemByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/ebooks":
    get:
      tags:
      - ebooks
      summary: Finds all ebooks
      operationId: findEBooks
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ebooks'
  "/ebooks/id/{id}":
    get:
      tags:
      - ebooks
      summary: Finds ebooks by ID
      operationId: findEBooksById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ebook'
    put:
      x-explorer-enabled: false
      tags:
      - ebooks
      summary: Updates an existing ebook by ID
      operationId: updateEBookById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - ebooks
      summary: Creates a new ebook by ID
      operationId: createEBookById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - ebooks
      summary: Deletes an ebook by ID
      operationId: deleteEBookById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/ebooks/id/{id}/subset/{subset}":
    get:
      tags:
      - ebooks
      summary: Finds a subset of data for an ebook by ID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findEbookssByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/ebooks/name/{name}":
    get:
      tags:
      - ebooks
      summary: Finds ebooks by name
      operationId: findEBooksByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ebook'
    put:
      x-explorer-enabled: false
      tags:
      - ebooks
      summary: Updates an existing ebook by name
      operationId: updateEBookByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - ebooks
      summary: Deletes an ebook by name
      operationId: deleteEBookByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/ebooks/name/{name}/subset/{subset}":
    get:
      tags:
      - ebooks
      summary: Finds a subset of data for ebooks by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findEBooksByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ebook'
  "/fileuploads/{resource}/{idType}/{id}":
    post:
      tags:
      - fileuploads
      summary: Creates file attachments in Jamf Pro
      description: Here is a sample command curl -k -u user:password https://my.server.com:8443/JSSResource/fileuploads/computers/id/2 -F name=@/Users/admin/Documents/Sample.doc -X POST
      operationId: uploadFiles
      parameters:
      - name: resource
        in: path
        required: true
        type: string
        description: Resource to attach the file to
        enum: [computers, mobiledevices, enrollmentprofiles, printers, peripherals, policies, ebooks, mobiledeviceapplicationsicon, mobiledeviceapplicationsipa, diskencryptionconfigurations]
      - name: idType
        in: path
        required: true
        type: string
        description: Name is supported for all but the peripherals resource
        enum: [id, name]
      - name: id
        in: path
        required: true
        type: string
        description: ''
      - name: FORCE_IPA_UPLOAD
        in: query
        type: boolean
        description: Uploads the .ipa to Jamf Cloud Distribution Service instead of the Jamf Pro database. Only supported for Jamf Cloud customers and the `mobiledeviceapplicationsipa` resource.
      responses:
        '201':
          description: Created
  "/gsxconnection":
    get:
      tags:
      - gsxconnection
      summary: Finds the Jamf Pro GSX connection information
      operationId: findGSXConnection
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/gsx_connection'
    put:
      x-explorer-enabled: false
      tags:
      - gsxconnection
      summary: Updates the Jamf Pro GSX connection information
      operationId: updateGSXConnection
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/gsx_connection'
      responses:
        '201':
          description: Created
  "/healthcarelistener":
    get:
      tags:
      - healthcarelistener
      summary: Find all Healthcare Listeners
      operationId: findHealthcareListener
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/healthcare_listeners'
  "/healthcarelistener/id/{id}":
    get:
      tags:
      - healthcarelistener
      summary: Finds healthcare listener by ID
      operationId: findHealthcareListenersById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/healthcare_listener'
    put:
      x-explorer-enabled: false
      tags:
      - healthcarelistener
      summary: Updates an existing healthcare listener by ID
      operationId: updateHealthCareListenerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
  "/healthcarelistenerrule":
    get:
      tags:
      - healthcarelistenerrule
      summary: Find all Healthcare Listener rules
      operationId: findHealthcareListenerRule
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/healthcare_listener_rules'
  "/healthcarelistenerrule/id/{id}":
    get:
      tags:
      - healthcarelistenerrule
      summary: Finds Healthcare Listener rules by ID
      operationId: findHealthcareListenerRulesById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/healthcare_listener_rule'
    put:
      x-explorer-enabled: false
      tags:
      - healthcarelistenerrule
      summary: Updates an existing Healthcare Listener rule by ID
      operationId: updateHealthCareListenerRuleById
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - healthcarelistenerrule
      summary: Creates a new Healthcare Listener rule
      operationId: createHealthCareListenerRuleById
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '200':
          description: Created
  "/ibeacons":
    get:
      tags:
      - ibeacons
      summary: Finds all iBeacon regions
      operationId: findIBeacons
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ibeacons'
  "/ibeacons/id/{id}":
    get:
      tags:
      - ibeacons
      summary: Finds iBeacon regions by ID
      operationId: findIBeaconsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ibeacon'
    put:
      x-explorer-enabled: false
      tags:
      - ibeacons
      summary: Updates an existing iBeacon region by ID
      operationId: updateIBeaconById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - ibeacons
      summary: Creates a new iBeacon region by ID
      operationId: createIBeaconById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - ibeacons
      summary: Deletes an iBeacon region by ID
      operationId: deleteIBeaconById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/ibeacons/name/{name}":
    get:
      tags:
      - ibeacons
      summary: Finds iBeacon regions by name
      operationId: findIBeaconsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ibeacon'
    put:
      x-explorer-enabled: false
      tags:
      - ibeacons
      summary: Updates an existing iBeacon region by name
      operationId: updateIBeaconByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - ibeacons
      summary: Deletes an iBeacon region by name
      operationId: deleteIBeaconByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '200':
          description: OK
  "/infrastructuremanager":
    get:
      tags:
      - infrastructuremanager
      summary: Find all Infrastructure Managers
      operationId: findInfrastructureManager
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_managers'
  "/infrastructuremanager/id/{id}":
    get:
      tags:
      - infrastructuremanager
      summary: Finds infrastructure manager by ID
      operationId: findInfrastructureManagerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/infrastructure_manager'
    put:
      x-explorer-enabled: false
      tags:
      - infrastructuremanager
      summary: Updates an existing infrastructure manager by ID
      operationId: updateInfrastructureManagerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
  "/jssuser":
    get:
      tags:
      - jssuser
      deprecated: true
      summary: Returns basic information about Jamf Pro, as well as privileges
        of the person requesting the resource. (Deprecated)
      operationId: JssuserGet
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/jss_user'
  "/jsonwebtokenconfigurations":
    get:
      tags:
      - jsonwebtokenconfigurations
      summary: Finds all JSON Web Token configurations
      operationId: findJsonWebTokenConfigurations
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/json_web_token_configurations'
  "/jsonwebtokenconfigurations/id/{id}":
    get:
      tags:
      - jsonwebtokenconfigurations
      summary: Find JSON Web Token configuration by ID
      operationId: findJsonWebTokenConfigurationById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/json_web_token_configuration'
    put:
      x-explorer-enabled: false
      tags:
      - jsonwebtokenconfigurations
      summary: Updates an existing JSON Web Token configuration by ID
      operationId: updateJsonWebTokenConfigurationById
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - jsonwebtokenconfigurations
      summary: Creates a new JSON Web Token configuration by ID
      operationId: createJsonWebTokenConfigurationById
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/json_web_token_configuration'
    delete:
      tags:
      - jsonwebtokenconfigurations
      summary: Deletes a JSON Web Token configuration by ID
      operationId: deleteJsonWebTokenConfigurationById
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/ldapservers":
    get:
      tags:
      - ldapservers
      summary: Finds all LDAP servers
      operationId: findLDAPServers
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ldap_servers'
  "/ldapservers/id/{id}":
    get:
      tags:
      - ldapservers
      summary: Finds LDAP servers by ID
      operationId: findLDAPServersById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ldap_server'
    put:
      x-explorer-enabled: false
      tags:
      - ldapservers
      summary: Updates an existing LDAP server by ID
      operationId: updateLDAPServerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - ldapservers
      summary: Creates a new LDAP server by ID
      operationId: createLDAPServerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - ldapservers
      summary: Deletes an LDAP server by ID
      operationId: deleteLDAPServerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/ldapservers/id/{id}/user/{user}":
    get:
      tags:
      - ldapservers
      summary: Display information for matching users for an LDAP server
      description: Displays information about matching users for an ldap server specified with the {id} parameter.
      operationId: findLDAPServerUserById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Server ID to filter by
      - name: user
        in: path
        required: true
        type: string
        description: User to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/ldapservers/id/{id}/group/{group}":
    get:
      tags:
      - ldapservers
      summary: Display information for matching groups for an LDAP server
      description: Displays information about matching groups for an ldap server specified with the {id} parameter.
      operationId: findLDAPServerGroupById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Server ID to filter by
      - name: group
        in: path
        required: true
        type: string
        description: Group to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/ldapservers/id/{id}/group/{group}/user/{user}":
    get:
      tags:
      - ldapservers
      summary: Display information about user membership in a group for an LDAP server
      description: Displays information about user membership in a group for an ldap server specified with the {id} parameter. Multiple users separated by a comma are allowed.
      operationId: findLDAPServerGroupUserById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: Server ID to filter by
      - name: group
        in: path
        required: true
        type: string
        description: Group to filter by
      - name: user
        in: path
        required: true
        type: string
        description: User to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/ldapservers/name/{name}":
    get:
      tags:
      - ldapservers
      summary: Finds LDAP servers by name
      operationId: findLDAPServersByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
    put:
      x-explorer-enabled: false
      tags:
      - ldapservers
      summary: Updates an existing LDAP server by name
      operationId: updateLDAPServerByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - ldapservers
      summary: Deletes an LDAP server by name
      operationId: deleteLDAPServerByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/ldapservers/name/{name}/user/{user}":
    get:
      tags:
      - ldapservers
      summary: Display information for matching users for an LDAP server
      description: Displays information about matching users for an ldap server specified with the {name} parameter.
      operationId: findLDAPServerUserByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Server name to filter by
      - name: user
        in: path
        required: true
        type: string
        description: User to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/ldapservers/name/{name}/group/{group}":
    get:
      tags:
      - ldapservers
      summary: Display information for matching groups for an LDAP server
      description: Displays information about matching groups for an ldap server specified with the {name} parameter.
      operationId: findLDAPServerGroupByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Server name to filter by
      - name: group
        in: path
        required: true
        type: string
        description: Group to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/ldapservers/name/{name}/group/{group}/user/{user}":
    get:
      tags:
      - ldapservers
      summary: Display information about user membership in a group for an LDAP server
      description: Displays information about user membership in a group for an ldap server specified with the {name} parameter. Multiple users separated by a comma are allowed.
      operationId: findLDAPServerGroupUserByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Server name to filter by
      - name: group
        in: path
        required: true
        type: string
        description: Group to filter by
      - name: user
        in: path
        required: true
        type: string
        description: User to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/licensedsoftware":
    get:
      tags:
      - licensedsoftware
      summary: Finds all licensed software
      operationId: findLicensedSoftware
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/licensed_software_all'
  "/licensedsoftware/id/{id}":
    get:
      tags:
      - licensedsoftware
      summary: Finds licensed software by ID
      operationId: findLicensedSoftwareById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/licensed_software'
    put:
      x-explorer-enabled: false
      tags:
      - licensedsoftware
      summary: Updates existing licensed software by ID
      description: Matching computers are derived from software definitions, therefore they cannot be set with this operation.
      operationId: updateLicensedSoftwareById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - licensedsoftware
      summary: Creates new licensed software by ID
      description: Matching computers are derived from software definitions, therefore they cannot be set with this operation.
      operationId: createLicensedSoftwareById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - licensedsoftware
      summary: Deletes licensed software by ID
      operationId: deleteLicensedSoftwareById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/licensedsoftware/name/{name}":
    get:
      tags:
      - licensedsoftware
      summary: Finds licensed software by name
      operationId: findLicensedSoftwareByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/licensed_software'
    put:
      x-explorer-enabled: false
      tags:
      - licensedsoftware
      summary: Updates an existing licensed software by name
      description: Matching computers are derived from software definitions, therefore they cannot be set with this operation.
      operationId: updateLicensedSoftwareByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - licensedsoftware
      summary: Deletes licensed software by name
      operationId: deleteLicensedSoftwareByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/logflush":
    delete:
      tags:
      - logflush
      summary: Flushes a log specified in an XML file
      operationId: logFlush
      parameters:
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/logflush'
      responses:
        '200':
          description: OK
  "/logflush/{log}/interval/{interval}":
    delete:
      tags:
      - logflush
      summary: Flushes all logs for a given interval
      operationId: createLogFlushForInterval
      parameters:
      - name: interval
        in: path
        required: true
        type: string
        description: Supported values are a combination of [Zero, One, Two, Three, Six] and [Days, Weeks, Months, Years]. For example, JSSResource/logflush/policies/interval/Three+Months
      - name: log
        in: path
        required: true
        type: string
        description: At this time, only 'policy' logs are supported
        enum: [policy]
      responses:
        '200':
          description: OK
  "/logflush/{log}/id/{id}/interval/{interval}":
    delete:
      tags:
      - logflush
      summary: Flushes a single log for a given interval
      operationId: createLogFlushWithIdAndInterval
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of policy whose log will be flushed
      - name: log
        in: path
        required: true
        type: string
        description: At this time, only 'policy' logs are supported
        enum: [policy]
      - name: interval
        in: path
        required: true
        type: string
        description: Supported values are a combination of [Zero, One, Two, Three, Six] and [Days, Weeks, Months, Years]. For example, JSSResource/logflush/policies/id/1/interval/Three+Months
      responses:
        '200':
          description: OK
  "/macapplications":
    get:
      tags:
      - macapplications
      summary: Finds all mac applications
      operationId: findMacapps
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mac_applications'
  "/macapplications/id/{id}":
    get:
      tags:
      - macapplications
      summary: Finds mac applications by ID
      operationId: findMacappsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mac_application'
    put:
      x-explorer-enabled: false
      tags:
      - macapplications
      summary: Updates an existing mac application by ID
      description: Does not support vpp codes.
      operationId: updateMacappById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - macapplications
      summary: Creates a new mac application by ID
      description: Does not support vpp codes.
      operationId: createMacappById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - macapplications
      summary: Deletes a mac application by ID
      operationId: deleteMacappById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/macapplications/id/{id}/subset/{subset}":
    get:
      tags:
      - macapplications
      summary: Finds a subset of date for a mac application by ID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findMacappsByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService, VPPCodes, VPP]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/macapplications/name/{name}":
    get:
      tags:
      - macapplications
      summary: Finds mac applications by name
      operationId: findMacappsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mac_application'
    put:
      x-explorer-enabled: false
      tags:
      - macapplications
      summary: Updates an existing mac application by name
      description: Does not support vpp codes.
      operationId: updateMacappByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - macapplications
      summary: Deletes a mac application by name
      operationId: deleteMacappByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/macapplications/name/{name}/subset/{subset}":
    get:
      tags:
      - macapplications
      summary: Finds a subset of data for mac applications by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findMacappsByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService, VPPCodes, VPP]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mac_application'
  "/managedpreferenceprofiles":
    get:
      tags:
      - managedpreferenceprofiles
      summary: Finds all managed preference profiles
      operationId: findManagedPreferenceProfiles
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/managed_preference_profiles'
  "/managedpreferenceprofiles/id/{id}":
    get:
      tags:
      - managedpreferenceprofiles
      summary: Finds managed preference profiles by ID
      operationId: findManagedPreferenceProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/managed_preference_profile'
    put:
      x-explorer-enabled: false
      tags:
      - managedpreferenceprofiles
      summary: Updates an existing managed preference profiles by ID
      operationId: updateManagedPreferenceProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - managedpreferenceprofiles
      summary: Creates a new managed preference profile by ID
      operationId: createManagedPreferenceProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - managedpreferenceprofiles
      summary: Deletes a managed preference profiles by ID
      operationId: deleteManagedPreferenceProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/managedpreferenceprofiles/id/{id}/subset/{subset}":
    get:
      tags:
      - managedpreferenceprofiles
      summary: Finds a subset of data for a managed preference profile by ID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findManagedPreferenceProfilesByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, Settings]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/managedpreferenceprofiles/name/{name}":
    get:
      tags:
      - managedpreferenceprofiles
      summary: Finds managed preference profiles by name
      operationId: findManagedPreferenceProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/managed_preference_profile'
    put:
      x-explorer-enabled: false
      tags:
      - managedpreferenceprofiles
      summary: Updates an existing managed preference profiles by name
      operationId: updateManagedPreferenceProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - managedpreferenceprofiles
      summary: Deletes a managed preference profiles by name
      operationId: deleteManagedPreferenceProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/managedpreferenceprofiles/name/{name}/subset/{subset}":
    get:
      tags:
      - managedpreferenceprofiles
      summary: Finds a subset of data for managed preference profiles by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findManagedPreferenceProfilesByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, Settings]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/managed_preference_profile'
  "/mobiledeviceapplications":
    get:
      tags:
      - mobiledeviceapplications
      summary: Finds all mobile device applications
      operationId: findMobileDeviceApplications
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_applications'
  "/mobiledeviceapplications/id/{id}":
    get:
      tags:
      - mobiledeviceapplications
      summary: Finds mobile device applications by ID
      operationId: findMobileDeviceApplicationsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_application'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceapplications
      summary: Updates an existing mobile device application by ID
      description: App configuration preferences should be listed using character entities, e.g. <preferences><dict><key>abc</key><string>xyz</string></dict></preferences>
      operationId: updateMobileDeviceApplicationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceapplications
      summary: Creates a new mobile device application by ID
      description: App configuration preferences should be listed using character entities, e.g. <preferences><dict><key>abc</key><string>xyz</string></dict></preferences>
      operationId: createMobileDeviceApplicationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceapplications
      summary: Deletes a mobile device application by ID
      operationId: deleteMobileDeviceApplicationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceapplications/bundleid/{bundleid}":
    get:
      tags:
      - mobiledeviceapplications
      summary: Finds mobile device applications by bundle ID
      description: If multiple applications match, no application is returned. You may specify both bundle id and version to uniquely identify a mobile device application.
      operationId: findMobileDeviceApplicationsByBundleID
      parameters:
      - name: bundleid
        in: path
        required: true
        type: string
        description: Bundle ID to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_application'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceapplications
      summary: Updates an existing mobile device application by bundle ID
      operationId: updateMobileDeviceApplicationByBundleID
      parameters:
      - name: bundleid
        in: path
        required: true
        type: string
        description: Bundle ID value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceapplications
      summary: Deletes a mobile device application by bundle ID
      operationId: deleteMobileDeviceApplicationByBundleID
      parameters:
      - name: bundleid
        in: path
        required: true
        type: string
        description: Bundle ID value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceapplications/bundleid/{bundleid}/version/{version}":
    get:
      tags:
      - mobiledeviceapplications
      summary: Finds mobile device applications by bundle ID and version
      operationId: findMobileDeviceApplicationsByBundleIDandVersion
      parameters:
      - name: bundleid
        in: path
        required: true
        type: string
        description: Bundle ID to filter by
      - name: version
        in: path
        required: true
        type: string
        description: Version to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_application'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceapplications
      summary: Updates an existing mobile device application by bundle ID and version
      operationId: updateMobileDeviceApplicationByBundleIDandVersion
      parameters:
      - name: bundleid
        in: path
        required: true
        type: string
        description: Bundle ID value to filter by
      - name: version
        in: path
        required: true
        type: string
        description: Version to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceapplications
      summary: Deletes a mobile device application by bundle ID and version
      operationId: deleteMobileDeviceApplicationByBundleIDandVersion
      parameters:
      - name: bundleid
        in: path
        required: true
        type: string
        description: Bundle ID value to filter by
      - name: version
        in: path
        required: true
        type: string
        description: Version to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceapplications/id/{id}/subset/{subset}":
    get:
      tags:
      - mobiledeviceapplications
      summary: Finds a subset of data for a mobile device application by ID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findMobileDeviceAppsByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService, VPPCodes, VPP, AppConfiguration]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/mobiledeviceapplications/name/{name}":
    get:
      tags:
      - mobiledeviceapplications
      summary: Finds mobile device applications by name
      operationId: findMobileDeviceApplicationsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_application'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceapplications
      summary: Updates an existing mobile device application by name
      operationId: updateMobileDeviceApplicationByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceapplications
      summary: Deletes a mobile device application by name
      operationId: deleteMobileDeviceApplicationByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceapplications/name/{name}/subset/{subset}":
    get:
      tags:
      - mobiledeviceapplications
      summary: Finds a subset of data for mobile device applications by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findMobileDeviceApplicationsByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService, VPPCodes, VPP, AppConfiguration]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_application'
  "/mobiledevicecommands":
    get:
      tags:
      - mobiledevicecommands
      summary: Finds all mobile device commands
      operationId: findMobileDeviceCommands
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_commands'
  "/mobiledevicecommands/uuid/{uuid}":
    get:
      tags:
      - mobiledevicecommands
      summary: Finds a mobile device command by UUID
      operationId: findMobileDeviceCommandsByUuid
      parameters:
      - name: uuid
        in: path
        required: true
        type: string
        description: UUID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_command'
  "/mobiledevicecommands/name/{name}":
    get:
      tags:
      - mobiledevicecommands
      summary: Finds all mobile device commands by command name
      operationId: findMobileDeviceCommandsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_command'
  "/mobiledevicecommands/command/{command}":
    get:
      tags:
      - mobiledevicecommands
      summary: Finds all mobile device commands for specified command
      operationId: findMobileDeviceCommandsByCommand
      parameters:
      - name: command
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_command'
  "/mobiledevicecommands/command":
    post:
      x-explorer-enabled: false
      tags:
      - mobiledevicecommands
      summary: Creates a new mobile device command
      operationId: createMobileDeviceCommand
      description: |
        The chart below includes additional requirements for usage of specific commands
        
        | command | Parameters | Requirements | Values |
        | ---------- | ------- | ------------ | ------ |
        | DeviceName | device_name | Supervised Device | string |
        | DeviceLocation | N/A | Supervised and in lost mode | N/A |
        | DeviceLock | lock_message | optional | string |
        | DisableLostMode | N/A | Supervised and in lost mode | N/A |
        | EnableLostMode | lost_mode_message | Supervised device (required if lost_mode_phone is not set) | string |
        | EnableLostMode | lost_mode_phone | Supervised device (required if lost_mode_message is not set) | string |
        | EnableLostMode | lost_mode_footnote | optional | string |
        | EnableLostMode | always_enforce_lost_mode | optional (defaults to 'true') | boolean |
        | EnableLostMode | lost_mode_with_sound | optional (defaults to 'false') | boolean |
        | EraseDevice | preserve_data_plan | optional (defaults to 'false') | boolean |
        | EraseDevice | disallow_proximity_setup | optional (defaults to 'false') | boolean |
        | EraseDevice | clear_activation_lock | optional (defaults to 'false') | boolean |
        | PasscodeLockGracePeriod | passcode_lock_grace_period | Shared iPad | seconds (integer) |
        | PlayLostModeSound | N/A | Supervised and in lost mode | N/A |
        | RestartDevice | N/A | Supervised device | N/A |
        | ScheduleOSUpdate (deprecated on 2022-10-17) | install_action | iOS 9 - 10.2, enrolled via a Prestage enrollment; and/or iOS 10.3 or later; tvOS 12 or later | 1 = Download the update for users to install, 2 = Download and install the update, and restart devices after installation |
        | ScheduleOSUpdate (deprecated on 2022-10-17) | product_version | iOS 11.3 or later, tvOS 12.2 or later | string |
        | SettingsDisableBluetooth | N/A | iOS 11.3+ and Supervised | N/A |
        | SettingsEnableBluetooth | N/A | iOS 11.3+ and Supervised | N/A |
        | ShutDownDevice | N/A | Supervised device | N/A |
        | Wallpaper | wallpaper_settings | Supervised device | 1 = Lock screen, 2 = Home screen, 3 = both |
        | Wallpaper | wallpaper_id | Supervised device (required if wallpaper_content is not set) | Jamf Pro icon ID (integer) |
        | Wallpaper | wallpaper_content | Supervised device (required if wallpaper_id is not set) | base64 encoded PNG or JPEG |
        | RefreshCellularPlans | e_sim_server_url | N/A | This URL is obtained from each carrier separately |
      parameters:
      - name: body
        in: body
        required: true
        description: Command name
        schema:
          $ref: '#/definitions/mobile_device_command_post'
      responses:
        '201':
          description: Created
  "/mobiledevicecommands/command/{command}/id/{id_list}":
    post:
      x-explorer-enabled: false
      tags:
      - mobiledevicecommands
      summary: Creates a new mobile device command
      operationId: createMobileDeviceCommandURL
      description: |
        The chart below includes additional requirements for usage of specific commands
        
        | command | Parameters | Requirements | Values |
        | ---------- | ------- | ------------ | ------ |
        | DeviceLocation | N/A | Supervised and in lost mode | N/A |
        | DisableLostMode | N/A | Supervised and in lost mode | N/A |
        | EnableLostMode | lost_mode_message | Supervised device (required if lost_mode_phone is not set) | string |
        | EnableLostMode | lost_mode_phone | Supervised device (required if lost_mode_message is not set) | string |
        | EnableLostMode | lost_mode_footnote | optional | string |
        | EnableLostMode | always_enforce_lost_mode | optional (defaults to 'true') | boolean |
        | EnableLostMode | lost_mode_with_sound | optional (defaults to 'false') | boolean |
        | EraseDevice | preserve_data_plan | optional (defaults to 'false') | boolean |
        | EraseDevice | disallow_proximity_setup | optional (defaults to 'false') | boolean |
        | PasscodeLockGracePeriod | passcode_lock_grace_period | Shared iPad | seconds (integer) |
        | PlayLostModeSound | N/A | Supervised and in lost mode | N/A |
        | RestartDevice | N/A | Supervised device | N/A |
        | SettingsDisableBluetooth | N/A | iOS 11.3+ and Supervised | N/A |
        | SettingsEnableBluetooth | N/A | iOS 11.3+ and Supervised | N/A |
        | ShutDownDevice | N/A | Supervised device | N/A |
      parameters:
      - name: id_list
        in: path
        required: true
        type: string
        description: Mobile device ID values, multiple IDs may be separated by commas (e.g. /id/13,14,15)
      - name: command
        in: path
        required: true
        type: string
        description: Command to send device
        enum: [BlankPush, ClearPasscode, ClearRestrictionsPassword, DeviceLocation, DisableLostMode, EnableLostMode, EraseDevice, PasscodeLockGracePeriod, PlayLostModeSound, RestartDevice, Settings, SettingsDisableAppAnalytics, SettingsDisableBluetooth, SettingsEnablePersonalHotspot, SettingsDisablePersonalHotspot, SettingsDisableDataRoaming, SettingsDisableDiagnosticSubmission, SettingsDisableVoiceRoaming, SettingsEnableAppAnalytics, SettingsEnableBluetooth, SettingsEnableDataRoaming, SettingsEnableDiagnosticSubmission, SettingsEnableVoiceRoaming, ShutDownDevice, UnmanageDevice, UpdateInventory]
      responses:
        '201':
          description: Created
  "/mobiledevicecommands/command/DeviceName/{device_name}/id/{id_list}":
    post:
      x-explorer-enabled: false
      tags:
      - mobiledevicecommands
      summary: Creates a new command to set the name of a mobile device.
      operationId: createMobileDeviceNameCommandURL
      parameters:
      - name: id_list
        in: path
        required: true
        type: string
        description: Mobile device ID values, multiple IDs may be separated by commas (e.g. /id/13,14,15)
      - name: device_name
        in: path
        required: true
        type: string
        description: Device name to set
      responses:
        '201':
          description: Created
  "/mobiledevicecommands/command/DeviceLock/{lock_message}/id/{id_list}":
    post:
      x-explorer-enabled: false
      tags:
      - mobiledevicecommands
      summary: Sends a new lock command to a list of mobile devices
      operationId: createMobileDeviceLockCommandURL
      parameters:
      - name: id_list
        in: path
        required: true
        type: string
        description: Mobile device ID values, multiple IDs may be separated by commas (e.g. /id/13,14,15)
      - name: lock_message
        in: path
        required: true
        type: string
        description: Lock message for the DeviceLock command
      responses:
        '201':
          description: Created
  "/mobiledevicecommands/command/ScheduleOSUpdate/{install_action}/id/{id_list}":
    post:
      x-explorer-enabled: false
      tags:
      - mobiledevicecommands
      summary: Creates a new command to request that a mobile device update its OS. Command and mobile device list specified in URL. Device will be updated to the latest OS version based on device eligibility. (deprecated on 2022-10-17)
      operationId: createMobileScheduleOSUpdateCommandURL
      parameters:
      - name: id_list
        in: path
        required: true
        type: string
        description: Mobile device ID values, multiple IDs may be separated by commas (e.g. /id/13,14,15)
      - name: install_action
        in: path
        required: true
        type: integer
        description: "Specify the behavior of the install. Possible integer values are: 1 (Download the update for users to install), 2 (Download and install the update, and restart devices after installation)"
        enum: [1, 2]
      responses:
        '201':
          description: Created
  "/mobiledevicecommands/command/ScheduleOSUpdate/{install_action}/{product_version}/id/{id_list}":
    post:
      x-explorer-enabled: false
      tags:
      - mobiledevicecommands
      summary: Creates a new command to request that a mobile device update its OS. Command and mobile device list specified in URL. Mixing iOS and tvOS devices in ID list is not advised, as product version is specific to OS type. (deprecated on 2022-10-17)
      operationId: createMobileScheduleOSUpdateCommandWithProductVersionURL
      parameters:
      - name: id_list
        in: path
        required: true
        type: string
        description: Mobile device ID values, multiple IDs may be separated by commas (e.g. /id/13,14,15)
      - name: install_action
        in: path
        required: true
        type: integer
        description: "Specify the behavior of the install. Possible integer values are: 1 (Download the update for users to install), 2 (Download and install the update, and restart devices after installation)"
        enum: [1, 2]
      - name: product_version
        in: path
        required: true
        type: string
        description: Specify the OS version of the update. Updating to a specific iOS version requires devices with iOS 11.3 or later. Updating to a specific tvOS version requires devices with tvOS 12.2 or later. install_action required by the ScheduleOSUpdate command if product_version is specified.
      responses:
        '201':
          description: Created
  "/mobiledeviceconfigurationprofiles":
    get:
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Finds all mobile device configuration profiles
      operationId: findMobileDeviceConfigurationProfiles
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_configuration_profiles'
  "/mobiledeviceconfigurationprofiles/id/{id}":
    get:
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Finds mobile device configuration profiles by ID
      operationId: findMobileDeviceConfigurationProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_configuration_profile'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Updates an existing mobile device configuration profile by ID
      operationId: updateMobileDeviceConfigurationProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Creates a new mobile device configuration profile by ID
      operationId: createMobileDeviceConfigurationProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Deletes a mobile device configuration profile by ID
      operationId: deleteMobileDeviceConfigurationProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceconfigurationprofiles/id/{id}/subset/{subset}":
    get:
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Finds a subset of data for a mobile device configuration profile by ID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findMobileDeviceConfigurationProfilesByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/mobiledeviceconfigurationprofiles/name/{name}":
    get:
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Finds mobile device configuration profiles by name
      operationId: findMobileDeviceConfigurationProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_configuration_profile'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Updates an existing mobile device configuration profile by name
      operationId: updateMobileDeviceConfigurationProfileByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Deletes a mobile device configuration profile by name
      operationId: deleteMobileDeviceConfigurationProfileByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceconfigurationprofiles/name/{name}/subset/{subset}":
    get:
      tags:
      - mobiledeviceconfigurationprofiles
      summary: Finds a subset of data for mobile device configuration profiles by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findMobileDeviceConfigurationProfilesByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_configuration_profile'
  "/mobiledeviceenrollmentprofiles":
    get:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Finds all mobile device enrollment profiles
      operationId: findMobileDeviceEnrollmentProfiles
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_enrollment_profiles'
  "/mobiledeviceenrollmentprofiles/id/{id}":
    get:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Finds mobile device enrollment profiles by ID
      operationId: findMobileDeviceEnrollmentProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_enrollment_profile'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Updates an existing mobile device enrollment profile by ID
      operationId: updateMobileDeviceEnrollmentProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Creates a new mobile device enrollment profile by ID
      operationId: createMobileDeviceEnrollmentProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Deletes a mobile device enrollment profile by ID
      operationId: deleteMobileDeviceEnrollmentProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceenrollmentprofiles/invitation/{invitation}":
    get:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Finds mobile device enrollment profiles by invitation
      operationId: findMobileDeviceEnrollmentProfilesByInvitation
      parameters:
      - name: invitation
        in: path
        required: true
        type: string
        description: Invitation value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_enrollment_profile'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Updates an existing mobile device enrollment profile by invitation
      operationId: updateMobileDeviceEnrollmentProfileByInvitation
      parameters:
      - name: invitation
        in: path
        required: true
        type: string
        description: Invitation value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Deletes a mobile device enrollment profile by invitation
      operationId: deleteMobileDeviceEnrollmentProfileByInvitation
      parameters:
      - name: invitation
        in: path
        required: true
        type: string
        description: Invitation value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceenrollmentprofiles/id/{id}/subset/{subset}":
    get:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Finds a subset of data for an enrollment profile
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findMobileDeviceEnrollmentProfilesByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Attachments]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/mobiledeviceenrollmentprofiles/name/{name}":
    get:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Finds mobile device enrollment profiles by name
      operationId: findMobileDeviceEnrollmentProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_enrollment_profile'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Updates an existing mobile device enrollment profile by name
      operationId: updateMobileDeviceEnrollmentProfileByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Deletes a mobile device enrollment profile by name
      operationId: deleteMobileDeviceEnrollmentProfileByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceenrollmentprofiles/name/{name}/subset/{subset}":
    get:
      tags:
      - mobiledeviceenrollmentprofiles
      summary: Finds a subset of data for mobile device enrollment profiles by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findMobileDeviceEnrollmentProfilesByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Attachments]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_enrollment_profile'
  "/mobiledeviceextensionattributes":
    get:
      tags:
      - mobiledeviceextensionattributes
      summary: Finds all mobile device extension attributes
      operationId: findMobiledeviceextensionattributes
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_extension_attributes'
  "/mobiledeviceextensionattributes/id/{id}":
    get:
      tags:
      - mobiledeviceextensionattributes
      summary: Finds mobile device extension attributes by ID
      operationId: findMobiledeviceextensionattributesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_extension_attribute'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceextensionattributes
      summary: Updates an existing mobile device extension attribute by ID
      operationId: updateMobiledeviceextensionattributeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceextensionattributes
      summary: Creates a new mobile device extension attribute by ID
      operationId: createMobiledeviceextensionattributeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceextensionattributes
      summary: Deletes a mobile device extension attribute by ID
      operationId: deleteMobiledeviceextensionattributeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/mobiledeviceextensionattributes/name/{name}":
    get:
      tags:
      - mobiledeviceextensionattributes
      summary: Finds mobiledeviceextensionattributes by name
      operationId: findMobiledeviceextensionattributesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_extension_attribute'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceextensionattributes
      summary: Updates an existing mobile device extension attribute by name
      operationId: updateMobiledeviceextensionattributeByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceextensionattributes
      summary: Deletes a mobile device extension attribute by name
      operationId: deleteMobiledeviceextensionattributeByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/mobiledevicegroups":
    get:
      tags:
      - mobiledevicegroups
      summary: Finds all mobile device groups
      operationId: findMobileDeviceGroups
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_groups'
  "/mobiledevicegroups/id/{id}":
    get:
      tags:
      - mobiledevicegroups
      summary: Finds mobile device groups by ID
      operationId: findMobileDeviceGroupsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_group'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledevicegroups
      summary: Updates an existing mobile device group by ID
      description: One or more mobile devices can be added by using "mobile_device_additions" instead of "mobile_devices". One or more computers can be deleted by using "mobile_device_deletions" instead of "mobile_devices".
      operationId: updateMobileDeviceGroupById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - mobiledevicegroups
      summary: Creates a new mobile device group by ID
      operationId: createMobileDeviceGroupById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledevicegroups
      summary: Deletes a mobile device group by ID
      operationId: deleteMobileDeviceGroupById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/mobiledevicegroups/name/{name}":
    get:
      tags:
      - mobiledevicegroups
      summary: Finds mobile device groups by name
      operationId: findMobileDeviceGroupsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_group'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledevicegroups
      summary: Updates an existing mobile device group by name
      description: One or more mobile devices can be added by using "mobile_device_additions" instead of "mobile_devices". One or more computers can be deleted by using "mobile_device_deletions" instead of "mobile_devices".
      operationId: updateMobileDeviceGroupByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledevicegroups
      summary: Deletes a mobile device group by name
      operationId: deleteMobileDeviceGroupByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/mobiledevicehistory/id/{id}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds mobile device history by ID
      operationId: findMobileDeviceHistoryById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledevicehistory/id/{id}/subset/{subset}":
    get:
      tags:
      - mobiledevicehistory
      summary: finds a subset of data for a mobile device history
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Audits)
      operationId: findMobileDeviceHistoryByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ManagementCommands, UserLocation, Audits, Applications, Ebooks]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/mobiledevicehistory/name/{name}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds mobile device history by name
      operationId: findMobileDeviceHistoryByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledevicehistory/name/{name}/subset/{subset}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds a subset of data for mobile device history by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Audits)
      operationId: findMobileDeviceHistoryByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ManagementCommands, UserLocation, Audits, Applications, Ebooks]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledevicehistory/udid/{udid}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds mobile device history by UDID
      operationId: findMobileDeviceHistoryByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledevicehistory/udid/{udid}/subset/{subset}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds a subset of data for mobile device history by UDID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Audits)
      operationId: findMobileDeviceHistoryByUDIDSubset
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ManagementCommands, UserLocation, Audits, Applications, Ebooks]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledevicehistory/serialnumber/{serialnumber}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds mobile device history by serial number
      operationId: findMobileDeviceHistoryBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledevicehistory/serialnumber/{serialnumber}/subset/{subset}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds a subset of data for mobile device history by serial number
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Audits)
      operationId: findMobileDeviceHistoryBySerialNumberSubset
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ManagementCommands, UserLocation, Audits, Applications, Ebooks]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledevicehistory/macaddress/{macaddress}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds mobile device history by wifi mac address
      operationId: findMobileDeviceHistoryByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Mac address to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledevicehistory/macaddress/{macaddress}/subset/{subset}":
    get:
      tags:
      - mobiledevicehistory
      summary: Finds a subset of data for mobile device history by wifi mac address
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Audits)
      operationId: findMobileDeviceHistoryByMacAddressSubset
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Mac address to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, ManagementCommands, UserLocation, Audits, Applications, Ebooks]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_history'
  "/mobiledeviceinvitations":
    get:
      tags:
      - mobiledeviceinvitations
      summary: Finds all mobile device invitations
      operationId: findMobileDeviceInvitations
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_invitations'
  "/mobiledeviceinvitations/id/{id}":
    get:
      tags:
      - mobiledeviceinvitations
      summary: Finds mobile device invitations by id
      operationId: findMobileDeviceInvitationsById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_invitation'
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceinvitations
      summary: Creates a new mobile device invitation by id
      operationId: createMobileDeviceInvitationsById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/mobile_device_invitation'
    delete:
      tags:
      - mobiledeviceinvitations
      summary: Deletes a mobile device invitation by id
      operationId: deleteMobileDeviceInvitationById
      parameters:
      - description: ID value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '200':
          description: OK
  "/mobiledeviceinvitations/invitation/{invitation}":
    get:
      tags:
      - mobiledeviceinvitations
      summary: Finds mobile device invitations by invitation
      operationId: findMobileDeviceInvitationsByInvitation
      parameters:
      - description: Invitation value to filter by
        in: path
        name: invitation
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_invitation'
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceinvitations
      summary: Creates a new mobile device invitation by invitation
      operationId: createMobileDeviceInvitationsByInvitation
      parameters:
      - description: Invitation value to filter by
        in: path
        name: invitation
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/mobile_device_invitation_post'
    delete:
      tags:
      - mobiledeviceinvitations
      summary: Deletes a mobile device invitation by invitation
      operationId: deleteMobileDeviceInvitationByInvitation
      parameters:
      - description: Invitation value to filter by
        in: path
        name: invitation
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '200':
          description: OK
  "/mobiledeviceprovisioningprofiles":
    get:
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Finds all mobile device provisioning profiles
      operationId: findMobileDeviceProvisioningProfiles
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_provisioning_profiles'
  "/mobiledeviceprovisioningprofiles/id/{id}":
    get:
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Finds a mobile device provisioning profiles by id
      operationId: findMobileDeviceProvisioningProfilesById
      parameters:
      - description: Id value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_provisioning_profile'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Updates an existing mobile device provisioning profiles by id
      operationId: updateMobileDeviceProvisioningProfilesById
      parameters:
      - description: Id value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_provisioning_profile'
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Creates a mobile device provisioning profiles by id
      operationId: createMobileDeviceProvisioningProfilesById
      parameters:
      - description: Id value to filter by
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/xml
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Deletes a mobile device provisioning profiles by id
      operationId: deleteMobileDeviceProvisioningProfilesById
      parameters:
      - description: Id value to filter by
        in: path
        name: id
        required: true
        type: integer
      responses:
        '200':
          description: OK
  "/mobiledeviceprovisioningprofiles/name/{name}":
    get:
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Finds a mobile device provisioning profiles by name
      operationId: findMobileDeviceProvisioningProfilesByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_provisioning_profile'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Updates an existing mobile device provisioning profiles by name
      operationId: updateMobileDeviceProvisioningProfilesByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_provisioning_profile'
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Creates a mobile device provisioning profiles by name
      operationId: createMobileDeviceProvisioningProfilesByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/xml
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Deletes a mobile device provisioning profiles by name
      operationId: deleteMobileDeviceProvisioningProfilesByName
      parameters:
      - description: Name value to filter by
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: OK
  "/mobiledeviceprovisioningprofiles/uuid/{uuid}":
    get:
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Finds a mobile device provisioning profiles by uuid
      operationId: findMobileDeviceProvisioningProfilesByUUID
      parameters:
      - description: Uuid value to filter by
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_provisioning_profile'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Updates an existing mobile device provisioning profiles by uuid
      operationId: updateMobileDeviceProvisioningProfilesByUUID
      parameters:
      - description: Uuid value to filter by
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device_provisioning_profile'
    post:
      x-explorer-enabled: false
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Creates a mobile device provisioning profiles by uuid
      operationId: createMobileDeviceProvisioningProfilesByUUID
      parameters:
      - description: Uuid value to filter by
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/xml
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledeviceprovisioningprofiles
      summary: Deletes a mobile device provisioning profiles by uuid
      operationId: deleteMobileDeviceProvisioningProfilesByUUID
      parameters:
      - description: Uuid value to filter by
        in: path
        name: uuid
        required: true
        type: string
      responses:
        '200':
          description: OK
  "/mobiledevices":
    get:
      tags:
      - mobiledevices
      summary: Finds all mobile devices
      operationId: findMobileDevices
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_devices'
  "/mobiledevices/match/{match}":
    get:
      tags:
      - mobiledevices
      summary: Searches for mobile devices that match the provided parameter
      description: Match performs the same function as a simple search in the GUI.
      operationId: matchMobileDevices
      parameters:
      - name: match
        in: path
        required: true
        type: string
        description: Name, mac address, etc. to filter by. Match uses the same format
          as the general search in Jamf Pro.
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
  "/mobiledevices/id/{id}":
    get:
      tags:
      - mobiledevices
      summary: Finds mobile devices by ID
      operationId: findMobileDevicesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledevices
      summary: Updates an existing mobile device by ID
      description: <os_name> in <android> is derived from the api level and cannot be set.
      operationId: updateMobileDeviceById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - mobiledevices
      summary: Creates a new mobile device by ID
      description: To distinguish between mobile device types (e.g., iPad, iPhone, or Apple TV), use the <model_identifier> field. Default mobile device type is 'Unknown'. Can include a subset for Android devices if applicable. <os_name> in <android> is derived from the API level and cannot be set.
      operationId: createMobileDeviceById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledevices
      summary: Deletes a mobile device by ID
      operationId: deleteMobileDeviceById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/mobiledevices/id/{id}/subset/{subset}":
    get:
      tags:
      - mobiledevices
      summary: Finds a subset of data for a mobile device
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findMobileDevicesByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Applications, Security, Network, Certificates, ConfigurationProfiles, ProvisioningProfiles, MobileDeviceGroups, ExtensionAttributes]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/mobiledevices/name/{name}":
    get:
      tags:
      - mobiledevices
      summary: Finds mobile devices by name
      operationId: findMobileDevicesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledevices
      summary: Updates an existing mobile device by name
      description: <os_name> in <android> is derived from the api level and cannot be set.
      operationId: updateMobileDeviceByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledevices
      summary: Deletes a mobile device by name
      operationId: deleteMobileDeviceByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/mobiledevices/name/{name}/subset/{subset}":
    get:
      tags:
      - mobiledevices
      summary: Finds a subset of data for mobile devices by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findMobileDevicesByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Applications, Security, Network, Certificates, ConfigurationProfiles, ProvisioningProfiles, MobileDeviceGroups, ExtensionAttributes]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
  "/mobiledevices/udid/{udid}":
    get:
      tags:
      - mobiledevices
      summary: Finds mobile devices by UDID
      operationId: findMobileDevicesByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledevices
      summary: Updates an existing mobile device by UDID
      description: <os_name> in <android> is derived from the api level and cannot be set.
      operationId: updateMobileDeviceByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledevices
      summary: Deletes a mobile device by UDID
      operationId: deleteMobileDeviceByUDID
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID value to filter by
      responses:
        '200':
          description: OK
  "/mobiledevices/udid/{udid}/subset/{subset}":
    get:
      tags:
      - mobiledevices
      summary: Finds a subset of data for mobile devices by UDID
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findMobileDevicesByUDIDSubset
      parameters:
      - name: udid
        in: path
        required: true
        type: string
        description: UDID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Applications, Security, Network, Certificates, ConfigurationProfiles, ProvisioningProfiles, MobileDeviceGroups, ExtensionAttributes]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
  "/mobiledevices/serialnumber/{serialnumber}":
    get:
      tags:
      - mobiledevices
      summary: Finds mobile devices by serial number
      operationId: findMobileDevicesBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledevices
      summary: Updates an existing mobile device by serial number
      description: <os_name> in <android> is derived from the api level and cannot be set.
      operationId: updateMobileDeviceBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledevices
      summary: Deletes a mobile device by serial number
      operationId: deleteMobileDeviceBySerialNumber
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number value to filter by
      responses:
        '200':
          description: OK
  "/mobiledevices/serialnumber/{serialnumber}/subset/{subset}":
    get:
      tags:
      - mobiledevices
      summary: Finds a subset of data for mobile devices by serial number
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findMobileDevicesBySerialNumberSubset
      parameters:
      - name: serialnumber
        in: path
        required: true
        type: string
        description: Serial number to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Applications, Security, Network, Certificates, ConfigurationProfiles, ProvisioningProfiles, MobileDeviceGroups, ExtensionAttributes]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
  "/mobiledevices/macaddress/{macaddress}":
    get:
      tags:
      - mobiledevices
      summary: Finds mobile devices by Mac address
      operationId: findMobileDevicesByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Mac address to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
    put:
      x-explorer-enabled: false
      tags:
      - mobiledevices
      summary: Updates an existing mobile device by Mac address
      description: <os_name> in <android> is derived from the api level and cannot be set.
      operationId: updateMobileDeviceByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Mac address value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - mobiledevices
      summary: Deletes a mobile device by Mac address
      operationId: deleteMobileDeviceByMacAddress
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Mac address value to filter by
      responses:
        '200':
          description: OK
  "/mobiledevices/macaddress/{macaddress}/subset/{subset}":
    get:
      tags:
      - mobiledevices
      summary: Finds a subset of data for mobile devices by Mac address
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findMobileDevicesByMacAddressSubset
      parameters:
      - name: macaddress
        in: path
        required: true
        type: string
        description: Mac address to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Applications, Security, Network, Certificates, ConfigurationProfiles, ProvisioningProfiles, MobileDeviceGroups, ExtensionAttributes]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/mobile_device'
  "/networksegments":
    get:
      tags:
      - networksegments
      summary: Finds all network segments
      operationId: findNetworkSegments
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_segments'
  "/networksegments/id/{id}":
    get:
      tags:
      - networksegments
      summary: Finds network segments by ID
      operationId: findNetworkSegmentsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_segment'
    put:
      x-explorer-enabled: false
      tags:
      - networksegments
      summary: Updates an existing network segment by ID
      operationId: updateNetworkSegmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - networksegments
      summary: Creates a new network segment by ID
      operationId: createNetworkSegmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - networksegments
      summary: Deletes a network segment by ID
      operationId: deleteNetworkSegmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/networksegments/name/{name}":
    get:
      tags:
      - networksegments
      summary: Finds network segments by name
      operationId: findNetworkSegmentsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/network_segment'
    put:
      x-explorer-enabled: false
      tags:
      - networksegments
      summary: Updates an existing network segment by name
      operationId: updateNetworkSegmentByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - networksegments
      summary: Deletes a network segment by name
      operationId: deleteNetworkSegmentByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/osxconfigurationprofiles":
    get:
      tags:
      - osxconfigurationprofiles
      summary: Finds all OS X configuration profiles
      operationId: findOsxConfigurationProfiles
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/os_x_configuration_profiles'
  "/osxconfigurationprofiles/id/{id}":
    get:
      tags:
      - osxconfigurationprofiles
      summary: Finds OS X configuration profiles by ID
      operationId: findOsxConfigurationProfilesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/os_x_configuration_profile'
    put:
      x-explorer-enabled: false
      tags:
      - osxconfigurationprofiles
      summary: Updates an existing OS X configuration profile by ID
      operationId: updateOsxConfigurationProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - osxconfigurationprofiles
      summary: Creates a new OS X configuration profile by ID
      operationId: createOsxConfigurationProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - osxconfigurationprofiles
      summary: Deletes a OS X configuration profile by ID
      operationId: deleteOsxConfigurationProfileById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/osxconfigurationprofiles/id/{id}/subset/{subset}":
    get:
      tags:
      - osxconfigurationprofiles
      summary: Finds a subset of data for an OS X configuration profile
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findOsxConfigurationProfilesByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/osxconfigurationprofiles/name/{name}":
    get:
      tags:
      - osxconfigurationprofiles
      summary: Finds OS X configuration profiles by name
      operationId: findOsxConfigurationProfilesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/os_x_configuration_profile'
    put:
      x-explorer-enabled: false
      tags:
      - osxconfigurationprofiles
      summary: Updates an existing OS X configuration profile by name
      operationId: updateOsxConfigurationProfileByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - osxconfigurationprofiles
      summary: Deletes a OS X configuration profile by name
      operationId: deleteOsxConfigurationProfileByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/osxconfigurationprofiles/name/{name}/subset/{subset}":
    get:
      tags:
      - osxconfigurationprofiles
      summary: Finds a subset of data for OS X configuration profiles by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findOsxConfigurationProfilesByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/os_x_configuration_profile'
  "/packages":
    get:
      tags:
      - packages
      summary: Finds all packages
      operationId: findPackages
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/packages'
  "/packages/id/{id}":
    get:
      tags:
      - packages
      summary: Finds packages by ID
      operationId: findPackagesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/package'
    put:
      x-explorer-enabled: false
      tags:
      - packages
      summary: Updates an existing package by ID
      operationId: updatePackageById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - packages
      summary: Creates a new package by ID
      operationId: createPackageById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - packages
      summary: Deletes a package by ID
      operationId: deletePackageById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/packages/name/{name}":
    get:
      tags:
      - packages
      summary: Finds packages by name
      operationId: findPackagesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/package'
    put:
      x-explorer-enabled: false
      tags:
      - packages
      summary: Updates an existing package by name
      operationId: updatePackageByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - packages
      summary: Deletes a package by name
      operationId: deletePackageByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/patchavailabletitles/sourceid/{id}":
    get:
      tags:
      - patchavailabletitles
      summary: Finds all available title from a source by ID
      operationId: PatchavailabletitlesSourceidByIdGet
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID of the internal or external patch source to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_available_titles'
  "/patches":
    get:
      deprecated: true
      tags:
      - patches
      summary: Finds all patches (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations".
      operationId: findPatches
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_management_software_titles'
  "/patches/id/{id}":
    get:
      deprecated: true
      tags:
      - patches
      summary: Finds patches by ID (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}".)
      operationId: findPatchesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_title'
    put:
      x-explorer-enabled: false
      deprecated: true
      tags:
      - patches
      summary: Updates a Patch Software Title by ID (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}".)
      operationId: updateSoftwareTitlesById
      description: Using an empty <package/> tag will disassociate any previous packages associated with a specific software title version.
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to update by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      deprecated: true
      tags:
      - patches
      summary: Creates a patch software title (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations".)
      description: The patch title must exist within a specific site or Full Jamf Pro. Use this endpoint to create additional instances of the patch software title for specific sites. The name_id element can be obtained from the /patches and/or /patches/id/{id} resources.
      operationId: createPatchSoftwareTitlesById
      parameters:
      - name: id
        in: path
        required: true
        type: string
      responses:
        '201':
          description: created
    delete:
      deprecated: true
      tags:
      - patches
      summary: Deletes a Patch Software Title by ID (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}".)
      operationId: deleteSoftwareTitlesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/patches/id/{id}/version/{version}":
    get:
      deprecated: true
      tags:
      - patches
      summary: Display computers on a specific version (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}/definitions".)
      description: Displays information specified with the {version} parameter for a patch specified with the {id} parameter. A version number of 'Latest' and 'Unknown' will also work.
      operationId: findComputersByIDAndTitleVersion
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: version
        in: path
        required: true
        type: string
        description: Version number to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/patches/name/{name}":
    get:
      deprecated: true
      tags:
      - patches
      summary: Finds the first patch with the name provided (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}".)
      operationId: findPatchesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_title'
    put:
      x-explorer-enabled: false
      deprecated: true
      tags:
      - patches
      summary: Updates a Patch Software Title by name (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations".)
      operationId: updateSoftwareTitlesByName
      description: Using an empty <package/> tag will disassociate any previous packages associated with a specific software title version.
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to update by
      responses:
        '201':
          description: Created
    delete:
      deprecated: true
      tags:
      - patches
      summary: Deletes a Patch Software Title by name (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations".)
      operationId: deleteSoftwareTitlesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/patches/name/{name}/version/{version}":
    get:
      deprecated: true
      tags:
      - patches
      summary: Display computers on a specific version (Deprecated - Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations".)
      description: Displays information specified with the {version} parameter for a patch specified with the {name} parameter. A version number of 'Latest' and 'Unknown' will also work.
      operationId: findComputersByNameAndTitleVersion
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: version
        in: path
        required: true
        type: string
        description: Version number to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/patchexternalsources":
    get:
      tags:
      - patchexternalsources
      summary: Finds all patch external sources
      operationId: findPatchExternalSources
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_external_sources'
  "/patchexternalsources/id/{id}":
    get:
      tags:
      - patchexternalsources
      summary: Finds a patch external source by ID
      operationId: findPatchExternalSourcesById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_external_source'
    put:
      x-explorer-enabled: false
      tags:
      - patchexternalsources
      summary: Updates a patch external source by ID
      operationId: updatePatchExternalSourcesById
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - patchexternalsources
      summary: Create a new patch external source by ID
      operationId: createPatchExternalSourcesById
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '200':
          description: Created
    delete:
      tags:
      - patchexternalsources
      summary: Deletes a patch external source by ID
      operationId: deletePatchExternalSourcesById
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/patchexternalsources/name/{name}":
    get:
      tags:
      - patchexternalsources
      summary: Finds the first patch external source with the name provided
      operationId: findPatchExternalSourcesByName
      produces:
      - application/xml
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_external_source'
    put:
      x-explorer-enabled: false
      tags:
      - patchexternalsources
      summary: Updates a patch external source by name
      operationId: updatePatchExternalSourcesByName
      produces:
      - application/xml
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '200':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - patchexternalsources
      summary: Create a new patch external source by name
      operationId: createPatchExternalSourcesByName
      produces:
      - application/xml
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '200':
          description: Created
  "/patchinternalsources":
    get:
      tags:
      - patchinternalsources
      summary: Finds all patch internal sources
      operationId: findPatchInternalSources
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_internal_sources'
  "/patchinternalsources/id/{id}":
    get:
      tags:
      - patchinternalsources
      summary: Finds a patch internal source by ID
      operationId: findPatchInternalSourcesById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_internal_source'
  "/patchinternalsources/name/{name}":
    get:
      tags:
      - patchinternalsources
      summary: Finds the first patch internal source with the name provided
      operationId: findPatchInternalSourcesByName
      produces:
      - application/xml
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_internal_source'
  "/patchpolicies":
    get:
      tags:
      - patchpolicies
      deprecated: true
      summary: Finds all patch policies. (Deprecated). Please transition use to Jamf Pro API endpoint "/v2/patch-policies".
      operationId: findPatchPolicies
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_policies'
  "/patchpolicies/id/{id}":
    get:
      tags:
      - patchpolicies
      summary: Finds a patch policy by ID
      operationId: findPatchPolicyById
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_policy'
    put:
      x-explorer-enabled: false
      tags:
      - patchpolicies
      summary: Updates an existing patch policy by ID
      operationId: updatePatchPolicyById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - patchpolicies
      summary: Deletes a patch policy by ID
      operationId: deletePatchPolicyById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/patchpolicies/id/{id}/subset/{subset}":
    get:
      tags:
      - patchpolicies
      summary: Display subsets of information for a patch policy
      operationId: findPatchPoliciesByIdSubset
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, UserInteraction]
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_policy'
  "/patchpolicies/softwaretitleconfig/id/{softwaretitleconfigid}":
    get:
      tags:
      - patchpolicies
      deprecated: true
      summary: Finds all patch policies by patch software title configuration ID (Deprecated). Please transition use to Jamf Pro API endpoint "/v2/patch-policies".
      description: softwaretitleconfigid refers to the ID of the patch software title the policy is associated to
      operationId: findPatchPoliciesBySoftwareTitleConfigId
      produces:
      - application/xml
      - application/json
      parameters:
      - name: softwaretitleconfigid
        in: path
        required: true
        type: integer
        description: Patch software title config ID value to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_policy'
    post:
      x-explorer-enabled: false
      tags:
      - patchpolicies
      summary: Create a new patch policy associated with a patch software title configuration ID
      description: softwaretitleconfig refers to the ID of the patch software title the policy is to be associated to
      operationId: createPatchPolicyBySoftwareTitleConfigId
      parameters:
      - name: softwaretitleconfigid
        in: path
        required: true
        type: integer
        description: Patch software title config ID value to filter by
      responses:
        '201':
          description: Created
  "/patchreports/patchsoftwaretitleid/{id}":
    get:
      tags:
      - patchreports
      deprecated: true
      summary: Finds patch reports by patch software title ID. (Deprecated) Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}/patch-report".
      operationId: PatchreportsPatchsoftwaretitleidByIdGet
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Patch software title id to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_report'
  "/patchreports/patchsoftwaretitleid/{id}/version/{version}":
    get:
      tags:
      - patchreports
      deprecated: true
      summary: Display computers for a specific version of a patch report. (Deprecated) Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}/patch-report".
      operationId: PatchreportsPatchsoftwaretitleidVersionByIdAndVersionGet
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: Patch software title ID to filter by
      - name: version
        in: path
        required: true
        type: string
        description: Version number to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_report'
  "/patchsoftwaretitles":
    get:
      tags:
      - patchsoftwaretitles
      deprecated: true
      summary: Finds all patch software titles. (Deprecated) Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations".
      operationId: PatchsoftwaretitlesGet
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_software_titles'
  "/patchsoftwaretitles/id/{id}":
    get:
      tags:
      - patchsoftwaretitles
      deprecated: true
      summary: Finds a patch software titles by ID. (Deprecated) Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}".
      operationId: PatchsoftwaretitlesIdByIdGet
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/patch_software_title'
    put:
      x-explorer-enabled: false
      tags:
      - patchsoftwaretitles
      deprecated: true
      summary: Updates a patch software title by ID. (Deprecated) Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}".
      description: Including an empty package element <package/> within the version element will disassociate any previously associated packages with that version of the software title.
      operationId: PatchsoftwaretitlesIdByIdPut
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to update by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - patchsoftwaretitles
      deprecated: true
      summary: Creates new patch software title by ID. (Deprecated) Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}".
      operationId: PatchsoftwaretitlesIdByIdPost
      produces:
      - application/xml
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - patchsoftwaretitles
      deprecated: true
      summary: Deletes a patch software title by ID. (Deprecated) Please transition use to Jamf Pro API endpoint "/v2/patch-software-title-configurations/{id}".
      operationId: PatchsoftwaretitlesIdByIdDelete
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to update by
      responses:
        '200':
          description: OK
  "/peripherals":
    get:
      tags:
      - peripherals
      summary: Finds all peripherals
      operationId: findPeripherals
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/peripherals'
  "/peripherals/id/{id}":
    get:
      tags:
      - peripherals
      summary: Finds peripherals by ID
      operationId: findPeripheralsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/peripheral'
    put:
      x-explorer-enabled: false
      tags:
      - peripherals
      summary: Updates an existing peripheral by ID
      operationId: updatePeripheralById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - peripherals
      summary: Creates a new peripheral by ID
      operationId: createPeripheralById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - peripherals
      summary: Deletes a peripheral by ID
      operationId: deletePeripheralById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/peripherals/id/{id}/subset/{subset}":
    get:
      tags:
      - peripherals
      summary: Finds a subset of data for a peripheral
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Location)
      operationId: findPeripheralsByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Location, Purchasing, Attachments]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/peripheraltypes":
    get:
      tags:
      - peripheraltypes
      summary: Finds all peripheral types
      operationId: findPeripheralTypes
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/peripheral_types'
  "/peripheraltypes/id/{id}":
    get:
      tags:
      - peripheraltypes
      summary: Finds peripheral types by ID
      operationId: findPeripheralTypesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/peripheral_type'
    put:
      x-explorer-enabled: false
      tags:
      - peripheraltypes
      summary: Updates an existing peripheral by ID
      operationId: updatePeripheralTypeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - peripheraltypes
      summary: Creates a new peripheral by ID
      operationId: createPeripheralTypeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - peripheraltypes
      summary: Deletes a peripheral by ID
      operationId: deletePeripheralTypeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/policies":
    get:
      tags:
      - policies
      summary: Finds all policies
      operationId: findPolicies
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/policies'
  "/policies/id/{id}":
    get:
      tags:
      - policies
      summary: Finds policies by ID
      operationId: findPoliciesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/policy'
    put:
      x-explorer-enabled: false
      tags:
      - policies
      summary: Updates an existing policy by ID
      operationId: updatePolicyById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - policies
      summary: Creates a new policy by ID
      operationId: createPolicyById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - policies
      summary: Deletes a policy by ID
      operationId: deletePolicyById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/policies/id/{id}/subset/{subset}":
    get:
      tags:
      - policies
      summary: Finds a subset of data for a policy
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findPoliciesByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService, PackageConfiguration, Scripts, Printers, DockItems, AccountMaintenance, Reboot, Maintenance, FilesProcesses, UserInteraction, DiskEncryption]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/policies/name/{name}":
    get:
      tags:
      - policies
      summary: Finds policies by name
      operationId: findPoliciesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/policy'
    put:
      x-explorer-enabled: false
      tags:
      - policies
      summary: Updates an existing policy by name
      operationId: updatePolicyByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - policies
      summary: Deletes a policy by name
      operationId: deletePolicyByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/policies/name/{name}/subset/{subset}":
    get:
      tags:
      - policies
      summary: Finds a subset of data for policies by name
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findPoliciesByNameSubset
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, SelfService, PackageConfiguration, Scripts, Printers, DockItems, AccountMaintenance, Reboot, Maintenance, FilesProcesses, UserInteraction, DiskEncryption]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/policy'
  "/policies/category/{category}":
    get:
      tags:
      - policies
      summary: Finds all policies by category
      description: Category may be specified by id or name, or 'None' for policies with no category.
      operationId: findPoliciesByCategory
      parameters:
      - name: category
        in: path
        required: true
        type: string
        description: Category to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/policies/createdBy/{createdBy}":
    get:
      tags:
      - policies
      summary: Finds all policies by type
      description: The value 'casper' refers to Casper Remote. The value 'jss' refers to policies created in the GUI or via the API.
      operationId: findPoliciesByType
      parameters:
      - name: createdBy
        in: path
        required: true
        type: string
        description: Type to filter by
        enum: [jss, casper]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/printers":
    get:
      tags:
      - printers
      summary: Finds all printers
      operationId: findPrinters
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/printers'
  "/printers/id/{id}":
    get:
      tags:
      - printers
      summary: Finds printers by ID
      operationId: findPrintersById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/printer'
    put:
      x-explorer-enabled: false
      tags:
      - printers
      summary: Updates an existing printer by ID
      operationId: updatePrinterById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - printers
      summary: Creates a new printer by ID
      operationId: createPrinterById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - printers
      summary: Deletes a printer by ID
      operationId: deletePrinterById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/printers/name/{name}":
    get:
      tags:
      - printers
      summary: Finds printers by name
      operationId: findPrintersByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/printer'
    put:
      x-explorer-enabled: false
      tags:
      - printers
      summary: Updates an existing printer by name
      operationId: updatePrinterByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - printers
      summary: Deletes a printer by name
      operationId: deletePrinterByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/removablemacaddresses":
    get:
      tags:
      - removablemacaddresses
      summary: Finds all removable Mac addresses
      operationId: findRemovableMacAddresses
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/removable_mac_addresses'
  "/removablemacaddresses/id/{id}":
    get:
      tags:
      - removablemacaddresses
      summary: Finds removable Mac addresses by ID
      operationId: findRemovableMacAddressesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/removable_mac_address'
    put:
      x-explorer-enabled: false
      tags:
      - removablemacaddresses
      summary: Updates an existing removable Mac address by ID
      operationId: updateRemovableMacAddressById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - removablemacaddresses
      summary: Creates a new removable Mac address by ID
      operationId: createRemovableMacAddressById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - removablemacaddresses
      summary: Deletes a removable Mac address by ID
      operationId: deleteRemovableMacAddressById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/removablemacaddresses/name/{name}":
    get:
      tags:
      - removablemacaddresses
      summary: Finds removable Mac addresses by name
      operationId: findRemovableMacAddressesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/removable_mac_address'
    put:
      x-explorer-enabled: false
      tags:
      - removablemacaddresses
      summary: Updates an existing removable Mac address by name
      operationId: updateRemovableMacAddressByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - removablemacaddresses
      summary: Deletes a removable Mac address by name
      operationId: deleteRemovableMacAddressByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/restrictedsoftware":
    get:
      tags:
      - restrictedsoftware
      summary: Finds all restricted software
      operationId: findRestrictedSoftware
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/restricted_software_all'
  "/restrictedsoftware/id/{id}":
    get:
      tags:
      - restrictedsoftware
      summary: Finds restricted software by ID
      operationId: findRestrictedSoftwareById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/restricted_software'
    put:
      x-explorer-enabled: false
      tags:
      - restrictedsoftware
      summary: Updates an existing restricted software by ID
      operationId: updateRestrictedSoftwareById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - restrictedsoftware
      summary: Creates a new restricted software by ID
      operationId: createRestrictedSoftwareById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - restrictedsoftware
      summary: Deletes a restricted software by ID
      operationId: deleteRestrictedSoftwareById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/restrictedsoftware/name/{name}":
    get:
      tags:
      - restrictedsoftware
      summary: Finds restricted software by name
      operationId: findRestrictedSoftwareByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/restricted_software'
    put:
      x-explorer-enabled: false
      tags:
      - restrictedsoftware
      summary: Updates an existing restricted software by name
      operationId: updateRestrictedSoftwareByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - restrictedsoftware
      summary: Deletes a restricted software by name
      operationId: deleteRestrictedSoftwareByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/savedsearches":
    get:
      tags:
      - savedsearches
      deprecated: true
      summary: Finds all saved searches (Deprecated - use advancedcomputersearches, advancedmobiledevicesearches and advancedusersearches)
      operationId: SavedsearchesGet
      produces:
      - application/xml
      - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/saved_searches'
  "/savedsearches/id/{id}":
    get:
      tags:
      - savedsearches
      deprecated: true
      summary: Finds saved searches by ID (Deprecated - use advancedcomputersearches, advancedmobiledevicesearches and advancedusersearches)
      operationId: SavedsearchesIdByIdGet
      produces:
      - application/xml
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/savedsearches/name/{name}":
    get:
      tags:
      - savedsearches
      deprecated: true
      summary: Finds saved searches by name (Deprecated - use advancedcomputersearches, advancedmobiledevicesearches and advancedusersearches)
      operationId: SavedsearchesNameByNameGet
      produces:
      - application/xml
      - application/json
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      responses:
        '200':
          description: OK
  "/scripts":
    get:
      tags:
      - scripts
      summary: Finds all scripts
      operationId: findScripts
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/scripts'
  "/scripts/id/{id}":
    get:
      tags:
      - scripts
      summary: Finds scripts by ID
      description: script_contents_encoded is the equivalent of script_contents, but it has been Base 64 encoded.
      operationId: findScriptsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/script'
    put:
      x-explorer-enabled: false
      tags:
      - scripts
      summary: Updates an existing script by ID
      description: Only one of script_contents_encoded and script_contents should be submitted.
      operationId: updateScriptById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - scripts
      summary: Creates a new script by ID
      description: Only one of script_contents_encoded and script_contents should be submitted.
      operationId: createScriptById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - scripts
      summary: Deletes a script by ID
      operationId: deleteScriptById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/scripts/name/{name}":
    get:
      tags:
      - scripts
      summary: Finds scripts by name
      description: script_contents_encoded is the equivalent of script_contents, but it has been Base 64 encoded.
      operationId: findScriptsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/script'
    put:
      x-explorer-enabled: false
      tags:
      - scripts
      summary: Updates an existing script by name
      description: Only one of script_contents_encoded and script_contents should be submitted.
      operationId: updateScriptByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - scripts
      summary: Deletes a script by name
      operationId: deleteScriptByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/sites":
    get:
      tags:
      - sites
      summary: Finds all sites
      operationId: findSites
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/sites'
  "/sites/id/{id}":
    get:
      tags:
      - sites
      summary: Finds sites by ID
      operationId: findSitesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/site'
    put:
      x-explorer-enabled: false
      tags:
      - sites
      summary: Updates an existing site by ID
      operationId: updateSiteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - sites
      summary: Creates a new site by ID
      operationId: createSiteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - sites
      summary: Deletes a site by ID
      operationId: deleteSiteById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/sites/name/{name}":
    get:
      tags:
      - sites
      summary: Finds sites by name
      operationId: findSitesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/site'
    put:
      x-explorer-enabled: false
      tags:
      - sites
      summary: Updates an existing site by name
      operationId: updateSiteByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - sites
      summary: Deletes a site by name
      operationId: deleteSiteByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/smtpserver":
    get:
      tags:
      - smtpserver
      summary: Finds the Jamf Pro SMTP server information
      operationId: findSMTPServer
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/smtp_server'
    put:
      x-explorer-enabled: false
      tags:
      - smtpserver
      summary: Updates the Jamf Pro SMTP server information
      description: Password can be changed via the <password> element. Password should be clear text and sent over SSL.
      operationId: updateSMTPServer
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/smtp_server'
      responses:
        '201':
          description: Created
  "/softwareupdateservers":
    get:
      tags:
      - softwareupdateservers
      summary: Finds all software update servers
      operationId: findSoftwareUpdateServers
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_update_servers'
  "/softwareupdateservers/id/{id}":
    get:
      tags:
      - softwareupdateservers
      summary: Finds software update servers by ID
      operationId: findSoftwareUpdateServersById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_update_server'
    put:
      x-explorer-enabled: false
      tags:
      - softwareupdateservers
      summary: Updates an existing software update server by ID
      operationId: updateSoftwareUpdateServerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - softwareupdateservers
      summary: Creates a new software update server by ID
      operationId: createSoftwareUpdateServerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - softwareupdateservers
      summary: Deletes a software update server by ID
      operationId: deleteSoftwareUpdateServerById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/softwareupdateservers/name/{name}":
    get:
      tags:
      - softwareupdateservers
      summary: Finds software update servers by name
      operationId: findSoftwareUpdateServersByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/software_update_server'
    put:
      x-explorer-enabled: false
      tags:
      - softwareupdateservers
      summary: Updates an existing software update server by name
      operationId: updateSoftwareUpdateServerByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - softwareupdateservers
      summary: Deletes a software update server by name
      operationId: deleteSoftwareUpdateServerByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/userextensionattributes":
    get:
      tags:
      - userextensionattributes
      summary: Finds all user extension attributes
      operationId: findUserextensionattributes
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user_extension_attributes'
  "/userextensionattributes/id/{id}":
    get:
      tags:
      - userextensionattributes
      summary: Finds user extension attributes by ID
      operationId: findUserextensionattributesById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user_extension_attribute'
    put:
      x-explorer-enabled: false
      tags:
      - userextensionattributes
      summary: Updates an existing user extension attribute by ID
      operationId: updateUserextensionattributeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - userextensionattributes
      summary: Creates a new user extension attribute by ID
      operationId: createUserextensionattributeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - userextensionattributes
      summary: Deletes a user extension attribute by ID
      operationId: deleteUserextensionattributeById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/userextensionattributes/name/{name}":
    get:
      tags:
      - userextensionattributes
      summary: Finds user extension attributes by name
      operationId: findUserextensionattributesByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user_extension_attribute'
    put:
      x-explorer-enabled: false
      tags:
      - userextensionattributes
      summary: Updates an existing user extension attribute by name
      operationId: updateUserextensionattributeByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - userextensionattributes
      summary: Deletes a user extension attribute by name
      operationId: deleteUserextensionattributeByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/usergroups":
    get:
      tags:
      - usergroups
      summary: Finds all user groups
      operationId: findUserGroups
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user_groups'
  "/usergroups/id/{id}":
    get:
      tags:
      - usergroups
      summary: Finds user groups by ID
      operationId: findUserGroupsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user_group'
    put:
      x-explorer-enabled: false
      tags:
      - usergroups
      summary: Updates user groups by ID
      description: One or more users can be added by using "user_additions" instead of "users". One or more users can be deleted by using "user_deletions" instead of "users".
      operationId: updateUserGroupsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - usergroups
      summary: Creates user groups by ID
      operationId: createUserGroupsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - usergroups
      summary: Deletes user groups by ID
      operationId: deleteUserGroupsById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/usergroups/name/{name}":
    get:
      tags:
      - usergroups
      summary: Finds user groups by name
      operationId: findUserGroupsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user_group'
    put:
      x-explorer-enabled: false
      tags:
      - usergroups
      summary: Updates user groups by name
      description: One or more users can be added by using "user_additions" instead of "users". One or more users can be deleted by using "user_deletions" instead of "users".
      operationId: updateUserGroupsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - usergroups
      summary: Deletes user groups by name
      operationId: deleteUserGroupsByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/users":
    get:
      tags:
      - users
      summary: Finds all users
      operationId: findUsers
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/users'
  "/users/id/{id}":
    get:
      tags:
      - users
      summary: Finds users by ID
      operationId: findUsersById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
    put:
      x-explorer-enabled: false
      tags:
      - users
      summary: Updates an existing user by ID
      description: This operation cannot be used to add computers, mobile devices, peripherals, vpp assignments to a user.
      operationId: updateUserById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - users
      summary: Creates a new user by ID
      description: This operation cannot be used to add computers, mobile devices, peripherals, vpp assignments to a user.
      operationId: createUserById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - users
      summary: Deletes a user by ID
      operationId: deleteUserById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/users/name/{name}":
    get:
      tags:
      - users
      summary: Finds users by name
      operationId: findUsersByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
    put:
      x-explorer-enabled: false
      tags:
      - users
      summary: Updates an existing user by name
      description: This operation cannot be used to add computers, mobile devices, peripherals, vpp assignments to a user.
      operationId: updateUserByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - users
      summary: Deletes a user by name
      operationId: deleteUserByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
  "/users/email/{email}":
    get:
      tags:
      - users
      summary: Finds users by email address
      description: Because email addresses may not be unique, this operation may return a list of users.
      operationId: findUsersByEmailAddress
      parameters:
      - name: email
        in: path
        required: true
        type: string
        description: Email address to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/user'
    put:
      x-explorer-enabled: false
      tags:
      - users
      summary: Updates an existing user by email address
      operationId: updateUserByEmailAddress
      parameters:
      - name: email
        in: path
        required: true
        type: string
        description: Email address value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - users
      summary: Deletes a user by email address
      operationId: deleteUserByEmailAddress
      parameters:
      - name: email
        in: path
        required: true
        type: string
        description: Email address value to filter by
      responses:
        '200':
          description: OK
  "/vppaccounts":
    get:
      tags:
      - vppaccounts
      summary: Finds all VPP Accounts
      operationId: findVPPAdminAccount
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vpp_accounts'
  "/vppaccounts/id/{id}":
    get:
      tags:
      - vppaccounts
      summary: Finds VPP Account by ID
      operationId: findVPPAdminAccountById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vpp_account'
    put:
      x-explorer-enabled: false
      tags:
      - vppaccounts
      summary: Updates a VPP account by ID
      description: The service_token value may not match another vpp account. account_name and expiration_date are derived from the service token.
      operationId: updateVPPAdminAccountById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - vppaccounts
      summary: Creates a new VPP account by ID
      description: The service_token value may not match another vpp account. account_name and expiration_date are derived from the service token.
      operationId: createVPPAdminAccountById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - vppaccounts
      summary: Deletes a VPP account by ID
      operationId: deleteVPPAdminAccountById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/vppassignments":
    get:
      tags:
      - vppassignments
      summary: Finds all VPP Assignments
      operationId: findVPPAdminAssignment
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vpp_assignments'
  "/vppassignments/id/{id}":
    get:
      tags:
      - vppassignments
      summary: Finds VPP Assignment by ID
      operationId: findAssignmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vpp_assignment'
    put:
      x-explorer-enabled: false
      tags:
      - vppassignments
      summary: Updates a VPP assignment by ID
      operationId: updateAssignmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - vppassignments
      summary: Creates a new VPP assignment by ID
      operationId: createAssignmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - vppassignments
      summary: Deletes a VPP assignment by ID
      operationId: deleteAssignmentById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/vppinvitations":
    get:
      tags:
      - vppinvitations
      summary: Finds all VPP Invitations
      operationId: findVPPAdminInvitation
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vpp_invitations'
  "/vppinvitations/id/{id}":
    get:
      tags:
      - vppinvitations
      summary: Finds a VPP Invitation by ID
      operationId: findInvitationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/vpp_invitation'
    put:
      x-explorer-enabled: false
      tags:
      - vppinvitations
      summary: Updates a VPP invitation by ID
      description: Usages are ignored for this operation
      operationId: updateInvitationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - vppinvitations
      summary: Creates a new VPP invitation by ID
      description: The following fields are also required if 'Send Emails' distribution method is specified - sender_name, sender_email_address, subject
      operationId: createInvitationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - vppinvitations
      summary: Deletes a VPP invitation by ID
      operationId: deleteInvitationById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/vppinvitations/id/{id}/subset/{subset}":
    get:
      tags:
      - vppinvitations
      summary: Finds a subset of data for a VPP invitation
      description: Subset values can also be appended using an ampersand to return multiple subsets (e.g. /subsets/General&Scope)
      operationId: findInvitationsByIdSubset
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID to filter by
      - name: subset
        in: path
        required: true
        type: string
        description: Subset to filter by
        enum: [General, Scope, InvitationUsages]
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
  "/webhooks":
    get:
      tags:
      - webhooks
      summary: Finds all webhooks
      operationId: findWebhooks
      parameters: []
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/webhooks'
  "/webhooks/id/{id}":
    get:
      tags:
      - webhooks
      summary: Finds webhooks by ID
      operationId: findWebhooksById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/webhook'
    put:
      x-explorer-enabled: false
      tags:
      - webhooks
      summary: Updates an existing webhook by ID
      operationId: updateWebhookById
      description: The `display_fields` are only applicable to the `SmartGroupMobileDeviceMembershipChange` event. Accepted values (capitlization sensitive) are the same as those available from the GUI when making and Advanced Search. `display_field_additions` can be used in place of the `display_fields` element to append new fields to an existing webhook.
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '201':
          description: Created
    post:
      x-explorer-enabled: false
      tags:
      - webhooks
      summary: Creates a new webhook by ID
      description: The `display_fields` are only applicable to the `SmartGroupMobileDeviceMembershipChange` event. Accepted values (capitlization sensitive) are the same as those available from the GUI when making and Advanced Search.
      operationId: createWebhookById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
        default: 0
      responses:
        '201':
          description: Created
    delete:
      tags:
      - webhooks
      summary: Deletes a webhook by ID
      operationId: deleteWebhookById
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        description: ID value to filter by
      responses:
        '200':
          description: OK
  "/webhooks/name/{name}":
    get:
      tags:
      - webhooks
      summary: Finds webhooks by name
      operationId: findWebhooksByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name to filter by
      produces:
      - application/xml
      - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/webhook'
    put:
      x-explorer-enabled: false
      tags:
      - webhooks
      summary: Updates an existing webhook by name
      operationId: updateWebhookByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '201':
          description: Created
    delete:
      tags:
      - webhooks
      summary: Deletes a webhook by name
      operationId: deleteWebhookByName
      parameters:
      - name: name
        in: path
        required: true
        type: string
        description: Name value to filter by
      responses:
        '200':
          description: OK
definitions:
  account:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: John Smith
        description: Name of the account
      directory_user:
        type: boolean
      full_name:
        type: string
        example: John Smith
      email:
        type: string
        example: john.smith@company.com
      email_address:
        type: string
        example: john.smith@company.com
      enabled:
        type: string
        enum: [Enabled, Disabled]
      ldap_server:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Directory Server Name
      force_password_change:
        type: boolean
      access_level:
        type: string
        enum: [Full Access, Site Access, Group Access]
      privilege_set:
        type: string
        enum: [Administrator, Auditor, Enrollment Only, Custom]
      site:
          $ref: '#/definitions/site_object'
      privileges:
        type: object
        properties:
          jss_objects:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          jss_settings:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          jss_actions:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          recon:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          casper_admin:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          casper_remote:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          casper_imaging:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
    required:
      - name
  accounts:
    type: object
    properties:
      users:
        type: object
        properties:
          user:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Steve Jobs
                  description: Name of the account
              required:
                - name
      groups:
        type: object
        properties:
          group:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Information Technology
                  description: Name of the group
              required:
                - name
  activation_code:
    type: object
    properties:
      organization_name:
        type: string
        example: Jamf Software LLC
      code:
        type: string
        example: QAPY-BP89-PJEH-87P8-0P89-PQ0A-FT68-00QA
  size:
    type: integer
    example: 1
  advanced_computer_search:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        description: Name of the advanced computer search
        type: string
        example: Advanced Search Name
      view_as:
        type: string
        example: Standard Web Page
      sort_1:
        type: string
      sort_2:
        type: string
      sort_3:
        type: string
      criteria:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            criterion:
              $ref: '#/definitions/criterion'
      display_fields:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            display_field:
              type: object
              properties:
                name:
                  type: string
                  example: IP Address
                  description: Name of the display field
      computers:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            computer:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                  example: Joes iMac
                  description: Name of the computer
                udid:
                  type: string
                  example: 55900BDC-347C-58B1-D249-F32244B11D30
                Computer_Name:
                  type: string
                  example: Joes iMac
      site:
          $ref: '#/definitions/site_object'
    required:
      - name
  advanced_computer_searches:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        advanced_computer_search:
          $ref: '#/definitions/id_name'
  advanced_mobile_device_search:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        description: Name of the advanced mobile device search
        type: string
        example: Advanced Search Name
      view_as:
        type: string
        example: Standard Web Page
      sort_1:
        type: string
      sort_2:
        type: string
      sort_3:
        type: string
      criteria:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            criterion:
              $ref: '#/definitions/criterion'
      display_fields:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            display_field:
              type: object
              properties:
                name:
                  type: string
                  example: IP Address
                  description: Name of the display field
      mobile_devices:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            mobile_device:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Tinas iPad
                  description: Name of the mobile device
                udid:
                  type: string
                  example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                Display_Name:
                  type: string
                  example: Tinas iPad
      site:
          $ref: '#/definitions/site_object'
    required:
      - name
  advanced_mobile_device_searches:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        advanced_mobile_device_search:
          $ref: '#/definitions/id_name'
  advanced_user_search:
    title: advanced_user_search
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        description: Name of the advanced user search
        type: string
        example: Advanced Search Name
      criteria:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            criterion:
              type: object
              properties:
                name:
                  type: string
                  example: Email Address
                  description: Name of the criteria
                priority:
                  type: integer
                and_or:
                  type: string
                  enum: [and, or]
                search_type:
                  type: string
                  example: like
                  description: Operator
                value:
                  type: string
                  example: company.com
                opening_paren:
                  type: boolean
                  default: false
                closing_paren:
                  type: boolean
                  default: false
      users:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            user:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Ted Johnson
                  description: Name of the user
                Username:
                  type: string
                  example: Ted Johnson
      display_fields:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            display_field:
              type: object
              properties:
                name:
                  type: string
                  example: Email Address
                  description: Name of the display field
      site:
          $ref: '#/definitions/site_object'
    required:
      - name
  advanced_user_searches:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        advanced_user_search:
          $ref: '#/definitions/id_name'
  allowed_file_extension:
    type: object
    properties:
      id:
        type: integer
        example: 1
      extension:
        description: File extension
        type: string
        example: jpg
    required:
      - extension
  allowed_file_extensions:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        allowed_file_extension:
          $ref: '#/definitions/allowed_file_extension'
  attachment:
    type: object
    properties:
      id:
        type: integer
        example: 1
      filename:
        type: string
        example: icon.png
      uri:
        type: string
        example: https://example.jamfcloud/attachment.html?id=1&amp;o=r
  building:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        description: Name of the building
        type: string
        example: Empire State Building
    required:
      - name
  buildings:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        building:
          $ref: '#/definitions/building'
  byoprofile:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Personal Device Profile
            description: Name of the BYO profile
          site:
            $ref: '#/definitions/site_object'
          enabled:
            type: boolean
          description:
            type: string
            example: Used for Android or iOS BYO device enrollments
        required:
          - name
  byoprofiles:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        byoprofile:
          $ref: '#/definitions/id_name'
  categories:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        category:
          $ref: '#/definitions/category'
  category:
    title: category
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        description: Name of the category
        type: string
        example: Applications
      priority:
        type: integer
        default: 9
    required:
      - name
  category_object:
    title: category
    type: object
    properties:
      id:
        type: integer
        default: -1
      name:
        description: Name of the category
        type: string
        default: Unknown
    required:
      - name
  class:
    title: class
    type: object
    properties:
      id:
        type: integer
        example: 1
      source:
        type: string
        example: N/A
      name:
        description: Name of the class
        type: string
        example: Math 101
      description:
        type: string
      site:
        $ref: '#/definitions/site_object'
      mobile_device_group:
        $ref: '#/definitions/id_name'
      students:
        type: array
        items:
          type: object
          properties:
            student:
              type: string
              example: Joey
              description: Name of the student
      teachers:
        type: array
        items:
          type: object
          properties:
            teacher:
              type: string
              example: Mr. Smith
              description: Name of the teacher
      teacher_ids:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
      student_group_ids:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
      teacher_group_ids:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
      mobile_devices:
        type: array
        items:
          type: object
          properties:
            mobile_device:
              type: object
              properties:
                name:
                  type: string
                  example: Tinas iPad
                  description: Name of the device
                udid:
                  type: string
                  example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                wifi_mac_address:
                  type: string
                  example: E0:AC:CB:97:36:G4
      mobile_device_group_id:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              example: 1
      meeting_times:
        type: object
        properties:
          meeting_time:
            type: object
            properties:
              days:
                type: string
                enum: [M, T, W, Th, F, Sa, Su]
                example: M W F
              start_time:
                type: integer
                example: 1300
              end_time:
                type: integer
                example: 1345
      apple_tvs:
        type: array
        items:
          type: object
          properties:
            apple_tv:
              type: object
              properties:
                name:
                  type: string
                  example: Apple TV
                udid:
                  type: string
                  example: 3e8c9775cb3302ed9e645adf632cfa533adc3aa8
                wifi_mac_address:
                  type: string
                  example: E0:AC:CB:97:36:G4
                device_id:
                  type: string
                  example: E0:AC:CB:97:36:g5
                airplay_password:
                  type: string
                  example: password
    required:
    - name
  class_post:
    title: class
    xml:
      name: class
    type: object
    properties:
      id:
        type: integer
      source:
        type: string
        example: N/A
      name:
        description: Name of the class
        type: string
        example: Math 101
      description:
        type: string
      site:
        $ref: '#/definitions/site_object'
      meeting_times:
        type: object
        properties:
          meeting_time:
            type: object
            properties:
              days:
                type: string
                enum: [M, T, W, Th, F, Sa, Su]
                example: M W F
              start_time:
                type: integer
                example: 1300
              end_time:
                type: integer
                example: 1345
    required:
    - name
  classes:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        class:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Biology 101
              description: Name of the class
            description:
              type: string
  commandflush:
    type: object
    properties:
      status:
        type: string
        enum: [Pending, Failed, Pending+Failed]
      mobile_devices:
        type: object
        properties:
          mobile_device:
            type: object
            properties:
              id:
                type: integer
            required:
            - id
    required:
    - status
  computer_applications:
    type: object
    properties:
      versions:
        type: object
        properties:
          version:
            type: array
            items:
              $ref: '#/definitions/computer_applications_version'
      unique_computers:
        type: object
        properties:
          computer:
            type: array
            items:
              $ref: '#/definitions/computer_applications_computer'
  computer_applications_version:
    xml:
      name: version
    type: array
    items:
      type: object
      properties:
        number:
          $ref: '#/definitions/computer_applications_number'
        computers:
          type: array
          items:
            type: object
            properties:
              computer:
                $ref: '#/definitions/computer_applications_computer'
  computer_applications_number:
    type: string
    example: 10.1.1
  computer_applications_computer:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Admins MacBook Pro
      udid:
        type: string
        example: 55900BDC-347C-58B1-D249-F32244B11D30
      serial_number:
        type: string
        example: C02Q7KHTGFWF
      mac_address:
        type: string
        example: E0:AC:CB:97:36:G4
  computer_application_usage:
    type: array
    items:
      type: object
      properties:
        usage:
          type: object
          properties:
            date:
              $ref: '#/definitions/computer_application_usage_date'
            apps:
              type: array
              items:
                type: object
                properties:
                  app:
                    $ref: '#/definitions/computer_application_usage_app'
  computer_application_usage_date:
    type: string
    example: 2018/01/29
  computer_application_usage_app:
    type: object
    properties:
      name:
        type: string
        example: Safari.app
      version:
        type: string
        example: 11.0
      foreground:
        type: integer
        example: 45
        description: Number of minutes application was in the foreground
      open:
        type: integer
        example: 150
        description: Number of minutes the application was open
  computer_check_in:
    type: object
    properties:
      check_in_frequency:
        type: integer
        description: Measured in minutes
        enum:
          - 60
          - 30
          - 15
          - 5
      create_startup_script:
        type: boolean
      log_startup_event:
        type: boolean
      check_for_policies_at_startup:
        type: boolean
      apply_computer_level_managed_preferences:
        type: boolean
      ensure_ssh_is_enabled:
        type: boolean
      create_login_logout_hooks:
        type: boolean
      log_username:
        type: boolean
      check_for_policies_at_login_logout:
        type: boolean
      apply_user_level_managed_preferences:
        type: boolean
      hide_restore_partition:
        type: boolean
      perform_login_actions_in_background:
        type: boolean
      display_status_to_user:
        type: boolean
  computer_command:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1002
          command:
            description: Command type
            type: string
            example: InstallProfile
          udid:
            type: string
            example: 002d47b9-ad68-4d58-9fc7-0c4a50950020
          uuid:
            type: string
            example: 002d47b9-ad68-4d58-9fc7-0c4a50950020
          profile_id:
            type: integer
            example: 121
          date_sent:
            type: string
            example: 2017-07-07 18:37:04
          date_sent_epoch:
            type: string
            example: 1499470624555
          date_sent_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          apns_result_status:
            type: string
            example: Acknowledged
          profile_udid:
            type: string
            example: A083D99E-5FD0-4A80-A9F4-0CF8BC790C74
      computers:
        type: object
        properties:
          size:
            $ref: '#/definitions/size'
          computer:
            type: object
            properties:
              id:
                type: integer
                example: 1
              udid:
                type: string
                example: 55900BDC-347C-58B1-D249-F32244B11D30
              serial_number:
                type: string
                example: C02Q7KHTGFWF
  computer_command_post:
    xml:
      name: computer_command
    type: object
    properties:
      general:
        type: object
        properties:
          command:
            description: Command type. (UnlockUserAccount and DeleteUser require a DEP enrolled device, SettingsEnableBluetooth and SettingsDisableBluetooth require macOS 10.13.4 or later, EnableRemoteDesktop and DisableRemoteDesktop require macOS 10.14.4 or later)
            type: string
            enum: [DeviceLock, EraseDevice, UnmanageDevice, BlankPush, UnlockUserAccount, DeleteUser, SettingsEnableBluetooth, SettingsDisableBluetooth, DisableRemoteDesktop, EnableRemoteDesktop]
          passcode:
            description: Passcode to apply for DeviceLock and EraseDevice commands
            type: string
            example: 123456
          user_name:
            description: Username for UnlockUserAccount and DeleteUser commands
            type: string
            example: administrator
        required:
          - command
      computers:
        type: object
        properties:
          computer:
            type: object
            properties:
              id:
                type: integer
                example: 1
            required:
              - id
  computer_commands:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        computer_command:
          type: object
          properties:
            id:
              type: integer
              example: 1
            command:
              description: Command type
              type: string
              example: EraseDevice
            udid:
              type: string
              example: 002d47b9-ad68-4d58-9fc7-0c4a50950020
            uuid:
              type: string
              example: 002d47b9-ad68-4d58-9fc7-0c4a50950020
            profile_id:
              type: integer
              example: -1
            computers:
              type: array
              items:
                type: object
                properties:
                  size:
                    $ref: '#/definitions/size'
                  computer:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      udid:
                        type: string
                        example: 002d47b9-ad68-4d58-9fc7-0c4a50950020
                      ip_address:
                        type: string
                        example: 10.1.1.1
                      users:
                        type: string
                        example: Username
  computer_extension_attribute:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        description: Extension attribute name
        type: string
        example: Battery Cycle Count
      enabled:
        description: Only applicable to script input type
        type: boolean
        example: true
      description:
        type: string
        example: Number of charge cycles logged on the current battery
        description: Description of the extension attribute
      data_type:
        type: string
        enum: [String, Integer, Date]
      input_type:
        type: object
        properties:
          type:
            type: string
            enum: [script, Text Field, LDAP Mapping, Pop-up Menu]
            default: Text Field
      inventory_display:
        type: string
        enum: [General, Hardware, Operating System, User and Location, Purchasing, Extension Attributes]
        description: Category in which to display the extension attribute in Jamf Pro
    required:
      - name
  computer_extension_attributes:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        computer_extension_attribute:
          properties:
            id:
              type: integer
            name:
              type: string
            enabled:
              type: boolean
  computer_group:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Group Name
        description: Name of the group
      is_smart:
        type: boolean
        description: Smart or static group
      site:
        $ref: '#/definitions/site_object'
      criteria:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            criterion:
              $ref: '#/definitions/criterion'
      computers:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            computer:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Joes iMac
                  description: Name of the computer
                mac_address:
                  type: string
                  example: E0:AC:CB:97:36:G4
                alt_mac_address:
                  type: string
                  example: E0:AC:CB:67:36:T4
                serial_number:
                  type: string
                  example: C02Q7KHTGFWF
  computer_group_post:
    type: object
    xml:
      name: computer_group
    properties:
      id:
        type: integer
      name:
        type: string
        example: Group Name
        description: Name of the group
      is_smart:
        type: boolean
        description: Smart or static group
      site:
        $ref: '#/definitions/site_object'
      criteria:
        type: array
        items:
          type: object
          properties:
            criterion:
              $ref: '#/definitions/criterion'
    required:
      - name
      - is_smart
  computer_groups:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        computer_group:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: Group Name
                description: Name of the group
              is_smart:
                type: boolean
  computer_hardware_software_reports:
    type: object
    properties:
      hardware_report:
        type: object
        properties:
          date_time:
            type: string
            example: 2017-07-07 18:37:04
          date_time_epoch:
            type: string
            example: 1499470624555
          date_time_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          operating_system:
            type: string
            example: Mac OS X 10.12.4
          service_pack:
            type: string
          NIC_speed:
            type: string
            example: n/a
          optical_drive:
            type: string
          make:
            type: string
            example: Apple
          model_identifier:
            type: string
            example: MacBookPro11,1
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          processor_speed_mhz:
            type: integer
            example: 2600
          processor_count:
            type: integer
            example: 1
          core_count:
            type: integer
            example: 2
          total_ram_mb:
            type: integer
            example: 16384
          open_ram_slots:
            type: integer
            example: 0
          total_harddrive_size:
            type: string
            example: 500.28 GB
          boot_partition_used_percent:
            type: integer
            example: 19
      font_report:
        type: object
        properties:
          date_time:
            type: string
            example: 2017-07-07 18:37:04
          date_time_epoch:
            type: string
            example: 1499470624555
          date_time_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          type:
            type: string
            enum: [Added, Deleted]
          name:
            type: string
            example: Al Nile.ttc
          version:
            type: string
            example: n/a
          path:
            type: string
            example: /Library/Fonts/Al Nile.ttc
      software_report:
        type: object
        properties:
          date_time:  
            type: string
            example: 2017-07-07 18:37:04
          date_time_epoch:
            type: string
            example: 1499470624555
          date_time_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          type:
            type: string
            enum: [Added, Deleted]
          name:
            type: string
            example: Parallels Desktop.app
          version:
            type: string
            example: 9.0
          path:
            type: string
            example: /Applications/Parallels Desktop.app
      plugin_report:
        type: object
        properties:
          date_time:
            type: string
            example: 2017-07-07 18:37:04
          date_time_epoch:
            type: string
            example: 1499470624555
          date_time_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          type:
            type: string
            enum: [Added, Removed]
          name:
            type: string
            example: Quartz Composer.webplugin
          version:
            type: string
            example: 1.4
          path:
            type: string
            example: /Library/Internet Plug-Ins/Quartz Composer.webplugin
  computer_history:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Admins MacBook Pro
            description: Name of the computer
          udid:
            type: string
            example: 55900BDC-347C-58B1-D249-F32244B11D30
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
      computer_usage_logs:
        type: array
        items:
          properties:
            usage_log:
              properties:
                event:
                  type: string
                  example: login
                username:
                  type: string
                  example: Admin
                date_time:
                  type: string
                  example: 2017-07-07 18:37:04
                date_time_epoch:
                  type: string
                  example: 1499470624555
                date_time_utc:
                  type: string
                  example: 2017-07-07T18:37:04.555-0500
      audits:
        type: array
        items:
          properties:
            audit:
              properties:
                event:
                  type: string
                  example: Viewed FileVault Encryption Key
                username:
                  type: string
                  example: Jamf Pro Admin
                date_time:
                  type: string
                  example: 2017-07-07 18:37:04
                date_time_epoch:
                  type: string
                  example: 1499470624555
                date_time_utc:
                  type: string
                  example: 2017-07-07T18:37:04.555-0500
      policy_logs:
        type: array
        items:
          properties:
            policy_log:
              properties:
                policy_id:
                  type: integer
                  example: 1
                policy_name:
                  type: string
                  example: Update Inventory
                username:
                  type: string
                  example: Username
                date_time:
                  type: string
                  example: 2017-07-07 18:37:04
                date_time_epoch:
                  type: string
                  example: 1499470624555
                date_time_utc:
                  type: string
                  example: 2017-07-07T18:37:04.555-0500
                status:
                  type: string
                  example: Completed
      casper_remote_logs:
        type: array
        items:
          properties:
            casper_remote_log:
              properties:
                date_time:
                  type: string
                  example: 2017-07-07 18:37:04
                date_time_epoch:
                  type: string
                  example: 1499470624555
                date_time_utc:
                  type: string
                  example: 2017-07-07T18:37:04.555-0500
                status:
                  type: string
                  example: Completed
      screen_sharing_logs:
        type: array
        items:
          properties:
            screen_sharing_log:
              properties:
                date_time:
                  type: string
                  example: 2017-07-07 18:37:04
                date_time_epoch:
                  type: string
                  example: 1499470624555
                date_time_utc:
                  type: string
                  example: 2017-07-07T18:37:04.555-0500
                status:
                  type: string
                  example: Completed
                details:
                  type: string
                  example: admin authenticated to screen share with computer at 10.1.1.1
      casper_imaging_logs:
        type: array
        items:
          properties:
            casper_imaging_log:
              properties:
                date_time:
                  type: string
                  example: 2017-07-07 18:37:04
                date_time_epoch:
                  type: string
                  example: 1499470624555
                date_time_utc:
                  type: string
                  example: 2017-07-07T18:37:04.555-0500
                status:
                  type: string
                  example: Completed
      commands:
        type: object
        properties:
          completed:
            type: array
            items:
              properties:
                command:
                  type: object
                  properties:
                    name: 
                      type: string
                      example: WiFi Configuration Profile
                    completed:
                      type: string
                      example: 2017/07/07 at 6:37 PM
                    completed_epoch:
                      type: string
                      example: 1499470624555
                    completed_utc:
                      type: string
                      example: 2017-07-07T18:37:04.555-0500
                    username:
                      type: string
          pending:
            type: array
            items:
              properties:
                command:
                  type: object
                  properties:
                    name:
                      type: string
                      example: ProfileList
                    status:
                      type: string
                      example: Pending
                    issued:
                      type: string
                      example: 2017/07/07 at 6:37 PM
                    issued_epoch:
                      type: string
                      example: 1499470624555
                    issued_utc:
                      type: string
                      example: 2017-07-07T18:37:04.555-0500
                    last_push:
                      type: string
                      example: 2017/07/07 at 6:38 PM
                    last_push_epoch:
                      type: string
                      example: 1499470735555
                    last_push_utc:
                      type: string
                      example: 2017-07-07T18:38:55.555-0500
                    username:
                      type: string
          failed:
            type: array
            items:
              properties:
                command:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Install Configuration Profile AD Binding
                    status:
                      type: string
                      example: The Directory Binding Account payload could not be installed
                    issued:
                      type: string
                      example: 2017/07/07 at 6:37 PM
                    issued_epoch:
                      type: string
                      example: 1499470624555
                    issued_utc:
                      type: string
                      example: 2017-07-07T18:37:04.555-0500
                    failed:
                      type: string
                      example: 2017/07/07 at 6:38 PM
                    failed_epoch:
                      type: string
                      example: 1499470735555
                    failed_utc:
                      type: string
                      example: 2017-07-07T18:38:55.555-0500
      user_location:
        type: array
        items:
          properties:
            location:
              type: object
              properties:
                date_time:
                  type: string
                  example: 2017/07/07 at 6:37 PM
                date_time_epoch:
                  type: string
                  example: 1499470624555
                date_time_utc:
                  type: string
                  example: 2017-07-07T18:37:04.555-0500
                username:
                  type: string
                  example: Betty.Johnson
                full_name:
                  type: string
                  example: Betty Johnson
                email_address:
                  type: string
                  example: betty.johnson@company.com
                phone_number:
                  type: string
                  example: 555-555-5555
                department:
                  type: string
                  example: Information Technology
                building:
                  type: string
                  example: Block D
                room:
                  type: string
                  example: 134
                position:
                  type: string
                  example: Chief of Everything
      mac_app_store_applications:
        type: object
        properties:
          installed:
            type: array
            items:
              properties:
                app:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Xcode
                    version:
                      type: string
                      example: 8.3.3
                    size_mb:
                      type: string
                      example: 150
          pending:
            type: array
            items:
              properties:
                app:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Xcode
                    version:
                      type: string
                      example: 8.3.2
                    deployed:
                      type: string
                      example: 2 minutes ago
                    deployed_epoch:
                      type: integer
                      example: 1499470624555
                    deployed_utc:
                      type: string
                      example: 2018-02-22T16:55:14.000-0600
                    last_update:
                      type: string
                      example: 2 minutes ago
                    last_update_epoch:
                      type: integer
                      example: 1499470624555
                    last_update_utc:
                      type: string
                      example: 2018-02-22T16:55:14.000-0600
          failed:
            type: array
            items:
              properties:
                app:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Xcode
                    version:
                      type: string
                      example: 8.3.2
                    status:
                      type: string
                      example: Failed
                    deployed:
                      type: string
                      example: 2 minutes ago
                    deployed_epoch:
                      type: integer
                      example: 1499470624555
                    deployed_utc:
                      type: string
                      example: 2018-02-22T16:55:14.000-0600
                    last_update:
                      type: string
                      example: 2 minutes ago
                    last_update_epoch:
                      type: integer
                      example: 1499470624555
                    last_update_utc:
                      type: string
                      example: 2018-02-22T16:55:14.000-0600
  computer_inventory_collection:
    type: object
    properties:
      local_user_accounts:
        type: boolean
      home_directory_sizes:
        type: boolean
      hidden_accounts:
        type: boolean
      printers:
        type: boolean
      active_services:
        type: boolean
      mobile_device_app_purchasing_info:
        type: boolean
      computer_location_information:
        type: boolean
      package_receipts:
        type: boolean
      available_software_updates:
        type: boolean
      inclue_applications:
        type: boolean
      inclue_fonts:
        type: boolean
      inclue_plugins:
        type: boolean
      applications:
        type: array
        items:
          type: object
          properties:
            application:
              type: object
              properties:
                path:
                  type: string
                  example: ~/Applications
                platform:
                  type: string
                  enum:
                  - Mac
                  - Windows
      fonts:
        type: array
        items:
          type: object
          properties:
            font:
              type: object
              properties:
                path:
                  type: string
                  example: ~/Library/Fonts
                platform:
                  type: string
                  enum:
                  - Mac
                  - Windows
      plugins:
        type: array
        items:
          type: object
          properties:
            plugin:
              type: object
              properties:
                path:
                  type: string
                  example: ~/Library/Internet Plug-Ins
                platform:
                  type: string
                  enum:
                  - Mac
                  - Windows
  computer_invitation:
    type: object
    properties:
      id:
        type: integer
        example: 1
      invitation:
        type: integer
        example: 72496637217353185994315270701967709089
        readOnly: true
      invitation_status:
        type: string
        example: INVITATION_EXPIRED
        readOnly: true
      invitation_type:
        type: string
        example: USER_INITATIED_EMAIL
      expiration_date:
        type: string
        description: Use 'Unlimited' to specify no expiration date
        example: 2012-05-07 11:13:35
      expiration_date_utc:
        type: string
        example: 2012-05-07T11:13:35.609-0500
        readOnly: true
      expiration_date_epoch:
        type: integer
        example: 1336407215609
        readOnly: true
      ssh_username:
        type: string
        example: jamfadmin
      ssh_password:
        type: string
        example: accountpassword
      multiple_users_allowed:
        type: boolean
        default: false
      times_used:
        type: integer
        example: 0
        readOnly: true
      create_account_if_does_not_exist:
        type: boolean
        default: false
      hide_account:
        type: boolean
        default: false
      lock_down_ssh:
        type: boolean
        default: false
      invited_user_uuid:
        type: string
        example: B87E9AA8-C3DE-4034-821E-1B7D51FD4956
        readOnly: true
      enroll_into_site:
        type: object
        properties:
          id:
            type: integer
            default: -1
          name:
            type: string
            default: None
      keep_existing_site_membership:
        type: boolean
        default: false
      site:
        $ref: '#/definitions/site_object'
  computer_invitations:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        computer_invitation:
          type: object
          properties:
            id:
              type: integer
              example: 1
            invitation:
              type: integer
              example: 72496637217353185994315270701967709089
            invitation_type:
              type: string
              example: USER_INITATIED_EMAIL
            expiration_date:
              type: string
              example: 2012-05-07 11:13:35
            expiration_date_utc:
              type: string
              example: 2012-05-07T11:13:35.609-0500
            expiration_date_epoch:
              type: integer
              example: 1336407215609
  computer_management:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Steves iMac
            description: Name of the computer
          udid:
            type: string
            example: 55900BDC-347C-58B1-D249-F32244B11D30
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
      policies:
        type: array
        items:
          properties:
            policy:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Update Inventory
                trigger:
                  type: string
                  example: Self Service, Check-in
      ebooks:
        type: array
        items:
          properties:
            ebook:
              $ref: '#/definitions/id_name'
      mac_app_store_apps:
        type: array
        items:
          properties:
            mac_app_store_app:
              $ref: '#/definitions/id_name'
      os_x_configuration_profiles:
        type: array
        items:
          properties:
            profile:
              $ref: '#/definitions/id_name'
      managed_preference_profiles:
        type: array
        items:
          properties:
            profile:
              $ref: '#/definitions/id_name'
      restricted_software:
        type: array
        items:
          properties:
            software:
              $ref: '#/definitions/id_name'
      smart_groups:
        type: array
        items:
          properties:
            group:
              $ref: '#/definitions/id_name'
      static_groups:
        type: array
        items:
          properties:
            group:
              $ref: '#/definitions/id_name'
      patch_reporting_software_titles:
        type: array
        items:
          properties:
            title:
              type: object
              properties:
                name:
                  type: string
                  example: Google Chrome
                latest_version:
                  type: string
                  example: 64.0.3282.119
                installed_version:
                  type: string
                  example: 63.0.3239.132
      patch_policies:
        type: array
        items:
          properties:
            patch_policy:
              $ref: '#/definitions/id_name'
  computer_reports:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        computer_report:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Advanced Search Name
  computer_report:
    type: array
    title: computer_reports
    xml:
      name: computer_reports
    items:
      properties:
        Computer:
          type: object
          properties:
            id:
              type: integer
              example: 1
            Computer_Name:
              type: string
              example: Joes MacBook Pro
  computers:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        computer:
          $ref: '#/definitions/id_name'
  computers_basic:
    type: object
    title: computers
    xml:
      name: computers
    properties:
      computer:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Lauras MacBook Pro
            description: Name of the computer
          managed:
            type: boolean
          username:
            type: string
            example: Laura
          model:
            type: string
            example: 13-inch MacBook Pro (Mid 2016)
          department:
            type: string
            example: Accounting
          building:
            type: string
            example: East
          mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
          udid:
            type: string
            example: 55900BDC-347C-58B1-D249-F32244B11D30
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          report_date_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          report_date_epoch:
            type: string
            example: 1499470624555
  computer_post:
    type: object
    xml:
      name: computer
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
            example: Lauras MacBook Pro
            description: Name of the computer
          managed:
            type: boolean
          username:
            type: string
            example: Laura
          model:
            type: string
            example: 13-inch MacBook Pro (Mid 2016)
          department:
            type: string
            example: Accounting
          building:
            type: string
            example: East
          mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
          udid:
            type: string
            example: 55900BDC-347C-58B1-D249-F32244B11D30
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          report_date_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          report_date_epoch:
            type: integer
            example: 1499470624555
  computer:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Admins iMac
            description: Name of computer
          mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
          network_adapter_type:
            type: string
            example: Ethernet
          alt_mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
          alt_network_adapter_type:
            type: string
            example: IEEE80211
          ip_address:
            type: string
            example: 10.1.1.1
          last_reported_ip:
            type: string
            example: 192.0.0.1
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          udid:
            type: string
            example: 55900BDC-347C-58B1-D249-F32244B11D30
          jamf_version:
            type: string
            example: 9.99.0-t1494340586
          platform:
            type: string
            example: Mac
          barcode_1:
            type: string
          barcode_2:
            type: string
          asset_tag:
            type: string
          remote_management:
            type: object
            properties:
              managed:
                type: boolean
              management_username deprecated="10.48":
                type: string
                example: deprecated
          mdm_capable:
            type: boolean
          mdm_capable_users:
            type: object
            properties:
              mdm_capable_user:
                type: string
          management_status:
            type: object
            properties:
              enrolled_via_dep:
                type: boolean
              user_approved_enrollment:
                type: boolean
              user_approved_mdm:
                type: boolean
          report_date:
            type: string
            example: 2017-07-07 18:37:04
          report_date_epoch:
            type: integer
            example: 1499470624555
          report_date_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          last_contact_time:
            type: string
            example: 2017-07-07 18:37:04
          last_contact_time_epoch:
            type: integer
            example: 1499470624555
          last_contact_time_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          initial_entry_date:
            type: string
            example: 2017-07-07 18:37:04
          initial_entry_date_epoch:
            type: integer
            example: 1499470624555
          initial_entry_date_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          last_cloud_backup_date_epoch:
            type: integer
            example: 1499470624555
          last_cloud_backup_date_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          last_enrolled_date_epoch:
            type: integer
            example: 1499470624555
          last_enrolled_date_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          distribution_point:
            type: string
          sus:
            type: string
          site:
            $ref: '#/definitions/site_object'
          itunes_store_account_is_active:
            type: boolean
      location:
        $ref: '#/definitions/location'
      purchasing:
        $ref: '#/definitions/purchasing'
      peripherals:
        properties:
          size:
            $ref: '#/definitions/size'
          peripherals:
            type: array
            items:
              properties:
                peripheral:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    bar_code_1:
                      type: string
                    bar_code_2:
                      type: string
                    type:
                      type: string
                      description: Name of the peripheral type
                      example: Peripheral Type Name
                    fields:
                      type: object
                      properties:
                        field:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Peripheral Field Name
                            value:
                              type: string
                              example: Value for menu type
                purchasing:
                  $ref: '#/definitions/purchasing'
                attachments:
                  type: array
                  items:
                    properties:
                      size:
                        $ref: '#/definitions/size'
                      attachment:
                        $ref: '#/definitions/attachment'
      hardware:
        type: object
        properties:
          make:
            type: string
            example: Apple
          model:
            type: string
            example: 13-inch Retina MacBook Pro (Late 2013)
          model_identifier:
            type: string
            example: MacBookPro11,1
          os_name:
            type: string
            example: Mac OS X
          os_version:
            type: string
            example: 10.13.2
          os_build:
            type: string
            example: 17C88
          master_password_set:
            type: boolean
          active_directory_status:
            type: string
            example: AD.company.com
          service_pack:
            type: string
          processor_type:
            type: string
            example: Intel Core i5
          processor_architechture:
            type: string
            example: x86_64
          processor_speed:
            type: string
            example: 2600
          processor_speed_mhz:
            type: string
            example: 2600
          number_processors:
            type: integer
            example: 1
          number_cores:
            type: integer
            example: 2
          total_ram:
            type: integer
            example: 16384
          total_ram_mb:
            type: integer
            example: 16384
          boot_rom:
            type: string
            example: MBP111.0142.B00
          bus_speed:
            type: integer
            example: 0
          bus_speed_mhz:
            type: integer
            example: 0
          battery_capacity:
            type: integer
            example: 90
          cache_size:
            type: integer
            example: 3072
          cache_size_kb:
            type: integer
            example: 3072
          available_ram_slots:
            type: integer
            example: 0
          optical_drive:
            type: string
          nic_speed:
            type: string
            example: n/a
          smc_version:
            type: string
            example: 2.16f68
          ble_capable:
            type: boolean
          sip_status:
            type: string
            enum: [Enabled, Disabled]
          gatekeeper_status:
            type: string
            example: App Store and identified developers
          xprotect_version:
            type: string
            example: 2098
          institutional_recovery_key:
            type: string
            example: Not Present
          disk_encryption_configuration:
            type: string
            example: Individual and Institutional Encryption
          filevault_2_users:
            type: array
            items:
              properties:
                user:
                  type: string
                  example: admin
          storage:
            type: array
            items:
              properties:
                device:
                  type: object
                  properties:
                    disk:
                      type: string
                      example: disk0
                    model:
                      type: string
                      example: Apple SSD SM0512F
                    revision:
                      type: string
                      example: UXM2JA1Q
                    serial_number:
                      type: string
                      example: S1K5NYADC12934
                    size:
                      type: integer
                      example: 512287
                    drive_capacity_mb:
                      type: integer
                      example: 512287
                    connection_type:
                      type: string
                      example: NO
                    smart_status:
                      type: string
                      example: Verified
                    partition:
                      type: array
                      items:
                        properties:
                          name:
                            type: string
                            example: Macintosh HD
                          size:
                            type: integer
                            example: 94128
                          type:
                            type: string
                            example: boot
                          partition_capacity_mb:
                            type: integer
                            example: 94128
                          percentage_full:
                            type: integer
                            example: 17
                          filevault_status:
                            type: string
                            example: Encrypted
                          filevault_percent:
                            type: integer
                            example: 100
                          filevault2_status:
                            type: string
                            example: Encrypted
                          filevault2_percent:
                            type: integer
                            example: 100
                          boot_drive_available_mb:
                            type: integer
                            example: 425198
                          lvgUUID:
                            type: string
                          lvUUID:
                            type: string
                          pvUUID:
                            type: string
          mapped_printers:
            type: array
            items:
              properties:
                printer:
                  type: object
                  properties:
                    name:
                      type: string
                      example: 2nd Floor HP
                    uri:
                      type: string
                      example: lpd://10.11.182.21/
                    type:
                      type: string
                      example: HP LaserJet 500 color MFP M575
                    location:
                      type: string
                      example: 2nd Floor / Stairwell
      certificates:
        type: array
        items:
          properties:
            certificate:
              type: object
              properties:
                common_name:
                  type: string
                  example: JSS Built-in Certificate Authority
                identify:
                  type: boolean
                  example: false
                expires_utc:
                  type: string
                  example: 2024-03-02T02:12:49.000+0000
                expires_epoch:
                  type: integer
                  example: 1709345569000
                name:
                  type: string
      security:
        type: object
        properties:
          activation_lock:
            type: boolean
            example: false
          recovery_lock_enabled:
            type: boolean
            example: false
          secure_boot_level:
            type: string
            example: unknown
          external_boot_level:
            type: string
            example: unknown
          firewall_enabled:
            type: boolean
            example: false
      software:
        type: object
        properties:
          unix_executables:
            type: string
          licensed_software:
            type: array
            items:
              properties:
                name:
                  type: string
                  example: Adobe CS5
          installed_by_casper:
            type: array
            items:
              properties:
                package:
                  type: string
                  example: FireFox.pkg
          installed_by_installer_swu:
            type: array
            items:
              properties:
                package:
                  type: string
                  example: com.apple.pkg.iTunesX
          cached_by_casper:
            type: array
            items:
              properties:
                package:
                  type: string
                  example: GoogleChrome.pkg
          available_software_updates:
            type: array
            items:
              properties:
                name:
                  type: string
                  example: iTunesXPatch-12.7.3
          available_updates:
            type: array
            items:
              properties:
                update:
                  type: object
                  properties:
                    name:
                      type: string
                      example: iTunes
                    package_name:
                      type: string
                      example: iTunesXPatch-12.7.3
                    version:
                      type: string
                      example: 12.7.3
          running_services:
            type: array
            items:
              properties:
                name:
                  type: string
                  example: com.apple.airportd
          applications:
            type: array
            items:
              properties:
                size:
                  $ref: '#/definitions/size'
                application:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Activity Monitor.app
                    path:
                      type: string
                      example: /Applications/Utilities/Activity Monitor.app
                    version:
                      type: string
                      example: 10.13
          fonts:
            type: array
            items:
              properties:
                size:
                  $ref: '#/definitions/size'
                font:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Al Nile.ttc
                    path:
                      type: string
                      example: /Library/Fonts/Al Nile.ttc
                    version:
                      type: string
                      example: n/a
          plugins:
            type: array
            items:
              properties:
                size:
                  $ref: '#/definitions/size'
                plugin:
                  type: object
                  properties:
                    name:
                      type: string
                      example: QuickTime Plugin.plugin
                    path:
                      type: string
                      example: /Library/Internet Plug-Ins/Disabled Plug-Ins/QuickTime Plugin.plugin
                    version:
                      type: string
                      example: 7.7.3
      extension_attributes:
        type: array
        items:
          properties:
            extension_attribute:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Battery Cycle Count
                type:
                  type: string
                  example: String
                value:
                  type: string
                  example: 191
      groups_accounts:
        type: object
        properties:
          computer_group_memberships:
            type: array
            items:
              properties:
                group:
                  type: string
                  example: All Managed Clients
          local_accounts:
            type: array
            items:
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      example: _amavisd
                    realname:
                      type: string
                      example: AMaViS Daemon
                    uid:
                      type: string
                      example: 83
                    home:
                      type: string
                      example: /var/virusmails
                    home_size:
                      type: string
                      example: -1MB
                    home_size_mb:
                      type: string
                      example: -1
                    administrator:
                      type: boolean
                      example: false
                    filevault_enabled:
                      type: boolean
                      example: false
      configuration_profiles:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            configuration_profile:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                uuid:
                  type: string
                is_removable:
                  type: boolean
                  example: false
  criterion:
    type: object
    properties:
      name:
        type: string
        example: Last Inventory Update
        description: Name of the criteria
      priority:
        type: integer
      and_or:
        type: string
        enum: [and, or]
      search_type:
        type: string
        example: more than x days ago
        description: Operator
      value:
        type: string
        example: 7
      opening_paren:
        type: boolean
        default: false
      closing_paren:
        type: boolean
        default: false
  department:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Information Technology
        description: Name of the department
    required:
      - name
  departments:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        department:
          $ref: '#/definitions/department'
  directory_binding:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: AD Binding
        description: Name of the binding
      priority:
        type: integer
        example: 1
      domain:
        type: string
        example: ad.company.com
      username:
        type: string
        example: AD\Administrator
        description: Network administrator account to bind with
      password:
        type: string
        description: Password for the network administrator account
      computer_ou:
        type: string
        example: CN=Computers,DC=ad,DC=company,DC=com
        description: OU to bind computers to
      type:
        type: string
        example: Active Directory
    required:
      - name
  directory_bindings:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        directory_binding:
          $ref: '#/definitions/id_name'
  disk_encryption_configuration:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Corporate Encryption
        description: Name of the disk encryption configuration
      key_type:
        type: string
        enum: [Individual, Institutional, Individual And Institutional]
        default: Individual
      file_vault_enabled_users:
        type: string
        enum: [Current or Next User, Management Account]
        default: Management Account
    required:
      - name
  disk_encryption_configurations:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        disk_encryption_configuration:
          $ref: '#/definitions/id_name'
  distribution_point:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name: 
        type: string
        example: New York Share
        description: Name of the distribution point
      ip_address:
        type: string
        example: ny.company.com
        description: IP address or hostname of distribution point
      is_master:
        type: boolean
        default: false
        description: Only one share can be set as master
      failover_point:
        type: string
      failover_point_url:
        type: string
      enable_load_balancing:
        type: boolean
        default: false
      local_path:
        type: string
      ssh_username:
        type: string
        example: username
      password:
        type: string
        example: password
      connection_type:
        type: string
        enum: [SMB, AFP]
      share_name:
        type: string
        example: Caspershare
        description: Name of the share
      workgroup_or_domain:
        type: string
        description: Workgroup or domain of the accounts that have access to the share (SMB only)
        example: COMPANY
      share_port:
        type: integer
        example: 139
      read_only_username:
        type: string
        example: casperinstall
        description: Account with read only privileges to the share
      read_only_password:
        type: string
        example: password
        description: Password for the read only account
      read_write_username:
        type: string
        example: casperwrite
        description: Account with read/write privileges to the share
      read_write_password:
        type: string
        example: password
        description: Password for the read/write account
      http_downloads_enabled:
        type: boolean
        example: true
        default: false
      http_url:
        type: string
        example: http://ny.company.com/CasperShare
        description: URL to download packages from
      context:
        type: string
        example: CasperShare
        description: Path to the share
      protocol:
        type: string
        enum: [http, https]
      port:
        type: integer
        example: 80
      no_authentication_required:
        type: boolean
        default: true
      username_password_required:
        type: boolean
        default: false
      http_username:
        type: string
        example: casperinstall
        description: Username to authenticate with for basic authentication
      http_password:
        type: string
        description: Password for basic authentication
    required:
      - name
      - share_name
      - read_only_username
      - read_write_username
  distribution_point_post:
    type: object
    xml:
      name: distribution_point
    properties:
      id:
        type: integer
      name: 
        type: string
        example: New York Share
        description: Name of the distribution point
      ip_address:
        type: string
        example: ny.company.com
        description: IP address or hostname of distribution point
      is_master:
        type: boolean
        description: Only one share can be set as master
      failover_point:
        type: string
        description: Name of a file distribution point or "Cloud Distribution Point" to use as failover.
      enable_load_balancing:
        type: boolean
        default: false
      ssh_username:
        type: string
        example: casperadmin
      password:
        type: string
        example: password
      connection_type:
        type: string
        enum: [SMB, AFP]
      share_name:
        type: string
        example: Caspershare
        description: Name of the share
      workgroup_or_domain:
        type: string
        example: COMPANY
        description: Workgroup or domain of the accounts that have access to the share (SMB only)
      share_port:
        type: integer
        example: 139
      read_only_username:
        type: string
        example: casperinstall
        description: Account with read only privileges to the share
      read_only_password:
        type: string
        example: password
        description: Password for the read only account
      read_write_username:
        type: string
        example: casperwrite
        description: Account with read/write privileges to the share
      read_write_password:
        type: string
        example: password
        description: Password for the read/write account
      http_downloads_enabled:
        type: boolean
      http_url:
        type: string
        example: http://ny.company.com/CasperShare
        description: URL to download packages from
      context:
        type: string
        example: CasperShare
        description: Path to the share
      protocol:
        type: string
        enum: [http, https]
      port:
        type: integer
        example: 80
      no_authentication_required:
        type: boolean
        default: true
        example: false
      username_password_required:
        type: boolean
        default: false
        example: true
      http_username:
        type: string
        example: casperinstall
        description: Username to authenticate with for basic authentication
      http_password:
        type: string
        example: password
        description: Password for basic authentication
    required:
      - name
      - share_name
      - read_only_username
      - read_write_username
  distribution_points:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        distribution_point:
          $ref: '#/definitions/id_name'
  dock_item:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Safari
        description: Name of the dock item
      type:
        type: string
        enum: [App, File, Folder]
        default: App
      path:
        type: string
        example: file://localhost/Applications/Safari.app/
      contents:
        type: string
    required:
      - name
      - path
      - type
  dock_items:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        dock_item:
          $ref: '#/definitions/id_name'
  ebook:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: iPhone User Guide for iOS 10.3
            description: Name of the ebook
          author:
            type: string
            example: Apple Inc.
          version:
            type: string
          free:
            type: boolean
          url:
            type: string
            example: https://itunes.apple.com/us/book/iphone-user-guide-for-ios-10-3/id1134772174?mt=11&amp;uo=4
            description: Download URL for the ebook
          deployment_type:
            type: string
            enum: [Make Available in Self Service, Install Automatically/Prompt Users to Install]
          file_type:
            type: string
            enum: [PDF, IBOOK, EPUB]
          deploy_as_managed:
            type: boolean
          category:
            $ref: '#/definitions/category_object'
          self_service_icon:
            type: object
            properties:
              id:
                type: integer
                example: 1
              uri:
                type: string
                example: https://company.jamfcloud.com/iconservlet/?id=1
              data:
                type: string
          site:
            $ref: '#/definitions/site_object'
        required:
          - name
      scope:
        type: object
        properties:
          all_computers:
            type: boolean
            default: false
          all_mobile_devices:
            type: boolean
            default: false
          all_jss_users:
            type: boolean
            default: false
          computers:
            type: array
            items:
              type: object
              properties:
                computer:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Admins MacBook Pro
                      description: Name of the computer
                    udid:
                      type: string
                      example: 55900BDC-347C-58B1-D249-F32244B11D30
          computer_groups:
            type: array
            items:
              type: object
              properties:
                computer_group:
                  $ref: '#/definitions/id_name'
          mobile_devices:
            type: array
            items:
              type: object
              properties:
                mobile_device:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Admins iPad
                      description: Name of the device
                    udid:
                      type: string
                      example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                    wifi_mac_address:
                      type: string
                      example: E0:AC:CB:97:36:G4
          mobile_device_groups:
            type: array
            items:
              type: object
              properties:
                mobile_device_group:
                  $ref: '#/definitions/id_name'
          buildings:
            type: array
            items:
              type: object  
              properties:
                building:
                  $ref: '#/definitions/id_name'
          departments:
            type: array
            items:
              type: object
              properties:
                department:
                  $ref: '#/definitions/id_name'
          jss_users:
            type: array
            items:
              type: object
              properties:
                user:
                  $ref: '#/definitions/id_name'
          jss_user_groups:
            type: array
            items:
              type: object  
              properties:
                user_group:
                  $ref: '#/definitions/id_name'
          classes:
            type: array
            items:
              type: object  
              properties:
                class:
                  $ref: '#/definitions/id_name'
          limitations:
            type: object
            properties:
              network_segments:
                type: array
                items:
                  type: object  
                  properties:
                    network_segment:
                      $ref: '#/definitions/id_name'
              users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              computers:
                type: array
                items:
                  type: object
                  properties:
                    computer:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Johns iMac
                          description: Name of the computer
                        udid:
                          type: string
                          example: 55900BDC-347C-58B1-D249-F32244B11D30
              computer_groups:
                type: array
                items:
                  type: object
                  properties:
                    computer_group:
                      $ref: '#/definitions/id_name'
              mobile_devices:
                type: array
                items:
                  type: object
                  properties:
                    mobile_device:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Johns iPad
                          description: Name of the device
                        udid:
                          type: string
                          example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                        wifi_mac_address:
                          type: string
                          example: E0:AC:CB:97:36:G4
              mobile_device_groups:
                type: array
                items:
                  type: object
                  properties:
                    mobile_device_group:
                        $ref: '#/definitions/id_name'
              buildings:
                type: array
                items:
                  type: object  
                  properties:
                    building:
                      $ref: '#/definitions/id_name'
              departments:
                type: array
                items:
                  type: object  
                  properties:
                    department:
                      $ref: '#/definitions/id_name'
              jss_users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              jss_user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              users:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Adam
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object
                  properties:
                    network_segment:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        uid:
                          type: string
                        name:
                          type: string
                          example: New York
                          description: Name of the network segment
      self_service:
        type: object
        properties:
          self_service_display_name:
            type: string
            example: iPhone User Guide for iOS 10.3
          install_button_text:
            type: string
            example: Install
          self_service_description:
            type: string
          force_users_to_view_description:
            type: boolean
          self_service_icon:
            type: object
            properties:
              id:
                type: integer
                example: 1
              uri:
                type: string
                example: https://company.jamfcloud.com/iconservlet/?id=1
              data:
                type: string
          feature_on_main_page:
            type: boolean
          self_service_categories:
            type: object
            properties:
              category:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: eBooks
                    description: Name of the category
                  display_in:
                    type: string
                    description: Self Service categories to be displayed ebook in
                  feature_in:
                    type: boolean
          notification:
            type: boolean
          notification_subject:
            type: string
          notification_message:
            type: string
  ebook_post:
    type: object
    xml:
      name: ebook
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
            example: iPhone User Guide for iOS 10.3
            description: Name of the ebook
          author:
            type: string
            example: Apple Inc.
          version:
            type: string
            example: 1
          free:
            type: boolean
            example: true
          url:
            type: string
            example: https://itunes.apple.com/us/book/iphone-user-guide-for-ios-10-3/id1134772174?mt=11&amp;uo=4
            description: Download URL for the ebook
          deployment_type:
            type: string
            enum: [Make Available in Self Service, Install Automatically/Prompt Users to Install]
            example: Install Automatically/Prompt Users to Install
          file_type:
            type: string
            enum: [PDF, IBOOK, EPUB]
          deploy_as_managed:
            type: boolean
          category:
            $ref: '#/definitions/category_object'
          self_service_icon:
            type: string
          site:
            $ref: '#/definitions/site_object'
        required:
          - name
      scope:
        type: object
        properties:
          all_computers:
            type: boolean
            default: false
          all_mobile_devices:
            type: boolean
            default: false
          all_jss_users:
            type: boolean
            default: false
  ebooks:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        ebook:
          $ref: '#/definitions/id_name'
  group:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        description: Group name
        type: string
        example: Administrators
      access_level:
        type: string
        enum: [Full Access, Site Access, Group Access]
      privilege_set:
        type: string
        enum: [Administrator, Auditor, Enrollment Only, Custom]
      site:
        $ref: '#/definitions/site'
      privileges:
        type: object
        properties:
          jss_objects:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          jss_settings:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          jss_actions:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          recon:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          casper_admin:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          casper_remote:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
          casper_imaging:
            type: array
            items:
              type: object
              properties:
                privilege:
                  type: string
      members:
        type: array
        items:
          type: object
          properties:
            user:
              $ref: '#/definitions/id_name'
    required:
      - name
  gsx_connection:
    type: object
    properties:
      enabled:
        type: boolean
      username:
        type: string
        example: applegsx@company.com
      account_number:
        type: integer
        example: 0000123456
      region:
        type: string
        enum: [Americas, APAC, EMEA, LatinAmerica]
      uri:
        type: string
        example: https://gsxws2.apple.com/gsx-ws/services/am/asp
  healthcare_listener:
    type: array
    items:
      type: object
      properties:
        id:
          type: integer
          example: 1
        infratructure_manager_id:
          type: integer
          example: 1
        enabled:
          type: boolean
        name:
          type: string
          example: Healthcare Listener
        single_ips:
          type: string
        range_ips:
          type: string
        port:
          type: integer
          example: 8080
        rules:
          type: array
          items:
            properties:
              rule:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  hcl_id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Patient Discharge
                  operating_system:
                    type: string
                    example: iPhone
                  mdm_command:
                    type: string
                    example: EnableLostMode
                  mdm_command_additional_data:
                    type: object
                    properties:
                      lost_mode_phone:
                        type: string
                      lost_mode_footnote:
                        type: string
                      lost_mode_persistent:
                        type: string
                      lost_mode_option:
                        type: string
                      lost_mode_message:
                        type: string
                      lost_mode_sound:
                        type: boolean
                  adt_message:
                    type: string
                  adt_message_field:
                    type: string
                  device_inventory_field:
                    type: integer
                    example: -1
                  notification_enabled:
                    type: boolean
                  notify_unsupported_enabled:
                    type: boolean
                  notification_threshold:
                    type: integer
                    example: 15
                  notification_emails:
                    type: object
                    properties:
                      email:
                        type: string
                        example: travis@company.com
  healthcare_listeners:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        healthcare_listener:
          $ref: '#/definitions/healthcare_listener'
  healthcare_listener_rule:
    properties:
      id:
        type: integer
        example: 1
      hcl_id:
        type: integer
        example: 1
      name:
        type: string
        example: Patient Discharge - Wipe
      operating_system:
        type: string
        enum: [iPhone, TV]
      mdm_command:
        type: string
        enum: [EraseDevice, DeviceLock, ClearPasscode, EnableLostMode, DisableLostMode]
      mdm_command_additional_data:
        type: string
      adt_message:
        type: string
        example: A03
      adt_message_field:
        type: string
        example: PV1-6-3
      device_inventory_field:
        type: integer
        description: -1 represents the location field 'Room'; any other number is a mobile device extension attribute ID.
        default: -1
      notification_enabled:
        type: boolean
        default: false
      notify_unsupported_enabled:
        type: boolean
        default: false
      notification_threshold:
        type: integer
        default: 15
      notification_emails:
        type: object
        properties:
          email:
            type: string
            example: travis@company.com
    required:
      - name
      - adt_message
      - adt_message_field
  healthcare_listener_rules:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        healthcare_listener_rule:
          $ref: '#/definitions/healthcare_listener_rule'
  ibeacon:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Room 123 Beacon
        description: Name of the ibeacon
      uuid:
        type: string
        example: 55900BDC-347C-58B1-D249-F32244B11D30
      major:
        type: string
        example: -1
      minor:
        type: string
        example: -1
    required:
      - name
      - uuid
  ibeacons:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        ibeacon:
          $ref: '#/definitions/ibeacon'
  id_name:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
  infrastructure_manager:
    type: object
    properties:
      id:
        type: integer
        example: 1
      uuid:
        type: string
      name:
        type: string
      hostname:
        type: string
      last_check_in:
        type: string
      last_reported_ip:
        type: string
      operating_system:
        type: string
      operating_system_version:
        type: string
      recurring_check_in_frequency:
        type: integer
  infrastructure_managers:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        infrastructure_manager:
          $ref: '#/definitions/infrastructure_manager'
  jss_user:
    xml:
      name: user
    type: object
    properties:
      institution:
        type: string
        example: Company Name
      version:
        type: string
        example: 10.3.0-t1521825567
      license_type:
        type: string
        example: Subscription
      product:
        type: string
        example: Casper Suite
      privileges:
        type: array
        items:
          properties:
            privilege:
              type: string
              example: Create Provisioning Profiles
  json_web_token_configuration:
    type: object
    properties:
      id:
        type: integer
        example: 1
      token_expiry:
        type: integer
        default: 5
      name:
        type: string
        example: JSON Token Name
      disabled:
        type: boolean
        default: false
    required:
      - name
  json_web_token_configurations:
    type: array
    items:
      type: object
      properties:
        json_web_token_configuration:
          $ref: '#/definitions/json_web_token_configuration'
  ldap_server:
    type: object
    properties:
      connection:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Company Active Directory
            description: Name of the LDAP server
          hostname:
            type: string
            example: company.ad.com
            description: Hostname or IP address of the server
          server_type:
            type: string
            enum: [Active Directory, Open Directory, eDirectory, Custom]
          port:
            type: integer
            example: 389
          use_ssl:
            type: boolean
            default: false
          authentication_type:
            type: string
            enum: [simple, CRAM-MD5, DIGEST-MD5, none]
          account:
            type: object
            properties:
              distinguished_username:
                type: string
                example: CN=Administrator,CN=Users,DC=Company,DC=com
              password:
                type: string
                example: password
          open_close_timeout:
            type: integer
            example: 15
            description: Timeout in seconds
          search_timeout:
            type: integer
            example: 60
            description: Timeout in seconds
          referral_response:
            type: string
            enum: [ignore, follow]
          use_wildcards:
            type: boolean
        required:
          - name
      mappings_for_users:
        type: object
        properties:
          user_mappings:
            type: object
            properties:
              map_object_class_to_any_or_all:
                type: string
                enum: [all, any]
              object_classes:
                type: string
                example: organizationalPerson, user
              search_base:
                type: string
                example: DC=Company,DC=com
              search_scope:
                type: string
                enum: [All Subtrees, First Level Only]
              map_user_id:
                type: string
                example: uSNCreated
              map_username:
                type: string
                example: sAMAccountName
              map_realname:
                type: string
                example: displayName
              map_email_address:
                type: string
                example: mail
              append_to_email_results:
                type: string
                example: company.com
              map_department:
                type: string
                example: department
              map_building:
                type: string
                example: streetAddress
              map_room:
                type: string
                example: room
              map_telephone:
                type: string
                example: telephoneNumber
              map_position:
                type: string
                example: title
              map_user_uuid:
                type: string
                example: objectGUID
          user_group_mappings:
            type: object
            properties:
              map_object_class_to_any_or_all:
                type: string
                enum: [all, any]
              object_classes:
                type: string
                example: top, group
              search_base:
                type: string
                example: DC=Company,DC=com
              search_scope:
                type: string
                enum: [All Subtrees, First Level Only]
              map_group_id:
                type: string
                example: uSNCreated
              map_group_name:
                type: string
                example: name
              map_group_uuid:
                type: string
                example: objectGUID
          user_group_membership_mappings:
            type: object
            properties:
              user_group_membership_stored_in:
                type: string
                enum: [user object, group object]
              map_group_membership_to_user_field:
                type: string
                example: memberOf
              append_to_username:
                type: string
                example: company.com
              use_dn:
                type: boolean
              recursive_lookups:
                type: boolean
              map_user_membership_to_group_field:
                type: boolean
              map_user_membership_use_dn:
                type: boolean
              map_object_class_to_any_or_all:
                type: string
                enum: [all, any]
              object_classes:
                type: string
                example: group
              search_base:
                type: string
                example: DC=Company,DC=com
              search_scope:
                type: string
                enum: [All Subtrees, First Level Only]
              username:
                type: string
                example: sAMAccountName
              group_id:
                type: string
                example: uSNCreated
              user_group_membership_use_ldap_compare:
                type: boolean
  ldap_server_post:
    type: object
    properties:
      connection:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Company Active Directory
            description: Name of the LDAP server
          hostname:
            type: string
            example: company.ad.com
            description: Hostname or IP address of the server
          server_type:
            type: string
            enum: [Active Directory, Open Directory, eDirectory, Custom]
          port:
            type: integer
            example: 389
          use_ssl:
            type: boolean
            default: false
            example: true
          authentication_type:
            type: string
            enum: [simple, CRAM-MD5, DIGEST-MD5, none]
          certificate_used:
            type: string
            description: Supports PEM and based64 encoded DER formats
            example: MIIEuzCCA6OgAwIBAgIBAjANBgkqhkiG9w0BAQUFADBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwHhcNMDYwNDI1MjE0MDM2WhcNMzUwMjA5MjE0MDM2WjBiMQswCQYDVQQGEwJVUzETMBEGA1UEChMKQXBwbGUgSW5jLjEmMCQGA1UECxMdQXBwbGUgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxFjAUBgNVBAMTDUFwcGxlIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkkakJH5HbHkdQ6wXtXnmELes2oldMVeyLGYne+Uts9QerIjAC6Bg++FAJ039BqJj50cpmnCRrEdCju+QbKsMflZ56DKRHi1vUFjczy8QPTc4UadHJGXL1XQ7Vf1+b8iUDulWPTV0N8WQ1IxVLFVkds5T39pyez1C6wVhQZ48ItCD3y6wsIG9wtj8BMIy3Q88PnT3zK0koGsj+zrW5DtleHNbLPbU6rfQPDgCSC7EhFi501TwN22IWq6NxkkdTVcGvL0Gz+PvjcM3mo0xFfh9Ma1CWQYnEdGILEINBhzOKgbEwWOxaBDKMaLOPHd5lc/9nXmW8Sdh2nzMUZaF3lMktAgMBAAGjggF6MIIBdjAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUK9BpR5R2Cf70a40uQKb3R01/CF4wHwYDVR0jBBgwFoAUK9BpR5R2Cf70a40uQKb3R01/CF4wggERBgNVHSAEggEIMIIBBDCCAQAGCSqGSIb3Y2QFATCB8jAqBggrBgEFBQcCARYeaHR0cHM6Ly93d3cuYXBwbGUuY29tL2FwcGxlY2EvMIHDBggrBgEFBQcCAjCBthqBs1JlbGlhbmNlIG9uIHRoaXMgY2VydGlmaWNhdGUgYnkgYW55IHBhcnR5IGFzc3VtZXMgYWNjZXB0YW5jZSBvZiB0aGUgdGhlbiBhcHBsaWNhYmxlIHN0YW5kYXJkIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSwgY2VydGlmaWNhdGUgcG9saWN5IGFuZCBjZXJ0aWZpY2F0aW9uIHByYWN0aWNlIHN0YXRlbWVudHMuMA0GCSqGSIb3DQEBBQUAA4IBAQBcNplMLXi37Yyb3PN3m/J20ncwT8EfhYOFG5k9RzfyqZtAjizUsZAS2L70c5vu0mQPy3lPNNiiPvl4/2vIB+x9OYOLUyDTOMSxv5pPCmv/K/xZpwUJfBdAVhEedNO3iyM7R6PVbyTi69G3cN8PReEnyvFteO3ntRcXqNx+IjXKJdXZD9Zr1KIkIxH3oayPc4FgxhtbCS+SsvhESPBgOJ4V9T0mZyCKM2r3DYLP3uujL/lTaltkwGMzd/c6ByxW69oPIQ7aunMZT7XZNn/Bh1XZp5m5MkL72NVxnn6hUrcbvZNCJBIqxw8dtk2cXmPIS4AXUKqK1drk/NAJBzewdXUh
          account:
            type: object
            properties:
              distinguished_username:
                type: string
                example: CN=Administrator,CN=Users,DC=Company,DC=com
              password:
                type: string
                example: password
          open_close_timeout:
            type: integer
            example: 15
            description: Timeout in seconds
          search_timeout:
            type: integer
            example: 60
            description: Timeout in seconds
          referral_response:
            type: string
            enum: [ignore, follow]
          use_wildcards:
            type: boolean
          connection_is_used_for:
            type: string
            default: users
        required:
          - name
      mappings_for_users:
        type: object
        properties:
          user_mappings:
            type: object
            properties:
              map_object_class_to_any_or_all:
                type: string
                enum: [all, any]
              object_classes:
                type: string
                example: organizationalPerson, user
              search_base:
                type: string
                example: DC=Company,DC=com
              search_scope:
                type: string
                enum: [All Subtrees, First Level Only]
              map_user_id:
                type: string
                example: uSNCreated
              map_username:
                type: string
                example: sAMAccountName
              map_realname:
                type: string
                example: displayName
              map_email_address:
                type: string
                example: mail
              append_to_email_results:
                type: string
                example: company.com
              map_department:
                type: string
                example: department
              map_building:
                type: string
                example: streetAddress
              map_room:
                type: string
                example: room
              map_telephone:
                type: string
                example: telephoneNumber
              map_position:
                type: string
                example: title
              map_user_uuid:
                type: string
                example: objectGUID
          user_group_mappings:
            type: object
            properties:
              map_object_class_to_any_or_all:
                type: string
                enum: [all, any]
              object_classes:
                type: string
                example: top, group
              search_base:
                type: string
                example: DC=Company,DC=com
              search_scope:
                type: string
                enum: [All Subtrees, First Level Only]
              map_group_id:
                type: string
                example: uSNCreated
              map_group_name:
                type: string
                example: name
              map_group_uuid:
                type: string
                example: objectGUID
          user_group_membership_mappings:
            type: object
            properties:
              user_group_membership_stored_in:
                type: string
                enum: [user object, group object]
              map_group_membership_to_user_field:
                type: string
                example: memberOf
              append_to_username:
                type: string
                example: company.com
              use_dn:
                type: boolean
              recursive_lookups:
                type: boolean
              map_user_membership_to_group_field:
                type: boolean
              map_user_membership_use_dn:
                type: boolean
              map_object_class_to_any_or_all:
                type: string
                enum: [all, any]
              object_classes:
                type: string
                example: group
              search_base:
                type: string
                example: DC=Company,DC=com
              search_scope:
                type: string
                enum: [All Subtrees, First Level Only]
              username:
                type: string
                example: sAMAccountName
              group_id:
                type: string
                example: uSNCreated
              user_group_membership_use_ldap_compare:
                type: boolean
  ldap_servers:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        ldap_server:
          $ref: '#/definitions/id_name'
  licensed_software:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Adobe Creative Suite
            description: Name of the licensed software
          publisher:
            type: string
            example: Adobe Systems Incorporated
          platform:
            type: string
            example: Mac
          send_email_on_violation:
            type: boolean
          remove_titles_from_inventory_reports:
            type: boolean
          exclude_titles_purchased_from_app_store:
            type: boolean
          notes:
            type: string
          site:
            $ref: '#/definitions/site_object'
        required:
          - name
      software_definitions:
        type: array
        items:
          properties:
            definition:
              $ref: '#/definitions/licensed_software_defintion'
      font_definitions:
        type: array
        items:
          properties:
            definition:
              $ref: '#/definitions/licensed_software_defintion'
      plugin_definitions:
        type: array
        items:
          properties:
            definition:
              $ref: '#/definitions/licensed_software_defintion'
      licenses:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            license:
              type: object
              properties:
                serial_number_1:
                  type: string
                serial_number_2:
                  type: string
                organization_name:
                  type: string
                registered_to:
                  type: string
                license_type:
                  type: string
                  enum: [Standard, Concurrent, Site License]
                license_count:
                  type: integer
                  example: 500
                notes:
                  type: string
                purchasing:
                  type: object
                  properties:
                    is_perpetual:
                      type: boolean
                      default: true
                    is_annual:
                      type: boolean
                      default: false
                    po_number:
                      type: string
                    vendor:
                      type: string
                    purchase_price:
                      type: string
                    purchasing_account:
                      type: string
                    po_date:
                      type: string
                    po_date_epoch:
                      type: integer
                    po_date_utc:
                      type: string
                    license_expires:
                      type: string
                    license_expires_epoch:
                      type: integer
                    license_expires_utc:
                      type: string
                    life_expectancy:
                      type: integer
                    purchasing_contact:
                      type: string
                attachments:
                  type: array
                  items:
                    properties:
                      attachment:
                        $ref: '#/definitions/attachment'
  licensed_software_defintion:
    xml:
      name: definition
    type: object
    properties:
      compare_type:
        type: string
        enum: [like, is]
      name:
        type: string
      version:
        type: string
        example: 14.
  licensed_software_all:
    xml:
      name: licensed_software
    type: array
    items:
      properties:
        licensed_software:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Adobe Creative Suite
              description: Name of the licensed software
  location:
    type: object
    properties:
      username:
        type: string
        example: JBetty
      realname:
        type: string
        example: Betty Jackson
      real_name:
        type: string
        example: Betty Jackson
      email_address:
        type: string
        example: jbetty@company.com
      position:
        type: string
        example: Systems Engineer
      phone:
        type: string
        example: 123-555-6789
      phone_number:
        type: string
        example: 123-555-6789
      department:
        type: string
        example: Sales Staff
      building:
        type: string
        example: New York Office
      room:
        type: string
        example: 1159
  logflush:
    type: object
    properties:
      log:
        type: string
        enum: [policy]
      log_id:
        type: integer
        example: 1
      interval:
        type: string
        enum: [Zero Days, Zero Weeks, Zero Months, Zero Years, One Days, One Weeks, One Months, One Years, Two Days, Two Weeks, Two Months, Two Years, Three Days, Three Weeks, Three Months, Three Years, Six Days, Six Weeks, Six Months, Six Years]
      computers:
        type: object
        properties:
          computer:
            type: object
            properties:
              id:
                type: integer
                example: 1
    required:
      - log
      - log_id
      - interval
  mac_application:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: TextWrangler.app
            description: Name of the application
          version:
            type: string
            example: 5.5.2
          is_free:
            type: boolean
          bundle_id:
            type: string
            example: com.barebones.textwrangler
          url:
            type: string
            example: https://itunes.apple.com/us/app/textwrangler/id404010395?mt=12&amp;uo=4
          category:
            $ref: '#/definitions/category_object'
          site:
            $ref: '#/definitions/site_object'
        required:
          - name
          - version
          - bundle_id
          - url
      scope:
        type: object
        properties:
          all_computers:
            type: boolean
            default: false
          all_jss_users:
            type: boolean
            default: false
          buildings:
            type: array
            items:
              type: object  
              properties:
                building:
                  $ref: '#/definitions/id_name'
          departments:
            type: array
            items:
              type: object
              properties:
                department:
                  $ref: '#/definitions/id_name'
          computers:
            type: array
            items:
              type: object
              properties:
                computer:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Admins MacBook Pro
                      description: Name of the computer
                    udid:
                      type: string
                      example: 55900BDC-347C-58B1-D249-F32244B11D30
          computer_groups:
            type: array
            items:
              type: object
              properties:
                computer_group:
                  $ref: '#/definitions/id_name'
          jss_users:
            type: array
            items:
              type: object
              properties:
                user:
                  $ref: '#/definitions/id_name'
          jss_user_groups:
            type: array
            items:
              type: object  
              properties:
                user_group:
                  $ref: '#/definitions/id_name'
          limitations:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object  
                  properties:
                    network_segment:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              buildings:
                type: array
                items:
                  type: object  
                  properties:
                    building:
                      $ref: '#/definitions/id_name'
              departments:
                type: array
                items:
                  type: object  
                  properties:
                    department:
                      $ref: '#/definitions/id_name'
              users:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Adam
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object
                  properties:
                    network_segment:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        uid:
                          type: string
                        name:
                          type: string
                          example: New York
                          description: Name of the network segment
              computers:
                type: array
                items:
                  type: object
                  properties:
                    computer:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Johns iMac
                          description: Name of the computer
                        udid:
                          type: string
                          example: 55900BDC-347C-58B1-D249-F32244B11D30
              computer_groups:
                type: array
                items:
                  type: object
                  properties:
                    computer_group:
                      $ref: '#/definitions/id_name'
              jss_users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              jss_user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
      self_service:
        type: object
        properties:
          install_button_text:
            type: string
            example: Install
          self_service_description:
            type: string
            example: Installs the TextWrangler application
          force_users_to_view_description:
            type: boolean
          self_service_icon:
            type: object
            properties:
              id:
                type: integer
                example: 1
              uri:
                type: string
                example: https://company.jamfcloud.com/iconservlet/?id=1
              data:
                type: string
          feature_on_main_page:
            type: boolean
          self_service_categories:
            type: array
            items:
              type: object
              properties:
                category:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Applications
                    display_in:
                      type: boolean
                      example: true
                    feature_in:
                      type: boolean
                      example: false
          notification:
            type: string
          notification_subject:
            type: string
            example: TextWrangler is Available to Install
          notification_message:
            type: string
            example: You can install TextWrangler by clicking this link or going to Self Service
          vpp:
            type: object
            properties:
              assign_vpp_device_based_licenses:
                type: boolean
                default: false
              vpp_admin_account_id:
                type: integer
                default: -1
  mac_applications:
    type: array
    items:
      properties:
        mac_application:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: TextWrangler.app
              description: Name of the application
  managed_preference_profile:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Date and Time Server
          enabled:
            type: boolean
          plist:
            type: string
        required:
          - name
  managed_preference_profile_post:
    type: object
    xml:
      name: managed_preference_profile
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
            example: Date and Time Server
          enabled:
            type: boolean
        required:
          - name
  managed_preference_profiles:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        managed_preference_profile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Date and Time Server
  mobile_device:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          display_name:
            type: string
            example: Tinas iPad
          device_name:
            type: string
            example: Tinas iPad
          name:
            type: string
            example: Tinas iPad
          asset_tag:
            type: string
          last_inventory_update:
            type: string
            example: 2017-07-07 18:37:04
          last_inventory_update_epoch:
            type: integer
            example: 1499470624555
          last_inventory_update_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          capacity:
            type: integer
            example: 12159
          capacity_mb:
            type: integer
            example: 12159
          available:
            type: integer
            example: 11487
          available_mb:
            type: integer
            example: 11487
          percentage_used:
            type: integer
            example: 5
          os_type:
            type: string
            example: iOS
          os_version:
            type: string
            example: 10.3.2
          os_build:
            type: string
            example: 14F89
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          udid:
            type: string
            example: 270aae10800b6e61a2ee2bbc285eb967050b5984
          initial_entry_date_epoch:
            type: integer
            example: 1499470624555
          initial_entry_date_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          phone_number:
            type: string
            example: 123-555-6789
          ip_address:
            type: string
            example: 192.0.0.1
          wifi_mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
          bluetooth_mac_address:
            type: string
            example: E0:AC:CB:97:36:G6
          modem_firmware:
            type: string
            example: 2.61.00
          model:
            type: string
            example: iPhone 6S
          model_identifier:
            type: string
            example: iPhone8,1
          model_number:
            type: string
            example: MKRY2LL
          model_display:
            type: string
            example: iPhone 6S
          device_ownership_level:
            type: string
            example: Institutional
          last_enrollment_epoch:
            type: integer
            example: 1499470624555
          last_enrollment_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          managed:
            type: boolean
          supervised:
            type: boolean
          exchange_activesync_device_identifier:
            type: string
            example: TUCLLFJHPL779ACL9DCJQFN39F
          shared:
            type: string
          tethered:
            type: string
          battery_level:
            type: integer
            example: 95
          ble_capable:
            type: boolean
          device_locator_service_enabled:
            type: boolean
          do_not_disturb_enabled:
            type: boolean
          cloud_backup_enabled:
            type: boolean
          last_cloud_backup_date_epoch:
            type: integer
            example: 1499470624555
          last_cloud_backup_date_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          location_services_enabled:
            type: boolean
          itunes_store_account_is_active:
            type: boolean
          last_backup_time_epoch:
            type: integer
            example: 1499470624555
          last_backup_time_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
        required:
          - name
          - udid
          - serial_number
      location:
        $ref: '#/definitions/location'
      purchasing:
        $ref: '#/definitions/purchasing'
      applications:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            application:
              type: object
              properties:
                application_name:
                  type: string
                  example: Self Service Mobile
                application_version:
                  type: string
                  example: 10.1.1
                identifier:
                  type: string
                  example: com.jamfsoftware.selfservice
      security_object:
        xml:
          name: security
        type: object
        properties:
          data_protection:
            type: boolean
          block_level_encryption_capable:
            type: boolean
          file_level_encryption_capable:
            type: boolean
          passcode_present:
            type: boolean
          passcode_compliant:
            type: boolean
          passcode_compliant_with_profile:
            type: boolean
          passcode_lock_grace_period_enforced:
            type: string
            example: Not Available
          hardware_encryption:
            type: string
          activation_lock_enabled:
            type: boolean
          jailbreak_detected:
            type: string
            example: Normal
          lost_mode_enabled:
            type: string
            example: true
          lost_mode_enforced:
            type: boolean
            example: true
          lost_mode_enable_issued_epoch:
            type: integer
            example: 1517598768512
          lost_mode_enable_issued_utc:
            type: string
            example: 2018-02-02T13:12:48.512-0600
          lost_mode_message:
            type: string
            example: Please return to Company
          lost_mode_phone:
            type: string
            example: 555-555-5555
          lost_mode_footnote:
            type: string
          lost_location_epoch:
            type: integer
            example: 1517598680459
          lost_location_utc:
            type: string
            example: 2018-02-02T13:11:20.459-0600
          lost_location_latitude:
            type: string
            example: 44.81436821
          lost_location_longitude:
            type: string
            example: -91.502672
          lost_location_altitude:
            type: string
            example: 242.88067627
          lost_location_speed:
            type: string
            example: -1.0
          lost_location_course:
            type: string
            example: -1.0
          lost_location_horizontal_accuracy:
            type: string
            example: 65.0
          lost_location_vertical_accuracy:
            type: string
            example: 10.0
      network:
        type: object
        properties:
          home_carrier_network:
            type: string
            example: Verizon
          cellular_technology:
            type: string
            example: Unknown
          voice_roaming_enabled:
            type: string
            example: Yes
          imei:
            type: string
            example: 35 200706 056227 1
          iccid:
            type: string
            example: 8914 8000 0010 0254 6259
          current_carrier_network:
            type: string
          carrier_settings_version:
            type: string
            example: 20.0
          current_mobile_country_code:
            type: string
            example: 311
          current_mobile_network_code:
            type: string
            example: 480
          home_mobile_country_code:
            type: string
            example: 311
          home_mobile_network_code:
            type: string
            example: 480
          data_roaming_enabled:
            type: boolean
          phone_number:
            type: string
            example: 5555555555
      certificates:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            certificate:
              type: object
              properties:
                common_name:
                  type: string
                  example: JSS Built-in Certificate Authority
                identity:
                  type: boolean
      configuration_profiles:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            configuration_profile:
              type: object
              properties:
                display_name:
                  type: string
                  example: WiFi
                version:
                  type: integer
                  example: 1
                identifier:
                  type: string
                  example: 279889AF-1564-4480-A61D-860DF5EFDF26
                uuid:
                  type: string
                  example: 279889AF-1564-4480-A61D-860DF5EFDF26
      provisioning_profiles:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            mobile_device_provisioning_profile:
              type: object
              properties:
                display_name:
                  type: string
                  example: In-House App Provisioning Profile
                expiration_date:
                  type: string
                  example: 2018-01-29
                expiration_date_epoch:
                  type: integer
                expiration_date_utc:
                  type: string
                  example: 2018-01-29T14:18:02.000-0600
                uuid:
                  type: string
                  example: 279889AF-1564-4480-A61D-860DF5EFDF26
      mobile_device_groups:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            mobile_device_group:
              $ref: '#/definitions/id_name'
      extension_attributes:
        type: array
        items:
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Asset Selector
            type:
              type: string
              example: String
            value:
              type: string
              example: Sample Value
  mobile_device_post:
    type: object
    xml:
      name: mobile_device
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
          display_name:
            type: string
            example: Tinas iPad
          device_name:
            type: string
            example: Tinas iPad
          name:
            type: string
            example: Tinas iPad
          asset_tag:
            type: string
          last_inventory_update_epoch:
            type: integer
            example: 1499470624555
          capacity:
            type: integer
            example: 12159
          capacity_mb:
            type: integer
            example: 12159
          available:
            type: integer
            example: 11487
          available_mb:
            type: integer
            example: 11487
          percentage_used:
            type: integer
            example: 5
          os_type:
            type: string
            example: iOS
          os_version:
            type: string
            example: 10.3.2
          os_build:
            type: string
            example: 14F89
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          udid:
            type: string
            example: 270aae10800b6e61a2ee2bbc285eb967050b5984
          initial_entry_date_epoch:
            type: integer
            example: 1499470624555
          phone_number:
            type: string
            example: 123-555-6789
          ip_address:
            type: string
            example: 192.0.0.1
          wifi_mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
          bluetooth_mac_address:
            type: string
            example: E0:AC:CB:97:36:G6
          modem_firmware:
            type: string
            example: 2.61.00
          model:
            type: string
            example: iPhone 6S
          model_identifier:
            type: string
            example: iPhone8,1
          model_number:
            type: string
            example: MKRY2LL
          model_display:
            type: string
            example: iPhone 6S
          device_ownership_level:
            type: string
            example: Institutional
          last_enrollment_epoch:
            type: integer
            example: 1499470624555
          managed:
            type: boolean
          supervised:
            type: boolean
          battery_level:
            type: integer
            example: 95
        required:
          - name
          - udid
          - serial_number
  mobile_device_application:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Self Service Mobile
          display_name:
            type: string
            example: Self Service Mobile
          description:
            type: string
          bundle_id:
            type: string
            example: com.jamfsoftware.selfservice
          version:
            type: string
            example: 9.98
          internal_app:
            type: boolean
          category:
            $ref: '#/definitions/category_object'
          ipa:
            type: object
            properties:
              name:
                type: string
                example: Self Service Mobile.ipa
              uri:
                type: string
              data:
                type: string
          icon:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: 1024x1024bb.png
              uri:
                type: string
                example: https://company.jamfcloud.com/iconservlet/?id=1018&amp;scale=1
              data:
                type: string
                description: base64 encoded
          mobile_device_provisioning_profile:
            type: integer
          itunes_store_url:
            type: string
          make_available_after_install:
            type: boolean
          itunes_country_region:
            type: string
          itunes_sync_time:
            type: integer
          deployment_type:
            type: string
            enum: [Make Available in Self Service, Install Automatically/Prompt Users to Install]
          deploy_automatically:
            type: boolean
          deploy_as_managed_app:
            type: boolean
          remove_app_when_mdm_profile_is_removed:
            type: boolean
          prevent_backup_of_app_data:
            type: boolean
          keep_description_and_icon_up_to_date:
            type: boolean
          free:
            type: boolean
          take_over_management:
            type: boolean
          host_externally:
            type: boolean
          external_url:
            type: string
            example: https://itunes.apple.com/us/app/self-service-mobile/id718509958?mt=8&amp;uo=4
          site:
            $ref: '#/definitions/site_object'
        required:
          - name
          - bundle_id
          - version
      scope:
        type: object
        properties:
          all_mobile_devices:
            type: boolean
          all_jss_users:
            type: boolean
          mobile_devices:
            type: array
            items:
              type: object
              properties:
                mobile_device:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Admins iPad
                      description: Name of the device
                    udid:
                      type: string
                      example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                    wifi_mac_address:
                      type: string
                      example: E0:AC:CB:97:36:G4
          buildings:
            type: array
            items:
              type: object  
              properties:
                building:
                  $ref: '#/definitions/id_name'
          departments:
            type: array
            items:
              type: object
              properties:
                department:
                  $ref: '#/definitions/id_name'
          mobile_device_groups:
            type: array
            items:
              type: object
              properties:
                mobile_device_group:
                  $ref: '#/definitions/id_name'
          jss_users:
            type: array
            items:
              type: object
              properties:
                user:
                  $ref: '#/definitions/id_name'
          jss_user_groups:
            type: array
            items:
              type: object  
              properties:
                user_group:
                  $ref: '#/definitions/id_name'
          limitations:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object
                  properties:
                    network_segment:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              mobile_devices:
                type: array
                items:
                  type: object
                  properties:
                    mobile_device:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Johns iPad
                          description: Name of the device
                        udid:
                          type: string
                          example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                        wifi_mac_address:
                          type: string
                          example: E0:AC:CB:97:36:G4
              buildings:
                type: array
                items:
                  type: object  
                  properties:
                    building:
                      $ref: '#/definitions/id_name'
              departments:
                type: array
                items:
                  type: object  
                  properties:
                    department:
                      $ref: '#/definitions/id_name'
              mobile_device_groups:
                type: array
                items:
                  type: object
                  properties:
                    mobile_device_group:
                        $ref: '#/definitions/id_name'
              users:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Adam
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object
                  properties:
                    network_segment:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        uid:
                          type: string
                        name:
                          type: string
                          example: New York
                          description: Name of the network segment
              jss_users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              jss_user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
      self_service:
        type: object
        properties:
          self_service_description:
            type: string
          self_service_icon:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: 1024x1024bb.png
              uri:
                type: string
                example: https://company.jamfcloud.com/iconservlet/?id=1018&amp;scale=1
              data:
                type: string
                description: base64 encoded
          feature_on_main_page:
            type: boolean
          self_service_categories:
            type: array
            items:
              type: object
              properties:
                category:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Education Tools
                    display_in:
                      type: boolean
                      default: true
          notification:
            type: boolean
          notification_subject:
            type: string
            example: New App Avaialble
          notification_message:
            type: string
            example: Click here to open Self Service and install this new application!
      vpp:
        type: object
        properties:
          assign_vpp_device_based_licenses:
            type: boolean
            default: false
          vpp_admin_account_id:
            type: integer
            example: -1
      app_configuration:
        type: object
        properties:
          preferences:
            type: string
  mobile_device_applications:
    type: array
    items:
      properties:
        mobile_device_application:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Self Service Mobile
            display_name:
              type: string
              example: Self Service Mobile
            bundle_id:
              type: string
              example: com.jamfsoftware.selfservice
            version:
              type: string
              example: 9.98
            internal_app:
              type: boolean
  mobile_device_command_post:
    xml: 
      name: mobile_device_command
    type: object
    properties:
      general:
        type: object
        properties:
          command:
            type: string
            enum: [Settings, DeviceLock, EraseDevice, ClearPasscode, UnmanageDevice, UpdateInventory, ClearRestrictionsPassword, SettingsEnableDataRoaming, SettingsDisableDataRoaming, SettingsEnableVoiceRoaming, SettingsDisableVoiceRoaming, SettingsEnableAppAnalytics, SettingsDisableAppAnalytics, SettingsEnableDiagnosticSubmission, SettingsDisableDiagnosticSubmission, BlankPush, Wallpaper (supervised only), DeviceName (supervised only), ShutDownDevice (supervised only), RestartDevice (supervised only), PasscodeLockGracePeriod (shared iPad only), EnableLostMode (supervised only), DisableLostMode (supervised and in lost mode only), DeviceLocation (supervised and in lost mode only), PlayLostModeSound (supervised and in lost mode only)]
            description: Command to send device
          device_name:
            type: string
            description: Device name to set (Required for DeviceName command)
            example: Required for DeviceName command
          lock_message:
            type: string
            description: Lock message for the DeviceLock command (optional)
            example: Lock message for the DeviceLock command (optional)
          wallpaper_setting:
            type: integer
            description: Where to set wallpaper (Required for Wallpaper command.) Possible values include - 1 (Lock screen), 2 (Home screen), 3 (Lock and home screens)
            enum: [1, 2, 3]
            example: Where to set wallpaper (Required for Wallpaper command.) Possible values include - 1 (Lock screen), 2 (Home screen), 3 (Lock and home screens)
          wallpaper_id:
            type: integer
            description: ID of existing icon within Jamf Pro to use (required for Wallpaper command if wallpaper_content is not specified)
            example: ID of existing icon within Jamf Pro to use (required for Wallpaper command if wallpaper_content is not specified)
          wallpaper_content:
            type: string
            description: Wallpaper image in PNG or JPEG format, encoded using base64 (required for Wallpaper command if wallpaper_id is not specified)
            example: Wallpaper image in PNG or JPEG format, encoded using base64 (required for Wallpaper command if wallpaper_id is not specified)
          passcode_lock_grace_period:
            type: integer
            description: Number of seconds the screen must be locked before unlock attempts will require the device passcode (Required for PasscodeLockGracePeriod command)
            example: Number of seconds the screen must be locked before unlock attempts will require the device passcode (Required for PasscodeLockGracePeriod command)
          lost_mode_message:
            type: string
            description: The message to be displayed on the lost device (Required for EnableLostMode command if lost_mode_phone is not specified)
            example: The message to be displayed on the lost device (Required for EnableLostMode command if lost_mode_phone is not specified)
          lost_mode_phone:
            type: string
            description: The phone number to be displayed on the lost device (Required for EnableLostMode command if lost_mode_message is not specified)
            example: The phone number to be displayed on the lost device (Required for EnableLostMode command if lost_mode_message is not specified)
          lost_mode_footnote:
            type: string
            description: The footnote to be displayed for the EnableLostMode command (optional)
            example: The footnote to be displayed for the EnableLostMode command (optional)
          always_enforce_lost_mode:
            type: boolean
            default: true
            description: Whether Lost Mode should be enabled after the device is wiped and re-enrolled (optional, but defaults to true)
            example: Whether Lost Mode should be enabled after the device is wiped and re-enrolled (optional, but defaults to true)
          lost_mode_with_sound:
            type: boolean
            default: false
            description: Whether to play a sound on the device when the EnableLostMode command is sent (optional)
            example: Whether to play a sound on the device when the EnableLostMode command is sent (optional)
          preserve_data_plan:
            type: boolean
            description: Whether the data plan should be preserved when issuing the EraseDevice command (optional)
            example: Whether the data plan should be preserved when issuing the EraseDevice command (optional)
          disallow_proximity_setup:
            type: boolean
            description: If true, on the next reboot Proximity Setup is not allowed and the pane in Setup Assistant will be skipped. Defaults to false.
            default: false
            example: If true, on the next reboot Proximity Setup is not allowed and the pane in Setup Assistant will be skipped. Defaults to false.
          e_sim_server_url:
            type: string
            description: The carrier's eSIM server URL to query. This URL is obtained from each carrier separately.
            example: https://support.apple.com/en-us/HT209096
        required:
           - command
      mobile_devices:
        type: object
        properties:
          mobile_device:
            type: object
            properties:
              id:
                type: integer
                example: 1
            required:
              - id
  mobile_device_command:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          command:
            type: string
            example: ClearPasscode
          udid:
            type: string
            example: be597b7d-d0a4-42e6-ab98-18d1fd0c5640
          uuid:
            type: string
            example: be597b7d-d0a4-42e6-ab98-18d1fd0c5640
          profile_id:
            type: integer
          date_sent:
            type: string
            example: 2017-07-07 18:37:04
          date_sent_epoch:
            type: string
            example: 1499470624555
          date_sent_utc:
            type: string
            example: 2017-07-07T18:37:04.555-0500
          apns_result_status:
            type: string
            example: Acknowledged
          profile_udid:
            type: string
      mobile_devices:
        type: object
        properties:
          size:
            $ref: '#/definitions/size'
          mobile_device:
            type: object
            properties:
              id:
                type: integer
                example: 1
              udid:
                type: string
                example: 270aae10800b6e61a2ee2bbc285eb967050b5984
              serial_number:
                type: string
                example: F19QMFBYFRY7
              phone_number:
                type: string
                example: 123-555-6789
              wifi_mac_address:
                type: string
                example: E0:AC:CB:97:36:G4
  mobile_device_commands:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        mobile_device_command:
          type: object
          properties:
            id:
              type: integer
              example: 1
            command:
              type: string
              example: ClearPasscode
            udid:
              type: string
              example: be597b7d-d0a4-42e6-ab98-18d1fd0c5640
            profile_id:
              type: integer
        mobile_devices:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            mobile_device:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                udid:
                  type: string
                  example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                serial_number:
                  type: string
                  example: F19QMFBYFRY7
                phone_number:
                  type: string
                  example: 123-555-6789
                wifi_mac_address:
                  type: string
                  example: E0:AC:CB:97:36:G4
  mobile_device_configuration_profile:
    type: object
    xml:
      name: configuration_profile
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Corporate Wireless
            description: Name of the configuration profile
          description:
            type: string
          level:
            type: string
            enum: [System, User]
            description: Level of the configuration profile
            default: System
          site:
            $ref: '#/definitions/site_object'
          category:
            $ref: '#/definitions/category_object'
          uuid:
            type: string
            example: 55900BDC-347C-58B1-D249-F32244B11D30
          deployment_method:
            type: string
            enum: [Install Automatically, Make Available in Self Service]
          redeploy_on_update:
            type: string
            example: Newly Assigned
          redeploy_Dayss_before_certificate_expires:
            type: integer
          payloads:
            type: string
        required:
          - name
      scope:
        type: object
        properties:
          all_mobile_devices:
            type: boolean
          all_jss_users:
            type: boolean
          mobile_devices:
            type: array
            items:
              type: object
              properties:
                mobile_device:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Admins iPad
                      description: Name of the device
                    udid:
                      type: string
                      example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                    wifi_mac_address:
                      type: string
                      example: E0:AC:CB:97:36:G4
          buildings:
            type: array
            items:
              type: object  
              properties:
                building:
                  $ref: '#/definitions/id_name'
          departments:
            type: array
            items:
              type: object
              properties:
                department:
                  $ref: '#/definitions/id_name'
          mobile_device_groups:
            type: array
            items:
              type: object
              properties:
                mobile_device_group:
                  $ref: '#/definitions/id_name'
          jss_users:
            type: array
            items:
              type: object
              properties:
                user:
                  $ref: '#/definitions/id_name'
          jss_user_groups:
            type: array
            items:
              type: object  
              properties:
                user_group:
                  $ref: '#/definitions/id_name'
          limitations:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object
                  properties:
                    network_segment:
                      $ref: '#/definitions/id_name'
              ibeacons:
                type: array
                items:
                  type: object
                  properties:
                    ibeacon:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              mobile_devices:
                type: array
                items:
                  type: object
                  properties:
                    mobile_device:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Johns iPad
                          description: Name of the device
                        udid:
                          type: string
                          example: 270aae10800b6e61a2ee2bbc285eb967050b5984
                        wifi_mac_address:
                          type: string
                          example: E0:AC:CB:97:36:G4
              buildings:
                type: array
                items:
                  type: object  
                  properties:
                    building:
                      $ref: '#/definitions/id_name'
              departments:
                type: array
                items:
                  type: object  
                  properties:
                    department:
                      $ref: '#/definitions/id_name'
              mobile_device_groups:
                type: array
                items:
                  type: object
                  properties:
                    mobile_device_group:
                        $ref: '#/definitions/id_name'
              users:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Adam
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object
                  properties:
                    network_segment:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        uid:
                          type: string
                        name:
                          type: string
                          example: New York
                          description: Name of the network segment
              ibeacons:
                type: array
                items:
                  type: object
                  properties:
                    ibeacon:
                      $ref: '#/definitions/id_name'
              jss_users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              jss_user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
      self_service:
        type: object
        properties:
          self_service_description:
            type: string
            example: Install this profile to access resources on the corporate network
          security_name:
            xml:
              name: security
            type: object
            properties:
              removal_disallowed:
                type: string
                example: Never
          self_service_icon:
            type: object
            properties:
              filename:
                type: string
                example: WiFi.png
              uri:
                type: string
                example: https://company.jamfcloud.com/iconservelet/?id=1
              data:
                type: string
          feature_on_main_page:
            type: boolean
          self_service_categories:
            type: array
            items:
              properties:
                category:
                  $ref: '#/definitions/category'
  mobile_device_configuration_profiles:
    xml:
      name: configuration_profiles
    type: array
    items:
      properties:
        configuration_profile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Corporate Wireless
              description: Name of the configuration profile
  mobile_device_enrollment_profile:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Configurator Enrollment Profile
            description: Name of the enrollment profile
          invitation:
            type: string
            example: 209380278933254867453360473540460311869
          udid:
            type: string
            example: 55900BDC-347C-58B1-D249-F32244B11D30
          description:
            type: string
        required:
          - name
      location:
        $ref: '#/definitions/location'
      purchasing:
        $ref: '#/definitions/purchasing'
      attachments:
        type: array
        items:
          properties:
            attachment:
              $ref: '#/definitions/attachment'
  mobile_device_enrollment_profile_post:
    type: object
    xml:
      name: mobile_device_enrollment_profile
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
            example: Configurator Enrollment Profile
            description: Name of the enrollment profile
          invitation:
            type: string
            example: 209380278933254867453360473540460311869
          udid:
            type: string
            example: 55900BDC-347C-58B1-D249-F32244B11D30
          description:
            type: string
        required:
          - name
  mobile_device_enrollment_profiles:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        mobile_device_enrollment_profile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Configurator Enrollment Profile
              description: Name of the enrollment profile
            invitation:
              type: string
              example: 209380278933254867453360473540460311869
  mobile_device_extension_attribute:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Asset Selector
      description:
        type: string
      date_type:
        type: string
        enum: [String, Date, Integer]
        default: String
      input_type:
        type: object
        properties:
          type:
            type: string
            enum: [Text Field, Pop-up Menu, LDAP Attribute Mapping]
            default: Text Field
      inventory_display:
        type: string
        enum: [General, Hardware, User and Location, Purchasing, Extension Attributes]
        default: General
    required:
      - name
  mobile_device_extension_attributes:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        mobile_device_extension_attribute:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Asset Selector
  mobile_device_group:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: iPhones
      is_smart:
        type: boolean
      criteria:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            criterion:
              $ref: '#/definitions/criterion'
      site:
        $ref: '#/definitions/site_object'
      mobile_devices:
        type: array
        items:
          properties:
            mobile_device:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Shawns iPhone
                  description: Name of the device
                mac_address:
                  type: string
                  example: E0:AC:CB:97:36:G4
                udid:
                  type: string
                  example: 55900BDC-347C-58B1-D249-F32244B11D30
                wifi_mac_address:
                  type: string
                  example: E0:AC:CB:97:36:G4
                serial_number:
                  type: string
                  example: C02Q7KHTGFWF
    required:
      - name
      - is_smart
  mobile_device_groups:
    type: array
    items:
      properties:
        mobile_device_group:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: iOS 9 Devices
            is_smart:
              type: boolean
  mobile_device_history:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Jesses iPad
            description: Name of the device
          udid:
            type: string
            example: 270aae10800b6e61a2ee2bbc285eb967050b5984
          serial_number:
            type: string
            example: C02Q7KHTGFWF
          mac_address:
            type: string
            example: E0:AC:CB:97:36:G4
      management_commands:
        type: object
        properties:
          completed:
            type: array
            items:
              properties:
                command:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Profile List
                    date_time_completed: 
                      type: string
                      example: 2017/09/19 at 1:02 PM
                    date_time_completed_epoch:
                      type: integer
                      example: 1505844136509
          pending:
            type: array
            items:
              properties:
                command:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Profile List
                    date_time_issued: 
                      type: string
                      example: 2017/09/19 at 1:02 PM
                    date_time_issued_epoch:
                      type: string
                      example: 1505844136509
                    date_time_failed:
                      type: string
                    date_time_failed_epoch:
                      type: integer
                      example: 0
          failed:
            type: array
            items:
              properties:
                command:
                  type: object
                  properties:
                    name:
                      type: string
                      example: DeviceLocation
                    date_time_issued: 
                      type: string
                      example: 2017/09/19 at 1:02 PM
                    date_time_issued_epoch:
                      type: string
                      example: 1505844136509
                    date_time_failed:
                      type: string
                    date_time_failed_epoch:
                      type: integer
                      example: 0
                    error:
                      type: string
                      example: The location of the device could not be determined.
      user_location:
        type: array
        items:
          properties:
            location:
              type: object
              properties:
                date_time:
                  type: string
                  example: 2017/09/19 at 1:02 PM
                date_time_epoch:
                  type: integer
                  example: 1505844136509
                username:
                  type: string
                  example: AHarrison
                full_name:
                  type: string
                  example: Ashley Harrison
                email_address:
                  type: string
                  example: ashley.harrison@company.com
                phone_number:
                  type: string
                  example: 555-555-5555
                department:
                  type: string
                  example: Information Technology
                building:
                  type: string
                  example: Block D
                room:
                  type: string
                  example: 287
                position:
                  type: string
                  example: Chief of Chiefs
      audits:
        type: array
        items:
          properties:
            audit:
              type: object
              properties:
                event:
                  type: string
                  example: Viewed Activation Lock Bypass Code
                username:
                  type: string
                  example: Jamf Pro Admin
                date_time:
                  type: string
                  example: 2017/09/19 at 1:02 PM
                date_time_epoch:
                  type: integer
                  example: 1505844136509
      applications:
        type: object
        properties:
          installed:
            type: array
            items:
              properties:
                in_house_from_mobile_device_app_catalog:
                  $ref: '#/definitions/mobile_device_history_app'
                app_store_from_mobile_device_app_catalog:
                  $ref: '#/definitions/mobile_device_history_app'
                other:
                  $ref: '#/definitions/mobile_device_history_app'
          pending:
            type: array
            items:
              properties:
                app:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Angry Birds
                    version:
                      type: string
                      example: 1.0.0
                    management_status:
                      type: string
                      example: Pending
          failed:
            type: array
            items:
              properties:
                app:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Angry Birds
                    version:
                      type: string
                      example: 1.0.0
                    management_status:
                      type: string
                      example: Failed
      ebooks:
        type: object
        properties:
          installed:
            type: object
            properties:
              inhouse:
                type: array
                items:
                  properties:
                    title:
                      type: string
                      example: iPhone Users Guide for iOS 11.2
                    author:
                      type: string
                      example: Apple Inc.
                    version:
                      type: string
                      example: 1.0.0
                    kind:
                      type: string
                    management_status:
                      type: string
                      example: Managed
              ibookstore:
                type: array
                items:
                  properties:
                    title:
                      type: string
                      example: iPhone Users Guide for iOS 11.2
                    author:
                      type: string
                      example: Apple Inc.
                    version:
                      type: string
                      example: 1.0.0
                    kind:
                      type: string
                    management_status:
                      type: string
                      example: Managed
          pending:
            type: array
            items:
              properties:
                title:
                  type: string
                  example: iPhone Users Guide for iOS 11.2
                author:
                  type: string
                  example: Apple Inc.
                version:
                  type: string
                  example: 1.0.0
                kind:
                  type: string
                management_status:
                  type: string
                  example: Managed
          failed:
            type: array
            items:
              properties:
                title:
                  type: string
                  example: iPhone Users Guide for iOS 11.2
                author:
                  type: string
                  example: Apple Inc.
                version:
                  type: string
                  example: 1.0.0
                kind:
                  type: string
                management_status:
                  type: string
                  example: Managed
  mobile_device_history_app:
    xml:
      name: app
    type: object
    properties:
      name:
        type: string
        example: Self Service Mobile
      version:
        type: string
        example: 10.1.1
      management_status:
        type: string
        enum: [Unmanaged, Managed]
      bundle_size:
        type: string
        example: 3 MB
      dynamic_size:
        type: string
        example: 12 KB
  mobile_device_invitation:
    type: object
    properties:
      id:
        type: integer
        example: 1
      invitation:
        type: integer
        example: 72496637217353185994315270701967709089
        readOnly: true
      sent_to:
        type: string
        example: user@company.com
        readOnly: true
      sent_from:
        type: string
        example: Jamf Pro
        readOnly: true
      reply_to:
        type: string
        example: it@company.com
        readOnly: true
      subject:
        type: string
        example: Enroll your device
        readOnly: true
      message:
        type: string
      username:
        type: string
      last_action:
        type: string
        example: NONE
        readOnly: true
      invitation_type:
        type: string
        example: USER_INITATIED_EMAIL
        default: USER_INITIATED_URL
      login_required:
        type: boolean
        default: true
      multiple_uses_allowed:
        type: boolean
        default: false
      date_sent:
        type: string
        example: 2012-05-07 11:13:35
        readOnly: true
      date_sent_utc:
        type: string
        example: 2012-05-07T11:13:35.609-0500
        readOnly: true
      date_sent_epoch:
        type: integer
        example: 1336407215609
        readOnly: true
      expiration_date:
        type: string
        description: Use 'Unlimited' to specify no expiration
        example: 2012-05-07 11:13:35
        default: Unlimited
      expiration_date_utc:
        type: string
        example: 2012-05-07T11:13:35.609-0500
        readOnly: true
      expiration_date_epoch:
        type: integer
        example: 1336407215609
        readOnly: true
      enrolled_into_site:
        type: object
        properties:
          id:
            type: integer
            default: -1
          name:
            type: string
            default: None
      keep_existing_site_membership:
        type: boolean
        default: false
      target_ios:
        type: string
        example: iOS 4
      site:
        $ref: '#/definitions/site_object'
  mobile_device_invitation_post:
    type: object
    properties:
      id:
        type: integer
        example: 1
      invitation:
        type: integer
        example: 72496637217353185994315270701967709089
        readOnly: true
      sent_to:
        type: string
        example: user@company.com
        readOnly: true
      sent_from:
        type: string
        example: Jamf Pro
        readOnly: true
      reply_to:
        type: string
        example: it@company.com
        readOnly: true
      subject:
        type: string
        example: Enroll your device
        readOnly: true
      message:
        type: string
      username:
        type: string
      last_action:
        type: string
        example: NONE
        readOnly: true
      invitation_type:
        type: string
        example: USER_INITATIED_EMAIL
        default: USER_INITIATED_URL
      require_login:
        type: boolean
        default: true
      allow_multiple_uses:
        type: boolean
        default: false
      date_sent:
        type: string
        example: 2012-05-07 11:13:35
        readOnly: true
      date_sent_utc:
        type: string
        example: 2012-05-07T11:13:35.609-0500
        readOnly: true
      date_sent_epoch:
        type: integer
        example: 1336407215609
        readOnly: true
      expiration_date:
        type: string
        description: Use 'Unlimited' to specify no expiration
        example: 2012-05-07 11:13:35
        default: Unlimited
      expiration_date_utc:
        type: string
        example: 2012-05-07T11:13:35.609-0500
        readOnly: true
      expiration_date_epoch:
        type: integer
        example: 1336407215609
        readOnly: true
      enrolled_into_site:
        type: object
        properties:
          id:
            type: integer
            default: -1
          name:
            type: string
            default: None
      keep_existing_site_membership:
        type: boolean
        default: false
      target_ios:
        type: string
        example: iOS 4
      site:
        $ref: '#/definitions/site_object'
  mobile_device_invitations:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        mobile_device_invitation:
          type: object
          properties:
            id:
              type: integer
              example: 1
            invitation:
              type: integer
              example: 72496637217353185994315270701967709089
            invitation_type:
              type: string
              example: USER_INITATIED_EMAIL
            last_action:
              type: string
              example: NONE
            expiration_date:
              type: string
              example: 2012-05-07 11:13:35
            expiration_date_utc:
              type: string
              example: 2012-05-07T11:13:35.609-0500
            expiration_date_epoch:
              type: integer
              example: 1336407215609
  mobile_device_provisioning_profiles:
    type: array
    items:
      type: object
      properties:
        size:
          $ref: '#/definitions/size'
        mobile_device_provisioning_profile:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: in-house app profile
            display_name:
              type: string
              example: in-house app profile
            uuid:
              type: string
              example: 116AF1E6-7EB5-4335-B598-276CDE5E015B
  mobile_device_provisioning_profile:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: in-house app profile
          display_name:
            type: string
            example: in-house app profile
          uuid:
            type: string
            example: 116AF1E6-7EB5-4335-B598-276CDE5E015B
  mobile_devices:
    type: array
    items:
      properties:
        mobile_device:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Kathys iPhone
            device_name:
              type: string
              example: Kathys iPhone
            udid:
              type: string
              example: 270aae10800b6e61a2ee2bbc285eb967050b5984
            serial_number:
              type: string
              example: C02Q7KHTGFWF
            phone_number:
              type: string
              example: 123-555-6789
            wifi_mac_address:
              type: string
              example: E0:AC:CB:97:36:G4
            managed:
              type: boolean
            supervised:
              type: boolean
            model:
              type: string
              example: iPhone 6S
            model_identifier:
              type: string
              example: iPhone8,1
            model_display:
              type: string
              example: MKRY2LL
            username:
              type: string
              example: Kathy
  network_segment:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Amsterdam Office
        description: Name of the network segment
      starting_address:
        type: string
        example: 10.1.1.1
      ending_address:
        type: string
        example: 10.10.1.1
      distribution_server:
        type: string
      distribution_point:
        type: string
      url:
        type: string
      swu_server:
        type: string
      building:
        type: string
      department:
        type: string
      override_buildings:
        type: boolean
        default: false
      override_departments:
        type: boolean
        default: false
    required:
      - name
      - starting_address
      - ending_address
  network_segment_post:
    type: object
    xml:
      name: network_segment
    properties:
      id:
        type: integer
      name:
        type: string
        example: Amsterdam Office
        description: Name of the network segment
      starting_address:
        type: string
        example: 10.1.1.1
      ending_address:
        type: string
        example: 10.10.1.1
      override_buildings:
        type: boolean
        default: false
      override_departments:
        type: boolean
        default: false
    required:
      - name
      - starting_address
      - ending_address
  network_segments:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        network_segment:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Amsterdam Office
              description: Name of the network segment
            starting_address:
              type: string
              example: 10.1.1.1
            ending_address:
              type: string
              example: 10.10.1.1
  os_x_configuration_profile:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Corporate Wireless
            description: Name of the configuration profile
          description:
            type: string
          site:
            $ref: '#/definitions/site_object'
          category:
            $ref: '#/definitions/category_object'
          distribution_method:
            type: string
            enum: [Install Automatically, Make Available in Self Service]
          user_removable:
            type: boolean
          level:
            type: string
            enum: [computer, user]
          uuid:
            type: string
            example: 88F8C1DB-D92A-4D10-95FB-CE7EDE82B93E
          redeploy_on_update:
            type: string
            example: Newly Assigned
          payloads:
            type: string
        required:
          - name
      scope:
        type: object
        properties:
          all_computers:
            type: boolean
            default: false
          all_jss_users:
            type: boolean
            default: false
          computers:
            type: array
            items:
              type: object
              properties:
                computer:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Admins MacBook Pro
                      description: Name of the computer
                    udid:
                      type: string
                      example: 55900BDC-347C-58B1-D249-F32244B11D30
          buildings:
            type: array
            items:
              type: object  
              properties:
                building:
                  $ref: '#/definitions/id_name'
          departments:
            type: array
            items:
              type: object
              properties:
                department:
                  $ref: '#/definitions/id_name'
          computer_groups:
            type: array
            items:
              type: object
              properties:
                computer_group:
                  $ref: '#/definitions/id_name'
          jss_users:
            type: array
            items:
              type: object
              properties:
                users:
                  $ref: '#/definitions/id_name'
          jss_user_groups:
            type: array
            items:
              type: object
              properties:
                jss_user_group:
                  $ref: '#/definitions/id_name'
          limitations:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object  
                  properties:
                    network_segment:
                      $ref: '#/definitions/id_name'
              ibeacons:
                type: array
                items:
                  type: object  
                  properties:
                    ibeacon:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              computers:
                type: array
                items:
                  type: object
                  properties:
                    computer:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Johns iMac
                          description: Name of the computer
                        udid:
                          type: string
                          example: 55900BDC-347C-58B1-D249-F32244B11D30
              buildings:
                type: array
                items:
                  type: object  
                  properties:
                    building:
                      $ref: '#/definitions/id_name'
              departments:
                type: array
                items:
                  type: object  
                  properties:
                    department:
                      $ref: '#/definitions/id_name'
              computer_groups:
                type: array
                items:
                  type: object
                  properties:
                    computer_group:
                      $ref: '#/definitions/id_name'
              users:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Adam
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object
                  properties:
                    network_segment:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        uid:
                          type: string
                        name:
                          type: string
                          example: New York
                          description: Name of the network segment
              ibeacons:
                type: array
                items:
                  type: object  
                  properties:
                    ibeacon:
                      $ref: '#/definitions/id_name'
              jss_users:
                type: array
                items:
                  type: object  
                  properties:
                    jss_user:
                      $ref: '#/definitions/id_name'
              jss_user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    jss_user_group:
                      $ref: '#/definitions/id_name'
      self_service:
        type: object
        properties:
          install_button_text:
            type: string
            example: Install
          self_service_description:
            type: string
          force_users_to_view_description:
            type: boolean
          self_service_icon:
            type: object
            properties:
              id:
                type: integer
                example: 1
              uri:
                type: string
                example: https://company.jamfcloud.com/iconservlet/?id=1
              data:
                type: string
          feature_on_main_page:
            type: boolean
          self_service_categories:
            type: object
            properties:
              category:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Compliance
                  display_in:
                    type: boolean
                    default: true
                  feature_in:
                    type: boolean
                    default: false
          notification:
            type: string
          notification_subject:
            type: string
            example: Install Me!!!
          notification_message:
            type: string
            example: You need access to corporate resources. Install this profile to get the premium WiFis.
  os_x_configuration_profiles:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        os_x_configuration_profile:
          $ref: '#/definitions/id_name'
  package:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Firefox.dmg
        description: Name of the package
      category:
        type: string
        example: Unknown
      filename:
        type: string
        example: Firefox.dmg
      info:
        type: string
      notes:
        type: string
      priority:
        type: integer
        example: 5
      reboot_required:
        type: boolean
      fill_user_template:
        type: boolean
      fill_existing_users:
        type: boolean
      allow_uninstalled:
        type: boolean
      os_requirements:
        type: string
      required_processor:
        type: string
        enum: [None, ppc, x86]
        default: None
      switch_with_package:
        type: string
        example: Do Not Install
      install_if_reported_available:
        type: boolean
      reinstall_option:
        type: string
        example: Do Not Reinstall
      triggering_files:
        type: string
      send_notification:
        type: boolean
    required:
      - name
      - filename
  packages:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        package:
          $ref: '#/definitions/id_name'
  patch_available_titles:
    type: object
    properties:
      size:
        $ref: '#/definitions/size'
      available_titles:
        type: array
        items:
          properties:
            available_title:
              type: object
              properties:
                name_id:
                  type: string
                  example: GoogleChrome
                current_version:
                  type: string
                  example: 65.0.3325.181
                publisher:
                  type: string
                  example: Google
                last_modified:
                  type: string
                  example: 2018-03-20T22:00:09:000Z
                app_name:
                  type: string
                  example: Google Chrome
  patch_external_source:
    type: object
    properties:
      host_name:
        type: string
        example: patch.url.com/v1
      ssl_enabled:
        type: boolean
        default: true
      port:
        type: integer
      id:
        type: integer
        example: 2
      name:
        type: string
        example: Company Currated Patches
    required:
      - name
  patch_external_sources:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        patch_external_source:
          $ref: '#/definitions/id_name'
  patch_internal_source:
    type: object
    properties:
      enabled:
        type: boolean
        example: true
      endpoint:
        type: string
        example: https://jamf-patch.jamfcloud.com/v1/
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Jamf
  patch_internal_sources:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        patch_internal_source:
          $ref: '#/definitions/id_name'
  patch_management_software_title:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Google Chrome
      name_id:
        type: string
        example: GoogleChrome
      category:
        $ref: '#/definitions/category_object'
      notifications:
        type: object
        properties:
          jss_notification:
            type: boolean
            default: true
          email_notification:
            type: boolean
            default: true
      site:
        $ref: '#/definitions/site_object'
      versions:
        type: array
        items:
          properties:
            version:
              type: object
              properties:
                software_version:
                  type: string
                  example: 64.0.3282.119
                package:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Google Chrome.dmg
                    id:
                      type: integer
                      example: 1
                      default: -1
    required:
      - name
  patch_management_software_titles:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        patch_management_software_title:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Google Chrome
            name_id:
              type: string
              example: GoogleChrome
            source_id:
              type: integer
              example: 1
  patch_policies:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        patch_policy:
          $ref: '#/definitions/id_name'
  patch_policy:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Google Chrome - 62.0.3202.75
          enabled:
            type: boolean
            example: true
          target_version:
            type: string
            example: 62.0.3202.75
          release_date:
            type: integer
            example: 1509048027663
          incremental_updates:
            type: boolean
            example: false
          reboot:
            type: boolean
          minimum_os:
            type: string
            example: 10.9
          kill_apps:
            type: array
            items:
              properties:
                kill_app:
                  type: object
                  properties:
                    kill_app_name:
                      type: string
                      example: Google Chrome.app
                    kill_app_bundle_id:
                      type: string
                      example: com.google.Chrome
          distribution_method:
            type: string
            enum: [selfservice, prompt]
          allow_downgrade:
            type: boolean
          patch_unknown:
            type: boolean
            description: Set to true to patch versions unidentified by Jamf Pro patch reporting
        required:
          - name
          - target_version
      scope:
        type: object
        properties:
          all_computers:
            type: boolean
          computers:
            type: array
            items:
              properties:
                computer:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Joe's MacBook Pro
                    udid:
                      type: string
                      example: 55900BDC-347C-58B1-D249-F32244B11D30
          computer_groups:
            type: array
            items:
              properties:
                computer_group:
                  $ref: '#/definitions/id_name'
          buildings:
            type: array
            items:
              properties:
                building:
                  $ref: '#/definitions/id_name'
          departments:
            type: array
            items:
              properties:
                department:
                  $ref: '#/definitions/id_name'
          limitations:
            type: object
            properties:
              network_segments:
                type: array
                items:
                  properties:
                    network_segment:
                      $ref: '#/definitions/id_name'
              ibeacons:
                type: array
                items:
                  properties:
                    ibeacon:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              computers:
                type: array
                items:
                  properties:
                    computer:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Joe's MacBook Pro
                        udid:
                          type: string
                          example: 55900BDC-347C-58B1-D249-F32244B11D30
              computer_groups:
                type: array
                items:
                  properties:
                    computer_group:
                      $ref: '#/definitions/id_name'
              buildings:
                type: array
                items:
                  properties:
                    building:
                      $ref: '#/definitions/id_name'
              departments:
                type: array
                items:
                  properties:
                    department:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  properties:
                    network_segment:
                      $ref: '#/definitions/id_name'
              ibeacons:
                type: array
                items:
                  properties:
                    ibeacon:
                      $ref: '#/definitions/id_name'
      user_interaction:
        type: object
        properties:
          install_button_text:
            type: string
            example: Update
          self_service_description:
            type: string
            example: Latest update for Google Chrome
          self_service_icon:
            type: object
            properties:
              id:
                type: integer
                example: 1
              filename:
                type: string
                example: Chrome.png
              uri:
                type: string
                example: https://jssURL.jamfcloud.com/iconservlet/?id=1
          notifications:
            type: object
            properties:
              notification_enabled:
                type: boolean
                example: true
              notification_type:
                type: string
                enum: [Self Service, Self Service and Notification Center]
              notification_subject:
                type: string
                example: Google Chrome Update Available
              notification_message:
                type: string
                example: An update for Google Chrome is available within Self Service
              reminders:
                type: object
                properties:
                  notification_reminders_enabled:
                    type: boolean
                    example: true
                  notification_reminder_frequency:
                    type: integer
                    example: 1
          deadlines:
            type: object
            properties:
              deadline_enabled:
                type: boolean
                example: true
              deadline_period:
                type: integer
                example: 7
          grace_period:
            type: object
            properties:
              grace_period_duration:
                type: integer
                example: 15
                description: Number of minutes to wait before automatically closing all apps required to be closed for an update
              notification_center_subject:
                type: string
                example: Important
              message:
                type: string
                example: $APP_NAMES will quit in $DELAY_MINUTES minutes so that $SOFTWARE_TITLE can be updated. Save anything you are working on and quit the app(s)
      software_title_configuration_id:
        type: integer
        example: 1
  patch_software_titles:
    type: array
    items:
      properties:
        size:
          type: integer
          example: 1
        patch_software_title:
          type: object
          properties:
            source_id:
              type: integer
              example: 1
            name_id:
              type: string
              example: GoogleChromne
            id:
              type: integer
              example: 1
  patch_software_title:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Google Chrome
      name_id:
        type: string
        example: GoogleChrome
      source_id:
        type: integer
        example: 1
      notifications:
        type: object
        properties:
          web_notification:
            type: boolean
            default: true
          email_notification:
            type: boolean
            default: true
      categories:
        $ref: '#/definitions/category_object'
      versions:
        type: array
        items:
          properties:
            version:
              type: object
              properties:
                software_version:
                  type: string
                  example: 65.0.3325.181
                package:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Google Chrome.dmg
  peripheral:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          bar_code_1:
            type: string
          bar_code_2:
            type: string
          type:
            type: string
            description: Name of the peripheral type
            example: Peripheral Type Name
          fields:
            type: array
            items:
              properties:
                field:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Peripheral Field Name
                    value:
                      type: string
                      example: Value for menu type
        required:
          - type
      location:
        $ref: '#/definitions/location'
      purchasing:
        $ref: '#/definitions/purchasing'
      attachments:
        type: array
        items:
          properties:
            attachment:
              $ref: '#/definitions/attachment'
  peripheral_post:
    type: object
    xml:
      name: peripheral
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
          bar_code_1:
            type: string
          bar_code_2:
            type: string
          type:
            type: string
            description: Name of the peripheral type
            example: Peripheral Type Name
          fields:
            type: object
            properties:
              field:
                type: object
                properties:
                  name:
                    type: string
                    example: Peripheral Field Name
                  value:
                    type: string
                    example: Value for menu type
        required:
          - type
  patch_report:
    type: object
    properties:
      name:
        type: string
        example: Google Chrome
      patch_software_title_id:
        type: string
        example: 1
      total_computers:
        type: integer
        example: 1
      total_versions:
        type: integer
        example: 1
      versions:
        type: array
        items:
          properties:
            version:
              type: object
              properties:
                software_version:
                  type: string
                  example: 65.0.3325.181
                computers:
                  type: array
                  items:
                    properties:
                      size:
                        type: integer
                        example: 1
                      computer:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Admins MacBook Pro
  peripherals:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        peripheral:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
            type:
              type: string
            bar_code_1:
              type: string
            bar_code_2:
              type: string
            computer_id:
              type: integer
              example: -1
  peripheral_type:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Peripheral Type Name
      fields:
        type: array
        items:
          properties:
            field:
              type: object
              properties:
                name:
                  type: string
                  example: Peripheral Field Name
                order:
                  type: integer
                  example: 1
                type:
                  type: string
                  enum: [menu, text]
                choices:
                  type: array
                  items:
                    properties:
                      choice:
                        type: string
                        example: Value for menu type
    required:
      - name
  peripheral_types:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        peripheral_type:
          $ref: '#/definitions/id_name'
  policy:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Disk Encryption
          enabled:
            type: boolean
          trigger:
            type: string
          trigger_checkin:
            type: boolean
            default: false
          trigger_enrollment_complete:
            type: boolean
            default: false
          trigger_login:
            type: boolean
            default: false
          trigger_logout:
            type: boolean
            default: false
          trigger_network_state_changed:
            type: boolean
            default: false
          trigger_startup:
            type: boolean
            default: false
          trigger_other:
            type: string
          frequency:
            type: string
            enum: [Once per computer, Once per user per computer, Once per user, Once every day, Once every week, Once every month, Ongoing]
          retry_event:
            type: string
            enum: [none, trigger, check-in]
            default: none
          retry_attempts:
            type: integer
            default: -1
          notify_on_each_failed_retry:
            type: boolean
            default: false
          location_user_only:
            type: boolean
          target_drive:
            type: string
            example: /
          offline:
            type: boolean
          category:
            $ref: '#/definitions/category_object'
          date_time_limitations:
            type: object
            properties:
              activation_date:
                type: string
                example: 2017-07-07 18:37:04
              activation_date_epoch:
                type: integer
                example: 1499470624555
              activation_date_utc:
                type: string
                example: 2017-07-07T18:37:04.555-0500
              expiration_date:
                type: string
                example: 2017-07-07 18:37:04
              expiration_date_epoch:
                type: integer
                example: 1499470624555
              expiration_date_utc:
                type: string
                example: 2017-07-07T18:37:04.555-0500
              no_execute_on:
                type: object
                properties:
                  day:
                    type: string
                    enum: [Sun, Mon, Tue, Wed, Thu, Fri, Sat]
              no_execute_start:
                type: string
                example: 2:00 AM
              no_execute_end:
                type: string
                example: 4:00 AM
          network_limitations:
            type: object
            properties:
              minimum_network_connection:
                type: string
                enum: [No Minimum, Ethernet]
              any_ip_address:
                type: boolean
          override_default_settings:
            type: object
            properties:
              target_drive:
                type: string
              distribution_point:
                type: string
              force_afp_smb:
                type: boolean
              sus:
                type: string
          network_requirements:
            type: string
            enum: [Any, Ethernet]
          site:
            $ref: '#/definitions/site_object'
        required:
          - name
      scope:
        type: object
        properties:
          all_computers:
            type: boolean
            default: false
          computers:
            type: array
            items:
              type: object
              properties:
                computer:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Admins MacBook Pro
                      description: Name of the computer
                    udid:
                      type: string
                      example: 55900BDC-347C-58B1-D249-F32244B11D30
          computer_groups:
            type: array
            items:
              type: object
              properties:
                computer_group:
                  $ref: '#/definitions/id_name'
          buildings:
            type: array
            items:
              type: object  
              properties:
                building:
                  $ref: '#/definitions/id_name'
          departments:
            type: array
            items:
              type: object
              properties:
                department:
                  $ref: '#/definitions/id_name'
          limit_to_users:
            type: object
            properties:
              user_groups:
                type: array
                items:
                  properties:
                    user_group:
                      type: string
                      example: Teachers
          limitations:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object  
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object  
                  properties:
                    network_segment:
                      $ref: '#/definitions/id_name'
              ibeacons:
                type: array
                items:
                  type: object  
                  properties:
                    ibeacon:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              computers:
                type: array
                items:
                  type: object
                  properties:
                    computer:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Johns iMac
                          description: Name of the computer
                        udid:
                          type: string
                          example: 55900BDC-347C-58B1-D249-F32244B11D30
              computer_groups:
                type: array
                items:
                  type: object
                  properties:
                    computer_group:
                      $ref: '#/definitions/id_name'
              buildings:
                type: array
                items:
                  type: object  
                  properties:
                    building:
                      $ref: '#/definitions/id_name'
              departments:
                type: array
                items:
                  type: object  
                  properties:
                    department:
                      $ref: '#/definitions/id_name'
              users:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Adam
              user_groups:
                type: array
                items:
                  type: object  
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              network_segments:
                type: array
                items:
                  type: object
                  properties:
                    network_segment:
                      type: object
                      properties:
                        id:
                          type: integer
                        uid:
                          type: string
                        name:
                          type: string
                          example: New York
                          description: Name of the network segment
              ibeacons:
                type: array
                items:
                  type: object  
                  properties:
                    ibeacon:
                      $ref: '#/definitions/id_name'
      self_service:
        type: object
        properties:
          use_for_self_service:
            type: boolean
            default: false
          self_service_display_name:
            type: string
            example: Disk Encryption
          install_button_text:
            type: string
            example: Encrypt
          re-install_button_text:
            type: string
            example: Re-encrypt
          self_service_description:
            type: string
            example: Encrypt the boot drive of this device
          force_users_to_view_description:
            type: boolean
            default: false
          self_service_icon:
            type: object
            properties:
              id:
                type: integer
                example: 1
              filename:
                type: string
                example: Encryption.png
              uri:
                type: string
                example: https://jssURL.jamfcloud.com/iconservlet/?id=1
          feature_on_main_page:
            type: boolean
            default: false
          self_service_categories:
            type: object
            properties:
              category:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  name:
                    type: string
                    example: Compliance
                  display_in:
                    type: boolean
                    default: true
                  feature_in:
                    type: boolean
                    default: false
      package_configuration:
        type: object
        properties:
          packages:
            type: array
            items:
              properties:
                size:
                  $ref: '#/definitions/size'
                package:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Firefox.dmg
                    action:
                      type: string
                      enum: [Install, Cache, Install Cached]
                    fut:
                      type: boolean
                    feu:
                      type: boolean
                    update_autorun:
                      type: boolean
      scripts:
        type: object
        properties:
          size:
            $ref: '#/definitions/size'
          script:
            type: array
            items:
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: mountNetworkShare.sh
                priority:
                  type: string
                  enum: [Before, After]
                parameter4:
                  type: string
                parameter5:
                  type: string
                parameter6:
                  type: string
                parameter7:
                  type: string
                parameter8:
                  type: string
                parameter9:
                  type: string
                parameter10:
                  type: string
                parameter11:
                  type: string
      printers:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            leave_existing_default:
              type: string
            printer:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Kyocera
                action:
                  type: string
                  enum: [install, uninstall]
                make_default:
                  type: boolean
      dock_items:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            dock_item:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Safari
                action:
                  type: string
                  enum: [Add To Beginning, Add To End, Remove]
      account_maintenance:
        type: object
        properties:
          accounts:
            type: array
            items:
              properties:
                size:
                  $ref: '#/definitions/size'
                account:
                  type: object
                  properties:
                    action:
                      type: string
                      enum: [Create, Reset, Delete, DisableFileVault]
                    username:
                      type: string
                      example: admin
                    realname:
                      type: string
                      example: Administrator
                    password:
                      type: string
                    archive_home_directory:
                      type: boolean
                    archive_home_directory_to:
                      type: string
                      example: /Users/Deleted Users/admin.dmg
                    home:
                      type: string
                      example: /Users/admin
                    picture:
                      type: string
                      example: /Library/User Pictures/Animals/Eagle.tif
                    admin:
                      type: boolean
                    filevault_enabled:
                      type: boolean
          directory_bindings:
            type: array
            items:
              properties:
                size:
                  $ref: '#/definitions/size'
                binding:
                  $ref: '#/definitions/id_name'
          management_account:
            type: object
            properties:
              action:
                type: string
                enum: [rotate, doNotChange]
              managed_password:
                type: string
              managed_password_length:
                type: integer
                example: 8
                description: Only necessary when utilizing the random action
          open_firmware_efi_password:
            type: object
            properties:
              of_mode:
                type: string
                enum: [command, none]
              of_password:
                type: string
      maintenance:
        type: object
        properties:
          recon:
            type: boolean
          reset_name:
            type: boolean
          install_all_cached_packages:
            type: boolean
          heal:
            type: boolean
          prebindings:
            type: boolean
          permissions:
            type: boolean
          byhost:
            type: boolean
          system_cache:
            type: boolean
          user_cache:
            type: boolean
          verify:
            type: boolean
      files_processes:
        type: object
        properties:
          search_by_path:
            type: string
            example: /Applications/appName.app
          delete_file:
            type: boolean
          locate_file:
            type: string
            example: /Library/Fonts/testFont.ttc
          update_locate_database:
            type: boolean
          spotlight_search:
            type: string
            example: Screenshot.pdf
          search_for_process:
            type: string
            example: processName
          kill_process:
            type: boolean
          run_command:
            type: string
            example: echo "foobar"
      user_interaction:
        type: object
        properties:
          message_start:
            type: string
            example: Policy is begining execution
          allow_user_to_defer:
            type: boolean
          allow_deferral_until_utc:
            type: string
            example: 2019-01-01T01:00:00.000-0600
          allow_deferral_minutes:
            type: integer
            example: 0
          message_finish:
            type: string
            example: Policy completed
      disk_encryption:
        type: object
        properties:
          action:
            type: string
            enum: [apply, remediate]
          disk_encryption_configuration_id:
            type: integer
            example: 1
          auth_restart:
            type: boolean
          remediate_key_type:
            type: string
            enum: [Individual, Institutional, Individual And Institutional]
          remediate_disk_encryption_configuration_id:
            type: integer
            example: 1
            description: disk encryption ID to utilize for remediating institutional recovery key types.
  policy_post:
    type: object
    xml:
      name: policy
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
            example: Disk Encryption
          enabled:
            type: boolean
          trigger:
            type: string
          trigger_checkin:
            type: boolean
            default: false
          trigger_enrollment_complete:
            type: boolean
            default: false
          trigger_login:
            type: boolean
            default: false
          trigger_logout:
            type: boolean
            default: false
          trigger_network_state_changed:
            type: boolean
            default: false
          trigger_startup:
            type: boolean
            default: false
          trigger_other:
            type: string
          frequency:
            type: string
            enum: [Once per computer, Once per user per computer, Once per user, Once every day, Once every week, Once every month, Ongoing]
          location_user_only:
            type: boolean
            default: false
          target_drive:
            type: string
            example: /
          offline:
            type: boolean
            default: false
          category:
            $ref: '#/definitions/category_object'
          network_limitations:
            type: object
            properties:
              minimum_network_connection:
                type: string
                enum: [No Minimum, Ethernet]
              any_ip_address:
                type: boolean
          network_requirements:
            type: string
            enum: [Any, Ethernet]
          site:
            $ref: '#/definitions/site_object'
        required:
          - name
  policies:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        policy:
          $ref: '#/definitions/id_name'
  printer:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: HP 9th Floor
        description: Name of the printer
      category:
        type: string
        example: Printers
      uri:
        type: string
        example: lpd://10.1.20.204/
      CUPS_name:
        type: string
        example: HP_9th_Floor
      location:
        type: string
      model:
        type: string
        example: HP LaserJet 500 color MFP M575
      info:
        type: string
      notes:
        type: string
      make_default:
        type: boolean
      use_generic:
        type: boolean
        default: true
      ppd:
        type: string
        example: 9th_Floor_HP.ppd
      ppd_path:
        type: string
        example: /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Resources/Generic.ppd
      ppd_contents:
        type: string
    required:
      - name
  printers:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        printer:
          $ref: '#/definitions/id_name'
  purchasing:
    type: object
    properties:
      is_purchased:
        type: boolean
      is_leased:
        type: boolean
      po_number:
        type: string
      vendor:
        type: string
      applecare_id:
        type: string
      purchase_price:
        type: string
      purchasing_account:
        type: string
      po_date:
        type: string
      po_date_epoch:
        type: integer
      po_date_utc:
        type: string
      warranty_expires:
        type: string
      warranty_expires_epoch:
        type: integer
      warranty_expires_utc:
        type: string
      lease_expires:
        type: string
      lease_expires_epoch:
        type: integer
      lease_expires_utc:
        type: string
      life_expectancy:
        type: integer
      purchasing_contact:
        type: string
  removable_mac_address:
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: E0:AC:CB:97:36:G4
        description: MAC address to ignore when identifying computers
  removable_mac_addresses:
    type: array
    items:
      properties:
        removable_mac_address:
          $ref: '#/definitions/removable_mac_address'
  restricted_software:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: Restrict High Sierra
            description: Name of the restricted software
          process_name:
            type: string
            example: Install macOS High Sierra.app
          match_exact_process_name:
            type: boolean
          send_notification:
            type: boolean
          kill_process:
            type: boolean
          delete_executable:
            type: boolean
          display_message:
            type: string
            example: High Sierra is not yet supported, check Self Service after public release.
          site:
            $ref: '#/definitions/site_object'
        required:
          - name
          - process_name
      scope:
        type: object
        properties:
          all_computers:
            type: boolean
          computers:
            type: array
            items:
              properties:
                computer:
                  $ref: '#/definitions/id_name'
          computer_groups:
            type: array
            items:
              properties:
                computer_group:
                  $ref: '#/definitions/id_name'
          buildings:
            type: array
            items:
              properties:
                building:
                  $ref: '#/definitions/id_name'
          departments:
            type: array
            items:
              properties:
                department:
                  $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              computers:
                type: array
                items:
                  properties:
                    computer:
                      $ref: '#/definitions/id_name'
              computer_groups:
                type: array
                items:
                  properties:
                    computer_group:
                      $ref: '#/definitions/id_name'
              buildings:
                type: array
                items:
                  properties:
                    building:
                      $ref: '#/definitions/id_name'
              departments:
                type: array
                items:
                  properties:
                    department:
                      $ref: '#/definitions/id_name'
              users:
                type: array
                items:
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
  restricted_software_all:
    xml:
      name: restricted_software
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        restricted_software_title:
          $ref: '#/definitions/id_name'
  saved_searches:
    type: array
    items:
      properties:
        size:
          type: integer
          example: 1
        saved_search:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Advanced Computer Search Name
            type:
              type: string
              enum: [Computers, Mobile Devices, Users]
              example: Computers
  script:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Decrypt Drive
        description: Name of the script
      category:
        type: string
        example: None
      filename:
        type: string
      info:
        type: string
        example: Script information
      notes:
        type: string
        example: Script to decrypt FV2 encrypted drives
      priority:
        type: string
        enum: [Before, After, At Reboot]
      parameters:
        type: object
        properties:
          parameter4:
            type: string
          parameter5:
            type: string
          parameter6:
            type: string
          parameter7:
            type: string
          parameter8:
            type: string
          parameter9:
            type: string
          parameter10:
            type: string
          parameter11:
            type: string
      os_requirements:
        type: string
      script_contents:
        type: string
        example: echo "Sample script"
      script_contents_encoded:
        type: string
    required:
      - name
  scripts:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        script:
          $ref: '#/definitions/id_name'
  site:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Minneapolis
        description: Name of the site
    required:
      - name
  site_object:
    type: object
    xml:
      name: site
    properties:
      id:
        type: integer
        default: -1
      name:
        type: string
        example: None
        description: Name of the site
    required:
      - name
  sites:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        site:
          $ref: '#/definitions/site'
  smtp_server:
    type: object
    properties:
      enabled:
        type: boolean
      host:
        type: string
        example: smtp.gmail.com
        description: Hostname or IP address of the SMTP server
      port:
        type: integer
        example: 587
      timeout:
        type: integer
        example: 5
        description: Measured in seconds
      authorization_required:
        type: boolean
      username:
        type: string
      password:
        type: string
      ssl:
        type: boolean
      tls:
        type: boolean
      send_from_name:
        type: string
        example: Jamf Software Server
      send_from_email:
        type: string
        example: jamf@company.com
  software_title:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
        example: Google Chrome
        description: Name of the patch software title
      category:
        $ref: '#/definitions/category'
      notifications:
        type: object
        properties:
          jss_notification:
            type: boolean
          email_notification:
            type: boolean
      total_versions:
        type: integer
      total_computers:
        type: integer
      versions:
        type: array
        items:
          properties:
            version:
              type: object
              properties:
                software_version:
                  type: string
                  example: 64.0.3282.119
                size:
                  type: integer
                  example: 1
                computers:
                  type: array
                  items:
                    properties:
                      computer:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Admins MacBook Pro
                          mac_address:
                            type: string
                            example: E0:AC:CB:97:36:G4
                          alt_mac_address:
                            type: string
                            example: E0:AC:CB:97:36:G5
                          serial_number:
                            type: string
                            example: C02Q7KHTGFWF
                package:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Google Chrome.dmg
                    id:
                      type: integer
                      example: 1
                      default: -1
  software_update_server:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: New York SUS
        description: Name of the software update server
      ip_address:
        type: string
        example: 10.10.51.248
      port:
        type: integer
        example: 8088
      set_system_wide:
        type: boolean
    required:
      - name
      - ip_address
  software_update_servers:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        software_update_server:
          $ref: '#/definitions/id_name'
  user_extension_attribute:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: User Attributes
        description: Name of the user extension attribute
      description:
        type: string
        example: Text field for logging custom data
      data_type:
        type: string
        enum: [String, Integer, Date]
      input_type:
        type: object
        properties:
          type:
            type: string
            enum: [Text Field, Pop-up Menu]
            default: Text Field
    required:
      - name
  user_extension_attributes:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        user_extension_attribute:
          $ref: '#/definitions/id_name'
  user_group:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Teachers
        description: Name of the user group
      is_smart:
        type: boolean
      is_notify_on_change:
        type: boolean
      site:
        $ref: '#/definitions/site_object'
      criteria:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            criterion:
              type: object
              properties:
                name:
                  type: string
                  example: Email Address
                  description: Name of the criteria
                priority:
                  type: integer
                and_or:
                  type: string
                  enum: [and, or]
                search_type:
                  type: string
                  example: like
                  description: Operator
                value:
                  type: string
                  example: company.com
                opening_paren:
                  type: boolean
                  default: false
                closing_paren:
                  type: boolean
                  default: false
      users:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            user:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                username:
                  type: string
                  example: AHarrison
                full_name:
                  type: string
                  example: Ashley Harrison
                phone_number:
                  type: string
                  example: 123-555-6789
                email_address:
                  type: string
                  example: aharrison@company.com
    required:
      - name
      - is_smart
  user_groups:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        user_group:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Teachers
              description: Name of the user group
            is_smart:
              type: boolean
            is_notify_on_change:
              type: boolean
  user:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: AHarrison
        description: Name of the user
      full_name:
        type: string
        example: Ashley Harrison
      email:
        type: string
        example: aharrison@company.com
      email_address:
        type: string
        example: aharrison@company.com
      phone_number:
        type: string
        example: 123-555-6789
      position:
        type: string
        example: Teachers
      enable_custom_photo_url:
        type: boolean
      custom_photo_url:
        type: string
      ldap_server:
        type: object
        properties:
          id:
            type: integer
            example: -1
          name:
            type: string
            example: None
      extension_attributes:
        type: array
        items:
          properties:
            extension_attribute:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Teacher ID
                type:
                  type: string
                  enum: [String, Integer, Date]
                value:
                  type: string
                  example: K12
      sites:
        type: array
        items:
          properties:
            site:
              $ref: '#/definitions/site_object'
      links:
        type: object
        properties:
          computers:
            type: object
            properties:
              computer:
                $ref: '#/definitions/id_name'
          peripherals:
            type: object
            properties:
              peripheral:
                $ref: '#/definitions/id_name'
          mobile_devices:
            type: object
            properties:
              mobile_device:
                $ref: '#/definitions/id_name'
          vpp_assignments:
            type: object
            properties:
              vpp_assignment:
                $ref: '#/definitions/id_name'
          total_vpp_code_count:
            type: integer
    required:
      - name
  user_post:
    type: object
    xml:
      name: user
    properties:
      id:
        type: integer
      name:
        type: string
        example: AHarrison
        description: Name of the user
      full_name:
        type: string
        example: Ashley Harrison
      email:
        type: string
        example: aharrison@company.com
      email_address:
        type: string
        example: aharrison@company.com
      phone_number:
        type: string
        example: 123-555-6789
      position:
        type: string
        example: Teachers
      sites:
        type: array
        items:
          properties:
            site:
              $ref: '#/definitions/site_object'
    required:
      - name
  users:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        user:
          $ref: '#/definitions/id_name'
  vpp_account:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Company VPP Account
        description: Name of the VPP account
      contact:
        type: string
        example: Company Admin
      service_token:
        type: string
        example: eyJvcmdOYWadveaz40d2FyZSIsImV4cERhdGUiOiIyMDE3LTA5LTEzVDA5OjQ5OjA5LTA3MDAiLCJ0b2tlbiI6Ik5yVUtPK1RXeityUXQyWFpIeENtd0xxby8ydUFmSFU1NW40V1FTZU8wR1E5eFh4UUZTckVJQjlzbGdYei95WkpaeVZ3SklJbW0rWEhJdGtKM1BEZGRRPT0ifQ==
      account_name:
        type: string
        example: Company Name
      expiration_date:
        type: string
        example: 2018/09/13
      country:
        type: string
        example: US
      apple_id:
        type: string
        example: vpp@company.com
      site:
        $ref: '#/definitions/site_object'
      populate_catalog_from_vpp_content:
        type: boolean
      notify_disassociation:
        type: boolean
        default: true
      auto_register_managed_users:
        type: boolean
        default: false
    required:
      - name
      - service_token
  vpp_accounts:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        vpp_account:
          $ref: '#/definitions/id_name'
  vpp_assignment:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: 9th Grade VPP Assignments
          vpp_admin_account_id:
            type: integer
            example: 1
          vpp_admin_account_name:
            type: string
            example: Company Name
        required:
          - name
          - vpp_admin_account_id
      ios_apps:
        type: array
        items:
          properties:
            ios_app:
              type: object
              properties:
                adam_id:
                  type: integer
                  example: 767319014
                name:
                  type: string
                  example: Angry Birds
      mac_apps:
        type: array
        items:
          properties:
            mac_app:
              type: object
              properties:
                adam_id:
                  type: integer
                  example: 803453959
                name:
                  type: string
                  example: Slack
      ebooks:
        type: array
        items:
          properties:
            ebook:
              type: object
              properties:
                adam_id:
                  type: integer
                  example: 1058120411
                name:
                  type: string
                  example: Algebra 1
      scope:
        type: object
        properties:
          all_jss_users:
            type: boolean
          jss_users:
            type: array
            items:
              properties:
                user:
                  $ref: '#/definitions/id_name'
          jss_user_groups:
            type: array
            items:
              properties:
                user_group:
                  $ref: '#/definitions/id_name'
          limitations:
            type: object
            properties:
              user_groups:
                type: array
                items:
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              jss_users:
                type: array
                items:
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              user_groups:
                type: array
                items:
                  properties:
                    user_group:
                      type: object
                      properties:
                        name:
                          type: string
                          example: LDAP User Group Name
              jss_user_groups:
                type: array
                items:
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
  vpp_assignment_post:
    type: object
    xml:
      name: vpp_assignment
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
            example: 9th Grade VPP Assignments
          vpp_admin_account_id:
            type: integer
            example: 1
        required:
          - name
          - vpp_admin_account_id
  vpp_assignments:
    type: array
    items:
      properties:
        vpp_assignment:
          type: object
          properties:
            id:
              type: integer
              example: 1
            vpp_admin_account_id:
              type: integer
              example: 1
            name:
              type: string
              example: 9th Grade VPP Assignments
  vpp_invitation:
    type: object
    properties:
      general:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: User VPP Invitations
          vpp_account:
            type: object
            properties:
              id:
                type: integer
                example: 1
            required:
              - id
          distribution_method:
            type: string
            enum: [Prompt users to accept/make available in Self Service, Send emails, Make available in Self Service only]
          sender_name:
            type: string
          sender_email_address:
            type: string
          subject:
            type: string
          message:
            type: string
          require_login:
            type: boolean
            default: false
        required:
          - name
      scope:
        type: object
        properties:
          all_jss_users:
            type: boolean
          jss_users:
            type: array
            items:
              properties:
                user:
                  $ref: '#/definitions/id_name'
          jss_user_groups:
            type: array
            items:
              properties:
                user_group:
                  $ref: '#/definitions/id_name'
          limitations:
            type: object
            properties:
              user_groups:
                type: array
                items:
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
          exclusions:
            type: object
            properties:
              jss_users:
                type: array
                items:
                  properties:
                    user:
                      $ref: '#/definitions/id_name'
              jss_user_groups:
                type: array
                items:
                  properties:
                    user_group:
                      $ref: '#/definitions/id_name'
              user_groups:
                type: array
                items:
                  properties:
                    user_group:
                      type: object
                      properties:
                        name:
                          type: string
                          example: LDAP User Group Name
      invitation_usage:
        type: array
        items:
          properties:
            size:
              $ref: '#/definitions/size'
            usage:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                name:
                  type: string
                  example: Username
                email_address:
                  type: string
                  example: user@company.com
                status:
                  type: string
                  example: MDM Invitations was sent
                last_action_date_utc:
                  type: string
                  example: 2017-07-07T18:37:04.555-0500
                last_action_epoch:
                  type: integer
                  example: 1499470624555
                vpp_account:
                  type: string
                  example: Company VPP Account
  vpp_invitations:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        vpp_invitation:
          $ref: '#/definitions/id_name'
  webhook:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: Computer Enrolled Hook
      enabled:
        type: boolean
      url:
        type: string
        example: https://requestb.in/wsfasfws
      content_type:
        type: string
        enum: [text/xml, application/json]
        default: text/xml
      event:
        type: string
        enum: [ComputerAdded, ComputerCheckIn, ComputerInventoryCompleted, ComputerPolicyFinished, ComputerPushCapabilityChanged, JSSShutdown, JSSStartup, MobileDeviceCheckIn, MobileDeviceCommandCompleted, MobileDeviceEnrolled, MobileDevicePushSent, MobileDeviceUnEnrolled, PatchSoftwareTitleUpdated, PushSent, RestAPIOperation, SCEPChallenge, SmartGroupComputerMembershipChange, SmartGroupMobileDeviceMembershipChange]
      connection_timeout:
        type: integer
        default: 5
        description: Number of seconds to attempt to connect to the webhooks host server
      read_timeout:
        type: integer
        default: 2
        description: Number of seconds to wait for a response from the webhooks host server after sending a request
      authentication_type:
        type: string
        enum: [NONE, BASIC]
        default: NONE
      username:
        type: string
        example: webhook_admin
      password:
        type: string
      enable_display_fields_for_group_object:
        type: boolean
        default: false
      display_fields:
        type: array
        items:
          type: object
          properties:
            size:
              $ref: '#/definitions/size'
            display_field:
              type: object
              properties:
                name:
                  type: string
                  example: IP Address
                  description: Name of the display field to include for smart group based webhook events
    required:
      - name
      - event
      - url
  webhooks:
    type: array
    items:
      properties:
        size:
          $ref: '#/definitions/size'
        webhook:
          $ref: '#/definitions/id_name'
securityDefinitions:
  basicAuth:
    type: basic